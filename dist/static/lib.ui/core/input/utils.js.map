{"version":3,"file":"utils.js","sources":["../../src/input/utils.js"],"sourcesContent":["import _ from 'lodash'\nimport BigNumber from 'bignumber.js'\nimport { conformToMask } from 'text-mask-core/dist/textMaskCore'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst GLOBAL = 'g'\nconst EMPTY_STRING = ''\nconst DOT = '.'\nconst MINUS = '-'\nconst ZERO = '0'\nconst TRIM_REGEXP = /^(-)?0*([^.])/\nconst UNDERSCORE = '_'\nconst CARET_TRAP = '[]'\nconst REPLACE_STRING = '$1$2'\nconst trimStartNumber = (value) => value.replace(TRIM_REGEXP, REPLACE_STRING)\n\nexport const safeClamp = (value, min, max) => {\n    if (value === EMPTY_STRING || value === MINUS || (!_.isNumber(min) && !_.isNumber(max))) {\n        return trimStartNumber(value)\n    }\n\n    const current = new BigNumber(value)\n    const clamped = BigNumber.min(\n        BigNumber.max(\n            new BigNumber(_.isNumber(min) ? min : -Infinity),\n            current\n        ),\n        new BigNumber(_.isNumber(max) ? max : Infinity)\n    ).toPrecision()\n\n    return current === clamped ? trimStartNumber(value) : clamped\n}\n\nconst getNumberRegexp = (decimalSymbol) => new RegExp(`[^\\\\-\\\\d\\\\${decimalSymbol}]`, GLOBAL)\n\nexport const unmaskNumberValue = (value, {\n    decimalSymbol,\n    allowEmpty,\n    blur\n}) => {\n    let unmaskedValue = _.toString(value)\n        .replace(getNumberRegexp(decimalSymbol), EMPTY_STRING)\n        .replace(decimalSymbol, DOT)\n\n    const fastNumber = _.toNumber(unmaskedValue)\n    if (blur && !allowEmpty && !fastNumber) {\n        unmaskedValue = ZERO\n    } else if (blur && fastNumber !== 0 && !fastNumber) {\n        unmaskedValue = EMPTY_STRING\n    } else if (blur && _.last(unmaskedValue) === DOT) {\n        unmaskedValue = _.replace(unmaskedValue, DOT, '')\n    }\n\n    return unmaskedValue\n}\n\n\nexport const prepareToMaskNumberValue = (value, { allowDecimal = false, decimalSymbol }) => {\n    if (allowDecimal) {\n        return _.toString(value).replace(DOT, decimalSymbol)\n    }\n\n    return _.first(_.toString(value).split(DOT))\n}\n\nconst clearTraps = (arrayMask) => _.reject(arrayMask, (item) => item === CARET_TRAP)\n\nconst getConformedValue = (value, arrayMask) => _.get(conformToMask(value, arrayMask), 'conformedValue', EMPTY_STRING)\n\nexport const maskNumberValue = (value, {\n    allowDecimal,\n    decimalSymbol,\n    mask,\n    prefix = EMPTY_STRING,\n    suffix = EMPTY_STRING\n}) => {\n    const preparedValue = prepareToMaskNumberValue(value, { allowDecimal, decimalSymbol })\n    const dirtyMask = mask(preparedValue)\n    const clearMask = clearTraps(dirtyMask)\n    const conformedValue = getConformedValue(value, clearMask)\n    return conformedValue\n        .replace(`${prefix}${UNDERSCORE}${suffix}`, EMPTY_STRING)\n        .replace(UNDERSCORE, EMPTY_STRING)\n}\n\nexport const formatNumberValue = (value, {\n    allowDecimal = true,\n    decimalSymbol = ',',\n    prefix = EMPTY_STRING,\n    suffix = EMPTY_STRING,\n    includeThousandsSeparator = true,\n    thousandsSeparatorSymbol = ' ',\n    decimalLimit = null,\n    integerLimit = null,\n    requireDecimal = false,\n    allowNegative = true,\n    allowLeadingZeroes = false\n} = {}) => {\n    const mask = createNumberMask({\n        prefix,\n        suffix,\n        allowDecimal,\n        decimalSymbol,\n        includeThousandsSeparator,\n        thousandsSeparatorSymbol,\n        decimalLimit,\n        integerLimit,\n        requireDecimal,\n        allowNegative,\n        allowLeadingZeroes\n    })\n\n    return maskNumberValue(value, {\n        allowDecimal,\n        decimalSymbol,\n        mask,\n        prefix,\n        suffix\n    })\n}\n\nconst ZERO_PX = '0px'\nconst NO_DIGITS = /^\\D+$/\n// eslint-disable no-param-reassign, comment: работа с размерами в realtime\nconst getExpectedDimensionFactory = (dimension) => {\n    const capitalizeDimension = _.capitalize(dimension)\n    const scroll = `scroll${capitalizeDimension}`\n    const offset = `offset${capitalizeDimension}`\n    const client = `client${capitalizeDimension}`\n    const paddingStart = dimension === 'height' ? 'paddingTop' : 'paddingLeft'\n    const paddingEnd = dimension === 'height' ? 'paddingBottom' : 'paddingRight'\n\n    return (element, min, max = Infinity) => {\n        if (element && min) {\n            if (element[scroll] === 0) {\n                return void 0\n            }\n            /**\n             * IE-инпуты имеют неправильный scrollWidth\n             * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11325194/\n             * Для них необходимо проверять через div ширину контента и подставлять его значение\n             */\n            const responsiveElement = document.createElement('div')\n            responsiveElement.innerHTML = element.value.replace(/\\n/g, '<br />')\n            responsiveElement.className = element.className\n            const styles = getComputedStyle(element)\n            _.forEach(styles, (value, key) => {\n                // фикс для FF (он генерирует стили в разных форматах + массивом)\n                if (NO_DIGITS.test(key)) {\n                    responsiveElement.style[key] = value\n                }\n            })\n\n            element.parentNode.appendChild(responsiveElement)\n            if (element.tagName === 'INPUT') {\n                responsiveElement.style.whiteSpace = 'nowrap'\n            }\n\n            const reservedPaddingStart = responsiveElement.style[paddingStart]\n            const reservedPaddingEnd = responsiveElement.style[paddingEnd]\n            responsiveElement.style[dimension] = ZERO_PX\n            responsiveElement.style[paddingStart] = ZERO_PX\n            responsiveElement.style[paddingEnd] = ZERO_PX\n\n            const mainSize = responsiveElement[scroll] + responsiveElement[offset] - responsiveElement[client]\n\n            responsiveElement.style[paddingStart] = reservedPaddingStart\n            responsiveElement.style[paddingEnd] = reservedPaddingEnd\n\n            const newValue = _.clamp(mainSize + parseFloat(styles[paddingStart]) + parseFloat(styles[paddingEnd]), min, max)\n\n            responsiveElement.style[dimension] = `${newValue}px`\n\n            const expectedDimension = responsiveElement.style[dimension]\n            element.parentNode.removeChild(responsiveElement)\n\n            return expectedDimension\n        }\n\n        return void 0\n    }\n}\n// eslint-enable\n\nconst setDimensionFactory = (dimension) => {\n    const capitalizeDimension = _.capitalize(dimension)\n    const scroll = `scroll${capitalizeDimension}`\n    const getExpectedDimension = getExpectedDimensionFactory(dimension)\n\n    return (element, min, max = Infinity) => {\n        if (element && min) {\n            if (element[scroll] === 0) {\n                return\n            }\n\n            const expectedDimension = getExpectedDimension(element, min, max)\n\n            if (expectedDimension) {\n                element.style[dimension] = expectedDimension // eslint-disable-line no-param-reassign, comment: работа с размерами в realtime\n            }\n        }\n    }\n}\n\nexport const getExpectedHeight = getExpectedDimensionFactory('height')\nexport const getExpectedWidth = getExpectedDimensionFactory('width')\nexport const setHeight = setDimensionFactory('height')\nexport const setWidth = setDimensionFactory('width')\n\n/**\n * Функция определения изменений в поле ввода\n *\n * @param {String} nextValue - новое значение в поле ввода\n * @param {Number} prevSelectionStart - начало каретки до ввода\n * @param {Number} nextSelection - начало или конец каретки после ввода\n * @return {String} - произведенное изменение\n */\nexport const getInputDiff = (nextValue, prevSelectionStart, nextSelection) =>\n    nextValue.substring(prevSelectionStart, nextSelection)\n"],"names":["GLOBAL","EMPTY_STRING","DOT","MINUS","ZERO","TRIM_REGEXP","UNDERSCORE","CARET_TRAP","REPLACE_STRING","trimStartNumber","value","replace","safeClamp","min","max","_","isNumber","current","BigNumber","clamped","Infinity","toPrecision","getNumberRegexp","decimalSymbol","RegExp","unmaskNumberValue","allowEmpty","blur","unmaskedValue","toString","fastNumber","toNumber","last","prepareToMaskNumberValue","allowDecimal","first","split","clearTraps","arrayMask","reject","item","getConformedValue","get","conformToMask","maskNumberValue","mask","prefix","suffix","preparedValue","dirtyMask","clearMask","conformedValue","formatNumberValue","includeThousandsSeparator","thousandsSeparatorSymbol","decimalLimit","integerLimit","requireDecimal","allowNegative","allowLeadingZeroes","createNumberMask","ZERO_PX","NO_DIGITS","getExpectedDimensionFactory","dimension","capitalizeDimension","capitalize","scroll","offset","client","paddingStart","paddingEnd","element","responsiveElement","document","createElement","innerHTML","className","styles","getComputedStyle","forEach","key","test","style","parentNode","appendChild","tagName","whiteSpace","reservedPaddingStart","reservedPaddingEnd","mainSize","newValue","clamp","parseFloat","expectedDimension","removeChild","setDimensionFactory","getExpectedDimension","getExpectedHeight","getExpectedWidth","setHeight","setWidth","getInputDiff","nextValue","prevSelectionStart","nextSelection","substring"],"mappings":"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"}