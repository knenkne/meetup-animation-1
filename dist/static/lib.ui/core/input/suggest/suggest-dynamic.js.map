{"version":3,"file":"suggest-dynamic.js","sources":["../../../src/input/suggest/suggest-dynamic.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport { Suggest } from './suggest'\nimport { canBeRequestedByTyping, canBeRequestedByScrolling } from './utils'\n\n/* eslint-disable valid-jsdoc, comment: некорректный парсинг jsdoc */\n/**\n * [Zeplin](https://app.zeplin.io/project/59312e1ebdf1da6fc8d37ffb/dashboard?q=input%20suggest)\n * Текстовое поле с выпадающим списком с локальным хранением данных и динамической работой по таймаутам\n *\n * @param {Object} props - свойства компонента\n * @return {JSX} - компонент\n */\nexport class SuggestDynamic extends React.Component {\n    static displayName = 'Input.Suggest.Dynamic'\n\n    static propTypes = {\n        value: PropTypes.string,\n        onChange: PropTypes.func,\n        onChangeOption: PropTypes.func,\n        onChangeInput: PropTypes.func,\n        onBlur: PropTypes.func,\n        /**\n         * Первоначальный state.query\n         */\n        initialQuery: PropTypes.string,\n        /**\n         * Первоначальный state.options\n         */\n        initialOptions: PropTypes.arrayOf(PropTypes.shape({\n            title: PropTypes.string,\n            description: PropTypes.string,\n            value: PropTypes.string.isRequired,\n            icon: PropTypes.string\n        })),\n        /**\n         * Считается ли значение маскированным (надо ли его стирать по первому вводу)\n         */\n        masked: PropTypes.bool,\n        /**\n         * Обязательный timeout между последним вводом и возможностью вызова onDataRequest\n         */\n        keyboardTimeout: PropTypes.number,\n        /**\n         * Обязательный timeout между началом запроса и включением mode=\"long\" у компонента Input.Suggest\n         */\n        requestTimeout: PropTypes.number,\n        /**\n         * Режим работы справочника: (only - выбор только из справочника, on - опциональный выбор из справочника, off - справочник не предоставляется)\n         */\n        mode: PropTypes.oneOf(['only', 'off', 'on']),\n        /**\n         * Запрос данных; получает на вход query - введенную строку, offset - при скролле\n         */\n        onDataRequest: PropTypes.func\n    }\n\n    static defaultProps = {\n        value: void 0,\n        onChange: _.noop,\n        onChangeOption: _.noop,\n        onChangeInput: _.noop,\n        onBlur: _.noop,\n        initialQuery: void 0,\n        initialOptions: [],\n        masked: false,\n        keyboardTimeout: 0,\n        requestTimeout: void 0,\n        mode: 'off',\n        onDataRequest: _.noop\n    }\n\n    state = {\n        query: this.props.initialQuery,\n        masked: this.props.masked,\n        options: this.props.initialOptions,\n        isLoading: false,\n        isLongRequest: false,\n        isAlreadyRequested: false,\n        isFetchError: false,\n        isFullSuggestLoaded: false\n    }\n\n    // eslint-disable-next-line babel/camelcase, comment: React UNSAFE method\n    UNSAFE_componentWillReceiveProps (nextProps) {\n        if (this.props.value !== nextProps.value) {\n            const selectedOption = this.getCurrentOption(nextProps.value)\n            if (selectedOption) {\n                this.setState({\n                    query: selectedOption.title,\n                })\n            } else {\n                this.setState({\n                    query: '',\n                    options: []\n                })\n            }\n        }\n    }\n\n    getCurrentOption = (value) => _.find(this.state.options, { value })\n\n    handleChangeInput = (event) => {\n        clearTimeout(this.requestTimer)\n\n        const { mode, value, keyboardTimeout } = this.props\n        const query = _.get(event, 'target.value', event)\n\n        this.setState({\n            query,\n            masked: false,\n            options: [],\n            isFullSuggestLoaded: false,\n            isAlreadyRequested: false,\n            isFetchError: false\n        })\n\n        this.props.onChangeInput(query, event)\n\n        this.changeValue(query)\n\n        if (canBeRequestedByTyping(query, this.state.masked, mode, value)) {\n            this.requestTimer = setTimeout(() => {\n                this.makeRequest(query)\n            }, keyboardTimeout)\n        }\n    }\n\n    handleScroll = (event) => {\n        const { query, masked, isFullSuggestLoaded, isLoading } = this.state\n        const { mode, value } = this.props\n        if (canBeRequestedByScrolling(event, isFullSuggestLoaded, isLoading)\n            && canBeRequestedByTyping(query, masked, mode, value)\n        ) {\n            this.makeRequest(query, true)\n        }\n    }\n\n    handleChangeOption = (value) => {\n        this.setState({\n            query: this.getCurrentOption(value).title\n        })\n\n        this.props.onChange(value)\n        this.props.onChangeOption(value)\n    }\n\n    handleRetry = () => {\n        this.makeRequest(this.state.query)\n    }\n\n    handleBlur = (event) => {\n        this.props.onBlur(this.props.value, event)\n    }\n\n    changeValue = (query) => {\n        const { mode, onChange, value } = this.props\n        if (this.state.masked || (mode === 'only' && value)) {\n            onChange('')\n        } else if (mode === 'off' || mode === 'on') {\n            onChange(query)\n        }\n    }\n\n    async makeRequest (query, isAdding) {\n        clearTimeout(this.longRequestTimer)\n\n        this.setState({\n            isLoading: true,\n            isLongRequest: false\n        })\n\n        const requestParams = { query, offset: this.state.options.length }\n        this.recentRequest = requestParams\n\n        if (this.props.requestTimeout) {\n            this.longRequestTimer = setTimeout(() => {\n                this.setState({\n                    isLongRequest: true\n                })\n            }, this.props.requestTimeout)\n        }\n\n        try {\n            const suggestions = await this.props.onDataRequest(query, this.state.options.length)\n\n            if (_.isEqual(this.recentRequest, requestParams)) {\n                this.setState({\n                    isLoading: false,\n                    options: isAdding ? _.concat(this.state.options, suggestions) : suggestions,\n                    isFetchError: false,\n                    isFullSuggestLoaded: _.isEmpty(suggestions),\n                    isLongRequest: false,\n                    isAlreadyRequested: true\n                })\n            }\n        } catch (error) {\n            if (_.isEqual(this.recentRequest, requestParams)) {\n                this.setState({\n                    isLoading: false,\n                    options: [],\n                    isFetchError: true,\n                    isFullSuggestLoaded: false,\n                    isLongRequest: false,\n                    isAlreadyRequested: true\n                })\n            }\n            throw new Error(error)\n        } finally {\n            clearTimeout(this.longRequestTimer)\n        }\n    }\n\n    render () {\n        const { query, options, isLoading, isLongRequest, isFetchError, isAlreadyRequested } = this.state\n\n        let mode\n        if (isLongRequest) {\n            mode = 'long'\n        } else if (isFetchError) {\n            mode = 'error'\n        } else if (_.isEmpty(options) && query && isAlreadyRequested) {\n            mode = 'noMatches'\n        }\n\n        return (\n            <Suggest\n                {..._.omit(this.props, ['onChange', 'query'])}\n                options={options}\n                mode={mode}\n                query={query}\n                isLoading={isLoading}\n                onChangeOption={this.handleChangeOption}\n                onChangeInput={this.handleChangeInput}\n                onRetry={this.handleRetry}\n                onBlur={this.handleBlur}\n                onScroll={this.handleScroll}\n            />\n        )\n    }\n}\n"],"names":["SuggestDynamic","query","props","initialQuery","masked","options","initialOptions","isLoading","isLongRequest","isAlreadyRequested","isFetchError","isFullSuggestLoaded","value","_","find","state","event","clearTimeout","requestTimer","mode","keyboardTimeout","get","setState","onChangeInput","changeValue","canBeRequestedByTyping","setTimeout","makeRequest","canBeRequestedByScrolling","getCurrentOption","title","onChange","onChangeOption","onBlur","nextProps","selectedOption","isAdding","longRequestTimer","requestParams","offset","length","recentRequest","requestTimeout","onDataRequest","suggestions","isEqual","concat","isEmpty","Error","omit","handleChangeOption","handleChangeInput","handleRetry","handleBlur","handleScroll","React","Component","PropTypes","string","func","arrayOf","shape","description","isRequired","icon","bool","number","oneOf","noop"],"mappings":"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"}