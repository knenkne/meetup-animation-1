{"version":3,"file":"range-picker.js","sources":["../../../src/calendar/range-picker/range-picker.jsx"],"sourcesContent":["/* eslint-disable max-lines, comment: fat component */\n/* eslint-disable @sbol/common/no-cyrillic-outside-cms, comment: уберем после внедрения локалей */\nimport React, { Fragment, useState, useEffect, useCallback } from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\nimport {\n    format,\n    isValid,\n    isBefore,\n    startOfDay,\n    endOfDay,\n    subMonths,\n    addMonths,\n    subYears,\n    addYears,\n    isSameDay\n} from 'date-fns'\n\nimport { Input } from '../../input'\nimport PopupWrapper from '../../popup-wrapper/popup-wrapper'\nimport { mergeTheme } from '../../utils'\nimport { SubmitButton } from '../components/common/submit-button'\nimport { LOCALE, RANGE_MODES, MASK_DATE } from '../constants'\nimport { fullISOFormat, isDateValid, parseRuDate } from '../utils'\n\nimport style from './style.css'\nimport RangeInput from './components/range-input'\nimport Month from './components/month'\nimport Months from './components/months'\nimport Years from './components/years'\nimport RangeControl from './components/range-control'\n\nconst inputTheme = mergeTheme(Input.theme, { input: style.input })\nconst emptyArray = []\nconst emptyString = ''\n// Для подсвечивания поля с ошибкой без текста ошибки\nconst notEmptyString = ' '\n\n// eslint-disable-next-line no-warning-comments, comment: Чтобы не забыть\n// TODO Убрать, когда будет внедрятся локализация lib.ui\nconst localization = {\n    accept: 'Применить',\n    reset: 'Сбросить',\n    error: 'Вы ввели недопустимую дату'\n}\n\n// eslint-disable-next-line complexity, comment: complexity of 19\nconst RangePicker = (props) => {\n\n    const {\n        from: initialFrom,\n        to: initialTo,\n        naked,\n        names,\n        disabled,\n        onChange,\n        restriction,\n        initialViewDate,\n        description\n    } = props\n\n\n    const fromFieldName = _.get(names, '0', 'range-picker:from')\n    const fromFieldProps = _.get(props, [fromFieldName, 'input'], { value: emptyString })\n    const fromFieldMeta = _.get(props, [fromFieldName, 'meta'])\n    const toFieldName = _.get(names, '1', 'range-picker:to')\n    const toFieldProps = _.get(props, [toFieldName, 'input'], { value: emptyString })\n    const toFieldMeta = _.get(props, [toFieldName, 'meta'])\n\n    const initialDate = isValid(initialViewDate) ? fullISOFormat(initialViewDate) : fullISOFormat(new Date())\n\n    const [toInputRef, setToInputRef] = useState(emptyString)\n    const [fromInputRef, setFromInputRef] = useState(emptyString)\n\n    const [mode, setMode] = useState(RANGE_MODES.MONTH)\n\n    const [rangeFrom, setRangeFrom] = useState(fromFieldProps.value)\n    const [rangeTo, setRangeTo] = useState(toFieldProps.value)\n\n    const [rangeInputFrom, setRangeInputFrom] = useState(fromFieldProps.value)\n    const [rangeInputTo, setRangeInputTo] = useState(toFieldProps.value)\n\n    const focusedInput = _.findKey(props, 'meta.active') || null\n\n    const [isRangeMode, setIsRangeMode] = useState(false)\n    const [viewDate, setViewDate] = useState(initialDate)\n\n    const [isFromError, setIsFromError] = useState(emptyString)\n    const [isToError, setIsToError] = useState(emptyString)\n    const [isErrorShown, setIsErrorShown] = useState(false)\n\n    const setFocusBack = useCallback(() => {\n        switch (focusedInput) {\n            case toFieldName: {\n                toInputRef.focus()\n                break\n            }\n\n            case fromFieldName: {\n                fromInputRef.focus()\n                break\n            }\n\n            default: {\n                break\n            }\n        }\n    }, emptyArray)\n\n    const setMonthMode = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n        \n        setMode(RANGE_MODES.MONTH)\n    }, [toInputRef, fromInputRef])\n    const setMonthsMode = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n        \n        setMode(RANGE_MODES.MONTHS)\n    }, [toInputRef, fromInputRef])\n    const setYearsMode = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n\n        setMode(RANGE_MODES.YEARS)\n    }, [toInputRef, fromInputRef])\n\n    const isDateAllowed = useCallback((date) => {\n        const parsedDate = parseRuDate(date)\n        return restriction(parsedDate, parsedDate && {\n            start: startOfDay(parsedDate),\n            end: endOfDay(parsedDate)\n        })\n    }, emptyArray)\n\n    const getToInputRef = useCallback((element) => setToInputRef(element), [])\n    const getFromInputRef = useCallback((element) => setFromInputRef(element), [])\n\n    const fillRangeInitial = useCallback(() => {\n        if (isValid(initialFrom) && isValid(initialTo)) {\n            const formattedFrom = fullISOFormat(initialFrom)\n            const formattedTo = fullISOFormat(initialTo)\n            \n            if (fromFieldProps?.onChange) {\n                fromFieldProps.onChange(formattedFrom)\n            }\n    \n            if (toFieldProps?.onChange) {\n                toFieldProps.onChange(formattedTo)\n            }\n\n            setRangeInputFrom(formattedFrom)\n            setRangeInputTo(formattedTo)\n            setRangeFrom(formattedFrom)\n            setRangeTo(formattedTo)\n            setViewDate(formattedFrom)\n        }\n    }, emptyArray)\n\n    const handleSubmit = useCallback(() => {\n        const isEmptyDates = rangeTo === emptyString && rangeFrom === emptyString\n        const isRangeFromValid = isEmptyDates || (rangeFrom && rangeFrom.length >= MASK_DATE.length && isValid(rangeFrom) && isDateAllowed(rangeFrom) && !isFromError)\n        const isRangeToValid = isEmptyDates || (rangeTo && rangeTo.length >= MASK_DATE.length && isValid(rangeTo) && isDateAllowed(rangeTo) && !isToError)\n\n        if (!isRangeFromValid) {\n            setIsFromError(notEmptyString)\n        }\n        \n        if (!isRangeToValid) {\n            setIsToError(notEmptyString)\n        }\n\n        if (!isRangeFromValid || !isRangeToValid) {\n            setIsErrorShown(true)\n\n            return\n        }\n\n        onChange({ from: rangeFrom, to: rangeTo })\n    }, [rangeFrom, rangeTo, isFromError, isToError])\n\n    const handleReset = useCallback((isViewDate = true) => {\n        setIsRangeMode(false)\n        setRangeFrom(emptyString)\n        setRangeTo(emptyString)\n        setRangeInputFrom(emptyString)\n        setRangeInputTo(emptyString)\n\n        if (fromFieldProps?.onChange) {\n            fromFieldProps.onChange(emptyString)\n        }\n\n        if (toFieldProps?.onChange) {\n            toFieldProps.onChange(emptyString)\n        }\n\n        setIsFromError(emptyString)\n        setIsToError(emptyString)\n        setIsErrorShown(false)\n\n        if (isViewDate) {\n            setViewDate(initialViewDate)\n        }\n\n    }, emptyArray)\n\n    const handleChangeInputFrom = useCallback((date) => {\n        if (fromFieldProps?.onChange) {\n            fromFieldProps.onChange(date)\n        }\n\n        setRangeInputFrom(date)\n        \n        if (isDateValid(date)) {\n            const parsedDate = parseRuDate(date)\n\n            setRangeInputFrom(parsedDate)\n            setViewDate(parsedDate)\n            setRangeFrom(parsedDate)\n\n            if (isDateAllowed(date)) {\n\n                setIsFromError(emptyString)\n\n                if (isValid(rangeInputTo) && isDateAllowed(rangeInputTo)) {\n                    if (isBefore(parsedDate, rangeInputTo) || isSameDay(parsedDate, rangeInputTo)) {\n                        setIsFromError(emptyString)\n                        setIsErrorShown(false)\n                    } else {\n                        setIsFromError(notEmptyString)\n                    }\n                } else if (toInputRef) {\n                    toInputRef.focus()\n                }\n            } else {\n                setIsFromError(notEmptyString)\n            }\n        }\n    }, [rangeInputFrom, isRangeMode, isFromError, isErrorShown])\n\n    const handleChangeInputTo = useCallback((date) => {\n        if (toFieldProps?.onChange) {\n            toFieldProps.onChange(date)\n        }\n\n        setRangeInputTo(date)\n\n        if (isDateValid(date)) {\n            const parsedDate = parseRuDate(date)\n\n            setRangeTo(parsedDate)\n            setRangeInputTo(parsedDate)\n            setViewDate(parsedDate)\n\n            if (isDateAllowed(date)) { \n                \n                setIsToError(emptyString)\n                \n                if (isValid(rangeInputFrom) && isDateAllowed(rangeInputFrom)) {\n                    if (isBefore(rangeInputFrom, parsedDate) || isSameDay(rangeInputFrom, parsedDate)) {\n                        setIsToError(emptyString)\n                        setIsErrorShown(false)\n                    } else {\n                        setIsToError(notEmptyString)\n                    }\n                } else if (fromInputRef) {\n                    fromInputRef.focus()\n                }\n            } else {\n                setIsToError(notEmptyString)\n            }\n        }\n    }, [rangeInputTo, isRangeMode, isFromError, isErrorShown])\n\n    const handleChangeRangeFrom = useCallback((date) => {\n        if ((rangeFrom && rangeTo) || isBefore(rangeTo, date)) {\n            handleReset(false)\n        }\n\n        const value = fullISOFormat(_.get(date, 'target.value', date))\n\n        if (fromFieldProps?.onChange) {\n            fromFieldProps.onChange(value)\n        }\n\n        setRangeInputFrom(value)\n        setRangeFrom(value)\n\n        setIsFromError(emptyString)\n        setIsErrorShown(false)\n    }, [rangeFrom, rangeTo])\n    \n    const handleChangeRangeTo = useCallback((date) => {\n        const value = fullISOFormat(_.get(date, 'target.value', date))\n\n        if (isBefore(value, rangeFrom)) {\n            handleChangeRangeFrom(value)\n\n            return\n        }\n\n        if (toFieldProps?.onChange) {\n            toFieldProps.onChange(value)\n        }\n\n        setRangeInputTo(value)\n        setRangeTo(value)\n\n        setIsToError(emptyString)\n        setIsErrorShown(false)\n    }, [rangeFrom, rangeTo])\n\n    const handleChangePrevMonth = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n\n        const resultValue = fullISOFormat(subMonths(e.currentTarget.value, 1))\n        setViewDate(resultValue)\n    }, [toInputRef, fromInputRef])\n    const handleChangeNextMonth = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n\n        const resultValue = fullISOFormat(addMonths(e.currentTarget.value, 1))\n        setViewDate(resultValue)\n    }, [toInputRef, fromInputRef])\n    const handleChangePrevYear = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n\n        const resultValue = fullISOFormat(subYears(e.currentTarget.value, 1))\n        setViewDate(resultValue)\n    }, [toInputRef, fromInputRef])\n    const handleChangeNextYear = useCallback((e) => {\n        e.preventDefault()\n        setFocusBack()\n        \n        const resultValue = fullISOFormat(addYears(e.currentTarget.value, 1))\n        setViewDate(resultValue)\n    }, [toInputRef, fromInputRef])\n\n    const isMonthMode = mode === RANGE_MODES.MONTH\n    const isMonthsMode = mode === RANGE_MODES.MONTHS\n    const isYearsMode = mode === RANGE_MODES.YEARS\n\n    const isError = (isToError || isFromError) && isErrorShown\n\n    const isResetButtonVisible = rangeFrom || rangeTo\n\n    const Wrapper = naked ? Fragment : PopupWrapper\n\n    useEffect(fillRangeInitial, emptyArray)\n    useEffect(() => {\n        if (rangeTo || rangeFrom) {\n            setIsRangeMode(true)\n        }\n\n        if (rangeTo && rangeFrom) {\n            setIsRangeMode(false)\n        }\n\n        if (isBefore(rangeFrom, rangeTo) && isDateAllowed(rangeFrom) && isDateAllowed(rangeTo)) {\n            setIsErrorShown(emptyString)\n            setIsFromError(emptyString)\n            setIsToError(emptyString)\n        }\n\n    }, [rangeFrom, rangeTo])\n\n    return (\n        <Wrapper>\n            <div className={style.rangeWrapper}>\n                <div className={cn(style.inputsWrapper, isError && style.inputsWrapperError)}>\n                    <RangeInput\n                        {...fromFieldProps}\n                        {...fromFieldMeta}\n                        value={rangeInputFrom}\n                        error={isFromError}\n                        theme={inputTheme}\n                        disabled={disabled}\n                        id={fromFieldName}\n                        refWrapper={getFromInputRef}\n                        onChange={handleChangeInputFrom}\n                    />\n                    <div className={style.inputsDivider} />\n                    <RangeInput\n                        {...toFieldProps}\n                        {...toFieldMeta}\n                        value={rangeInputTo}\n                        error={isToError}\n                        theme={inputTheme}\n                        disabled={disabled}\n                        id={toFieldName}\n                        refWrapper={getToInputRef}\n                        onChange={handleChangeInputTo}\n                    />\n                </div>\n                {isError && (\n                    <div className={style.errorWrapper}>\n                        <span>{description}</span>\n                    </div>\n                )}\n                <div className={style.contentWrapper}>\n                    <div\n                        className={cn(\n                            style.controlsWrapper,\n                            isMonthsMode && style.controlsWrapperMonths,\n                            isYearsMode && style.controlsWrapperYears,\n                        )}\n                    >\n                        <RangeControl\n                            dataUnit=\"range:switcher:months\"\n                            viewDate={viewDate}\n                            title={format(viewDate, 'MMMM', LOCALE)}\n                            isActive={isMonthsMode}\n                            onControlClick={isMonthsMode ? setMonthMode : setMonthsMode}\n                            onPrevClick={handleChangePrevMonth}\n                            onNextClick={handleChangeNextMonth}\n                            customControlClassName={cn(style.rangeControl, style.monthsControl)}\n                        />\n                        <RangeControl\n                            onClick={isYearsMode ? setMonthMode : setYearsMode}\n                            viewDate={viewDate}\n                            dataUnit=\"range:switcher:years\"\n                            title={format(viewDate, 'YYYY', LOCALE)}\n                            isActive={isYearsMode}\n                            onControlClick={isYearsMode ? setMonthMode : setYearsMode}\n                            onPrevClick={handleChangePrevYear}\n                            onNextClick={handleChangeNextYear}\n                            customControlClassName={cn(style.rangeControl, style.yearsControl)}\n                        />\n                    </div>\n                    {isMonthMode && (\n                        <Month\n                            isFromError={isFromError}\n                            isToError={isToError}\n                            viewDate={viewDate}\n                            restriction={restriction}\n                            isRangeMode={isRangeMode}\n                            setIsRangeMode={setIsRangeMode}\n                            rangeTo={rangeTo}\n                            handleChangeRangeFrom={handleChangeRangeFrom}\n                            rangeFrom={rangeFrom}\n                            handleChangeRangeTo={handleChangeRangeTo}\n                            focusedInput={focusedInput}\n                        />\n                    )}\n                    {isMonthsMode && (\n                        <Months\n                            viewDate={viewDate}\n                            setViewDate={setViewDate}\n                            restriction={restriction}\n                            setMonthMode={setMonthMode}\n                        />\n                    )}\n                    {isYearsMode && (\n                        <Years\n                            viewDate={viewDate}\n                            setViewDate={setViewDate}\n                            restriction={restriction}\n                            setMonthMode={setMonthMode}\n                            setFocusBack={setFocusBack}\n                        />\n                    )}\n                    {isMonthMode && (\n                        <div className={cn(style.bottomButtons, isResetButtonVisible && style.bottomButtonsBetween)}>\n                            <SubmitButton\n                                onSubmit={handleSubmit}\n                                text={localization.accept}\n                            />\n                            {isResetButtonVisible && (\n                                <SubmitButton\n                                    onSubmit={handleReset}\n                                    text={localization.reset}\n                                    isReset\n                                />\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </Wrapper>\n    )\n}\n\nRangePicker.propTypes = {\n    from: PropTypes.string,\n    to: PropTypes.string,\n    naked: PropTypes.bool,\n    names: PropTypes.array,\n    disabled: PropTypes.bool,\n    onChange: PropTypes.func,\n    restriction: PropTypes.func,\n    initialViewDate: PropTypes.string,\n    description: PropTypes.string\n}\n\nRangePicker.defaultProps = {\n    from: emptyString,\n    to: emptyString,\n    naked: false,\n    names: [],\n    disabled: false,\n    onChange: _.noop,\n    restriction: _.stubTrue,\n    description: localization.error,\n    initialViewDate: fullISOFormat(new Date()),\n}\n\nRangePicker.displayName = 'Calendar.RangePicker'\n\nexport { RangePicker }\n"],"names":["inputTheme","mergeTheme","Input","theme","input","style","emptyArray","emptyString","notEmptyString","localization","accept","reset","error","RangePicker","props","initialFrom","from","initialTo","to","naked","names","disabled","onChange","restriction","initialViewDate","description","fromFieldName","_","get","fromFieldProps","value","fromFieldMeta","toFieldName","toFieldProps","toFieldMeta","initialDate","isValid","fullISOFormat","Date","useState","toInputRef","setToInputRef","fromInputRef","setFromInputRef","RANGE_MODES","MONTH","mode","setMode","rangeFrom","setRangeFrom","rangeTo","setRangeTo","rangeInputFrom","setRangeInputFrom","rangeInputTo","setRangeInputTo","focusedInput","findKey","isRangeMode","setIsRangeMode","viewDate","setViewDate","isFromError","setIsFromError","isToError","setIsToError","isErrorShown","setIsErrorShown","setFocusBack","useCallback","focus","setMonthMode","e","preventDefault","setMonthsMode","MONTHS","setYearsMode","YEARS","isDateAllowed","date","parsedDate","parseRuDate","start","startOfDay","end","endOfDay","getToInputRef","element","getFromInputRef","fillRangeInitial","formattedFrom","formattedTo","handleSubmit","isEmptyDates","isRangeFromValid","length","MASK_DATE","isRangeToValid","handleReset","isViewDate","handleChangeInputFrom","isDateValid","isBefore","isSameDay","handleChangeInputTo","handleChangeRangeFrom","handleChangeRangeTo","handleChangePrevMonth","resultValue","subMonths","currentTarget","handleChangeNextMonth","addMonths","handleChangePrevYear","subYears","handleChangeNextYear","addYears","isMonthMode","isMonthsMode","isYearsMode","isError","isResetButtonVisible","Wrapper","Fragment","PopupWrapper","useEffect","rangeWrapper","cn","inputsWrapper","inputsWrapperError","inputsDivider","errorWrapper","contentWrapper","controlsWrapper","controlsWrapperMonths","controlsWrapperYears","format","LOCALE","rangeControl","monthsControl","yearsControl","bottomButtons","bottomButtonsBetween","propTypes","PropTypes","string","bool","array","func","defaultProps","noop","stubTrue","displayName"],"mappings":"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"}