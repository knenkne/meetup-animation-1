{"version":3,"file":"month.js","sources":["../../../../src/calendar/range-picker/components/month.jsx"],"sourcesContent":["/* eslint-disable complexity, comment: complexity of 30 & 32 */\nimport React, { useState, useCallback } from 'react'\nimport _ from 'lodash'\nimport PropTypes from 'prop-types'\nimport cn from 'classnames'\nimport { endOfDay, getDate, isSameDay, startOfDay, isWithinInterval, isBefore, isAfter, setHours, setMinutes } from 'date-fns'\n\nimport monthStyle from '../../components/month/style.css'\nimport circleButtonStyles from '../../components/common/circle-button.css'\nimport { HeaderMonth } from '../../components/month/header-month'\nimport { getItemsDays, fullISOFormat, parseRuDate } from '../../utils'\nimport CircleButton from '../../components/common/circle-button'\nimport { WEEK_LENGTH } from '../../constants'\n\nimport style from './month.css'\n\nconst DAYS_ROW_LAST_INDEX = WEEK_LENGTH - 1\n\nexport const getItemState = (date, rangeFrom, rangeTo, currentTo, index, lastIndex, isRangeMode, interval, restriction) => {\n    // Большая функция для расчета внешнего вида элементов рейнджа в зависимости от положения элемента в нем\n    // Всего 12 состояний ( слава дизайнерам! \\о/ )\n    // З - зелёный, ТЗ - тёмно-зелёный\n    // 1 - элемент прямоугольный\n    // 2 - элемент З с прямоугольный с закругленными углами 4px\n    // 3 - элемент З с закругленными углами с одной/другой стороны\n    // 4 - элемент З скругленный (border-radius: 50%) с одной/другой стороны и прямоугольный с другой\n    // 5 - элемент З скругленный (border-radius: 50%) с одной/другой стороны и сукругленный (4px) с другой\n    // 6 - элемент ТЗ круглый\n    // 7 - элемент ТЗ круглый, имеющий З подложку с прямыми углами с одной/другой стороны\n    // 8 - элемент ТЗ круглый, имеющий З подложку со скругленными углами с одной/другой стороны\n    // Пожалуйста, хватит! Остановитесь! \\o/\n\n\n    const value = date\n    const isFrom = isSameDay(value, rangeFrom)\n    const isTo = isSameDay(value, rangeTo)\n    const isSameDate = isSameDay(rangeFrom, rangeTo)\n    const isCurrentTo = isSameDay(value, currentTo)\n    const isFirstInLine = index === 0\n    const isLastInLine = index === lastIndex\n    const isWithinRange = interval && isWithinInterval(value, interval)\n    const isDisabled = !restriction(value, value && {\n        start: startOfDay(value),\n        end: endOfDay(value)\n    })\n    const isToday = isSameDay(date, new Date())\n    const isActive = isFrom || isTo\n    const isInRange = isWithinRange && !isFrom && !isTo\n    const isStartOfRangeLine = isWithinRange && !isTo && !isFrom && isFirstInLine\n    const isEndOfRangeLine = isWithinRange && !isTo && !isFrom && isLastInLine\n    const isFromIsEndOfLine = isFrom && !isRangeMode && isLastInLine\n    const isToIsStartOfLine = isTo && !isRangeMode && isFirstInLine\n    const isFromIsMiddleOfLine = isFrom && !isLastInLine && !isRangeMode\n    const isToIsMiddleOfLine = isTo && !isFirstInLine && !isRangeMode\n    const isCurrentToBeforeFrom = isCurrentTo && isBefore(currentTo, rangeFrom)\n    const isCurrentToAfterFrom = isCurrentTo && isAfter(currentTo, rangeFrom)\n    const isCurrentToIsStartOfLine = isCurrentToAfterFrom && isFirstInLine\n    const isCurrentToIsEndOfLine = isCurrentToBeforeFrom && isLastInLine\n    const isFromIsMiddleOfLineAndBeforeCurrentTo = isFrom && isBefore(rangeFrom, currentTo) && !isLastInLine\n    const isFromIsMiddleOfLineAndAfterCurrentTo = isFrom && isAfter(rangeFrom, currentTo) && !isFirstInLine\n    const isFromIsEndOfLineAndBeforeCurrentTo = isFrom && isBefore(rangeFrom, currentTo) && isLastInLine\n    const isFromIsStartOfLineAndAfterCurrentTo = isFrom && isAfter(rangeFrom, currentTo) && isFirstInLine\n\n    return {\n        value,\n        isToday,\n        isActive,\n        isInRange,\n        isDisabled,\n        isSameDate,\n        isCurrentTo,\n        isCurrentToBeforeFrom,\n        isCurrentToAfterFrom,\n        isCurrentToIsStartOfLine,\n        isCurrentToIsEndOfLine,\n        isStartOfRangeLine,\n        isEndOfRangeLine,\n        isFromIsEndOfLine,\n        isFromIsMiddleOfLine,\n        isToIsStartOfLine,\n        isToIsMiddleOfLine,\n        isFromIsMiddleOfLineAndBeforeCurrentTo,\n        isFromIsMiddleOfLineAndAfterCurrentTo,\n        isFromIsEndOfLineAndBeforeCurrentTo,\n        isFromIsStartOfLineAndAfterCurrentTo,\n    }\n}\n\nconst Month = (props) => {\n    const {\n        viewDate,\n        restriction,\n        handleChangeRangeFrom,\n        handleChangeRangeTo,\n        rangeFrom,\n        rangeTo,\n        isRangeMode,\n        isFromError,\n        isToError\n    } = props\n\n    const isDateAllowed = useCallback((date) => {\n        const parsedDate = parseRuDate(date)\n        return restriction(parsedDate, parsedDate && {\n            start: startOfDay(parsedDate),\n            end: endOfDay(parsedDate)\n        })\n    }, [])\n\n\n    const [currentTo, setCurrentTo] = useState(null)\n\n    const handleResetCurrentTo = useCallback(() => setCurrentTo(null), [])\n\n    const isError = rangeFrom && rangeTo && (!isBefore(rangeFrom, rangeTo) || !isDateAllowed(rangeFrom) || !isDateAllowed(rangeTo))\n\n    const handleChangeCurrentTo = (date) => {\n        const value = _.get(date, 'target.value', date)\n        setCurrentTo(value)\n    }\n\n    const handleChangeRange = useCallback((date) => {\n        const value = _.get(date, 'target.value', date)\n\n        if (rangeFrom && !rangeTo) {\n            handleChangeRangeTo(value)\n        } else {\n            handleChangeRangeFrom(value)\n        }\n    }, [rangeFrom, rangeTo])\n\n    const days = getItemsDays(viewDate)\n\n    // Смотрим в каком мы режиме и меняем значения местами, если пользователь выбрал rangeTo меньший, чем rangeFrom\n\n    let interval = null\n    if (!isRangeMode && rangeFrom && rangeTo) {\n        interval = isBefore(rangeFrom, rangeTo) ?\n            { start: rangeFrom, end: rangeTo }\n            :\n            { start: rangeTo, end: rangeFrom }\n    } else if (isRangeMode && rangeFrom && currentTo) {\n        interval = isBefore(rangeFrom, currentTo) ?\n            { start: rangeFrom, end: currentTo }\n            :\n            { start: currentTo, end: rangeFrom }\n    }\n\n    return (\n        <table\n            data-unit=\"range:month\"\n            className={cn(monthStyle.daysTable, style.daysTable)}\n        >\n            <HeaderMonth />\n            <tbody\n                className={monthStyle.tbodyMonth}\n                data-unit=\"range:days\"\n            >\n                {_.map(days, (week, i) => (\n                    <tr className={monthStyle.row} key={i}>\n                        {_.map(week, (date, index) => {\n                            if (!date) {\n                                return (\n                                    <td key={index} className={monthStyle.noPadding}>\n                                        <div className={circleButtonStyles.itemEmpty} />\n                                    </td>\n                                )\n                            }\n                            const dayState = getItemState(\n                                date,\n                                rangeFrom,\n                                rangeTo,\n                                currentTo,\n                                index,\n                                DAYS_ROW_LAST_INDEX,\n                                isRangeMode,\n                                interval,\n                                restriction\n                            )\n                            \n                            const isFromErrorDay = fullISOFormat(setHours(setMinutes(dayState.value, 50), 11)) === rangeFrom && isFromError\n                            const isToErrorDay = fullISOFormat(setHours(setMinutes(dayState.value, 50), 11)) === rangeTo && isToError\n\n                            let wrapperClassName = null\n                            let buttonClassName\n\n                            if (isBefore(currentTo, rangeFrom)) {\n                                buttonClassName = cn(\n                                    circleButtonStyles.item,\n                                    circleButtonStyles.itemNoTransition,\n                                    circleButtonStyles.itemBordered,\n                                    dayState.isActive && !isFromErrorDay && !isToErrorDay && circleButtonStyles.itemActive\n\n                                )\n                            } else {             \n                                wrapperClassName = dayState.isSameDate ? cn(!dayState.isDisabled && monthStyle.pointer) : cn(\n                                    dayState.isInRange && !dayState.isCurrentTo && !isError && monthStyle.noPadding,\n                                    !dayState.isDisabled && monthStyle.pointer,\n                                    dayState.isToIsStartOfLine && !isError && style.rangeToIsStartOfLine,\n                                    dayState.isFromIsEndOfLine && !isError && style.rangeFromIsEndOfLine,\n                                    dayState.isFromIsMiddleOfLine && !isError && rangeTo && style.rangeFromMiddleOfRange,\n                                    dayState.isToIsMiddleOfLine && !isError && style.rangeToMiddleOfRange,\n                                    dayState.isCurrentToBeforeFrom && style.rangeCurrentToBeforeFrom,\n                                    dayState.isCurrentToAfterFrom && style.rangeCurrentToAfterFrom,\n                                    dayState.isCurrentToIsStartOfLine && !isError && style.rangeCurrentToIsStartOfLine,\n                                    dayState.isCurrentToIsEndOfLine && !isError && style.rangeCurrentToIsEndOfLine,\n                                    dayState.isFromIsMiddleOfLineAndBeforeCurrentTo && style.rangeFromMiddleOfRangeAndBeforeCurrentTo,\n                                    dayState.isFromIsMiddleOfLineAndAfterCurrentTo && style.rangeFromMiddleOfRangeAndAfterCurrentTo,\n                                    dayState.isFromIsEndOfLineAndBeforeCurrentTo && !isError && style.rangeFromIsEndOfLine,\n                                    dayState.isFromIsStartOfLineAndAfterCurrentTo && !isError && style.rangeToIsStartOfLine\n                                )\n                                buttonClassName = cn(\n                                    circleButtonStyles.item,\n                                    circleButtonStyles.itemNoTransition,\n                                    circleButtonStyles.itemBordered,\n                                    dayState.isActive && !isFromErrorDay && !isToErrorDay && circleButtonStyles.itemActive,\n                                    dayState.isInRange && !dayState.isCurrentTo && !isError && style.rangeMiddle,\n                                    dayState.isStartOfRangeLine && style.rangeStartOfLine,\n                                    dayState.isEndOfRangeLine && style.rangeEndOfLine,\n                                    isFromErrorDay && circleButtonStyles.itemError,\n                                    isToErrorDay && circleButtonStyles.itemError,\n                                    isError && style.rangeError\n                                )\n                            }\n\n                            wrapperClassName = cn(wrapperClassName,\n                                dayState.isToday && monthStyle.itemNow\n                            )\n\n                            return (\n                                <td\n                                    key={index}\n                                    className={wrapperClassName}\n                                >\n                                    <CircleButton\n                                        onMouseDown={handleChangeRange}\n                                        onMouseEnter={isRangeMode && !dayState.isDisabled ? handleChangeCurrentTo : _.noop}\n                                        onMouseLeave={handleResetCurrentTo}\n                                        className={buttonClassName}\n                                        disabled={dayState.isDisabled}\n                                        value={dayState.value}\n                                        dataUnit=\"range:day\"\n                                    >\n                                        {getDate(dayState.value)}\n                                    </CircleButton>\n                                </td>\n                            )\n                        })}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nMonth.propTypes = {\n    restriction: PropTypes.func,\n    rangeFrom: PropTypes.string,\n    handleChangeRangeFrom: PropTypes.func,\n    rangeTo: PropTypes.string,\n    handleChangeRangeTo: PropTypes.func,\n    viewDate: PropTypes.string.isRequired,\n    isRangeMode: PropTypes.bool\n}\n\nMonth.defaultProps = {\n    restriction: _.stubTrue,\n    rangeFrom: void 0,\n    handleChangeRangeFrom: _.noop,\n    rangeTo: void 0,\n    handleChangeRangeTo: _.noop,\n    isRangeMode: _.false,\n    focusedInput: null\n}\n\nexport default Month\n"],"names":["DAYS_ROW_LAST_INDEX","WEEK_LENGTH","getItemState","date","rangeFrom","rangeTo","currentTo","index","lastIndex","isRangeMode","interval","restriction","value","isFrom","isSameDay","isTo","isSameDate","isCurrentTo","isFirstInLine","isLastInLine","isWithinRange","isWithinInterval","isDisabled","start","startOfDay","end","endOfDay","isToday","Date","isActive","isInRange","isStartOfRangeLine","isEndOfRangeLine","isFromIsEndOfLine","isToIsStartOfLine","isFromIsMiddleOfLine","isToIsMiddleOfLine","isCurrentToBeforeFrom","isBefore","isCurrentToAfterFrom","isAfter","isCurrentToIsStartOfLine","isCurrentToIsEndOfLine","isFromIsMiddleOfLineAndBeforeCurrentTo","isFromIsMiddleOfLineAndAfterCurrentTo","isFromIsEndOfLineAndBeforeCurrentTo","isFromIsStartOfLineAndAfterCurrentTo","Month","props","viewDate","handleChangeRangeFrom","handleChangeRangeTo","isFromError","isToError","isDateAllowed","useCallback","parsedDate","parseRuDate","useState","setCurrentTo","handleResetCurrentTo","isError","handleChangeCurrentTo","_","get","handleChangeRange","days","getItemsDays","cn","monthStyle","daysTable","style","tbodyMonth","map","week","i","row","noPadding","circleButtonStyles","itemEmpty","dayState","isFromErrorDay","fullISOFormat","setHours","setMinutes","isToErrorDay","wrapperClassName","buttonClassName","item","itemNoTransition","itemBordered","itemActive","pointer","rangeToIsStartOfLine","rangeFromIsEndOfLine","rangeFromMiddleOfRange","rangeToMiddleOfRange","rangeCurrentToBeforeFrom","rangeCurrentToAfterFrom","rangeCurrentToIsStartOfLine","rangeCurrentToIsEndOfLine","rangeFromMiddleOfRangeAndBeforeCurrentTo","rangeFromMiddleOfRangeAndAfterCurrentTo","rangeMiddle","rangeStartOfLine","rangeEndOfLine","itemError","rangeError","itemNow","noop","getDate","propTypes","PropTypes","func","string","isRequired","bool","defaultProps","stubTrue","false","focusedInput"],"mappings":"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"}