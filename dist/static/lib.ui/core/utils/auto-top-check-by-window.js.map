{"version":3,"file":"auto-top-check-by-window.js","sources":["../../src/utils/auto-top-check-by-window.js"],"sourcesContent":["import _ from 'lodash'\n\nconst TOP = 'top'\nconst BOTTOM = 'bottom'\nconst PADDING = 25\n/**\n * Функция, возвращающая true, если contextContent должен отобразиться вверх относительно contextTarget\n * Дополнительно задает максимальную высоту содержимому contextContent, если размеры окна не позволяют отобразиться элементу полностью\n * @param {Node} content - контент Dropdown\n * @param {Node} target - основной компонент (обертка)\n * @return {Boolean} - contextContent должен отобразиться вверх относительно contextTarget\n */\nexport const autoTopCheckByWindow = (content, target) => {\n    if (content && target) {\n        content.firstChild.style.maxHeight = '' // eslint-disable-line no-param-reassign, comment: компонент посчитает свою высоту\n        content.firstChild.style.overflowY = '' // eslint-disable-line no-param-reassign, comment: компонент посчитает свою высоту\n\n        const targetBottom = target.getBoundingClientRect().bottom\n        const distanceToBottom = document.documentElement.clientHeight - targetBottom\n        const distanceToTop = target.getBoundingClientRect().top\n        const freeHeightToBottom = distanceToBottom - content.clientHeight\n        const freeHeightToTop = distanceToTop - content.clientHeight\n\n        if (freeHeightToBottom >= 0) {\n            return BOTTOM\n        } else if (freeHeightToBottom <= 0 && freeHeightToTop >= 0) {\n            return TOP\n        }\n        content.style.maxHeight = `${_.max([distanceToBottom, distanceToTop]) - PADDING}px` // eslint-disable-line no-param-reassign, comment: компонент определит свою НОВУЮ высоту\n        content.style.overflowY = 'scroll' // eslint-disable-line no-param-reassign, comment: и будет скроллиться, если надо\n\n        return freeHeightToTop >= freeHeightToBottom ? TOP : BOTTOM\n    }\n\n    return BOTTOM\n}\n\n"],"names":["TOP","BOTTOM","PADDING","autoTopCheckByWindow","content","target","firstChild","style","maxHeight","overflowY","targetBottom","getBoundingClientRect","bottom","distanceToBottom","document","documentElement","clientHeight","distanceToTop","top","freeHeightToBottom","freeHeightToTop","_","max"],"mappings":";;AAEA,IAAMA,GAAG,GAAG,KAAZ;AACA,IAAMC,MAAM,GAAG,QAAf;AACA,IAAMC,OAAO,GAAG,EAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACaC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,OAAD,EAAUC,MAAV,EAAqB;AACrD,MAAID,OAAO,IAAIC,MAAf,EAAuB;AACnBD,IAAAA,OAAO,CAACE,UAAR,CAAmBC,KAAnB,CAAyBC,SAAzB,GAAqC,EAArC,CADmB;;AAEnBJ,IAAAA,OAAO,CAACE,UAAR,CAAmBC,KAAnB,CAAyBE,SAAzB,GAAqC,EAArC,CAFmB;;AAInB,QAAMC,YAAY,GAAGL,MAAM,CAACM,qBAAP,GAA+BC,MAApD;AACA,QAAMC,gBAAgB,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,GAAwCN,YAAjE;AACA,QAAMO,aAAa,GAAGZ,MAAM,CAACM,qBAAP,GAA+BO,GAArD;AACA,QAAMC,kBAAkB,GAAGN,gBAAgB,GAAGT,OAAO,CAACY,YAAtD;AACA,QAAMI,eAAe,GAAGH,aAAa,GAAGb,OAAO,CAACY,YAAhD;;AAEA,QAAIG,kBAAkB,IAAI,CAA1B,EAA6B;AACzB,aAAOlB,MAAP;AACH,KAFD,MAEO,IAAIkB,kBAAkB,IAAI,CAAtB,IAA2BC,eAAe,IAAI,CAAlD,EAAqD;AACxD,aAAOpB,GAAP;AACH;;AACDI,IAAAA,OAAO,CAACG,KAAR,CAAcC,SAAd,aAA6Ba,CAAC,CAACC,GAAF,CAAM,CAACT,gBAAD,EAAmBI,aAAnB,CAAN,IAA2Cf,OAAxE,QAfmB;;AAgBnBE,IAAAA,OAAO,CAACG,KAAR,CAAcE,SAAd,GAA0B,QAA1B,CAhBmB;;AAkBnB,WAAOW,eAAe,IAAID,kBAAnB,GAAwCnB,GAAxC,GAA8CC,MAArD;AACH;;AAED,SAAOA,MAAP;AACH;;;;"}