{"version":3,"file":"index.js","sources":["../../../src/styles/theme-provider/index.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { ThemeProvider } from 'emotion-theming'\nimport _ from 'lodash'\n\nimport { getFromStorage, setToStorage } from './storage'\nimport { THEME_COLORS, COLORS } from './theme-colors'\n\nexport const ThemeWrapper = ({ children }) => {\n    const [theme, setTheme] = useState(getFromStorage('themeColor', COLORS.DARK))\n\n    const changeTheme = (color = COLORS.WHITE) => _.memoize(() => {\n        setToStorage('themeColor', color)\n        return (\n            setTheme(color)\n        )\n    })\n\n    return (\n        <ThemeWrapperContext.Provider\n            value={{\n                changeTheme,\n                theme\n            }}\n        >\n            <ThemeProvider theme={THEME_COLORS[theme]}>\n                { children }\n            </ThemeProvider>\n        </ThemeWrapperContext.Provider>\n    )\n}\n\nexport const ThemeWrapperContext = React.createContext(() => {})\n"],"names":["ThemeWrapper","children","useState","getFromStorage","COLORS","DARK","theme","setTheme","changeTheme","color","WHITE","_","memoize","setToStorage","THEME_COLORS","ThemeWrapperContext","React","createContext"],"mappings":";;;;;;;IAOaA,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAChBC,QAAQ,CAACC,cAAc,CAAC,YAAD,EAAeC,MAAM,CAACC,IAAtB,CAAf,CADQ;AAAA;AAAA,MACnCC,KADmC;AAAA,MAC5BC,QAD4B;;AAG1C,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,QAACC,KAAD,uEAASL,MAAM,CAACM,KAAhB;AAAA,WAA0BC,CAAC,CAACC,OAAF,CAAU,YAAM;AAC1DC,MAAAA,YAAY,CAAC,YAAD,EAAeJ,KAAf,CAAZ;AACA,aACIF,QAAQ,CAACE,KAAD,CADZ;AAGH,KAL6C,CAA1B;AAAA,GAApB;;AAOA,sBACI,oBAAC,mBAAD,CAAqB,QAArB;AACI,IAAA,KAAK,EAAE;AACHD,MAAAA,WAAW,EAAXA,WADG;AAEHF,MAAAA,KAAK,EAALA;AAFG;AADX,kBAMI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEQ,YAAY,CAACR,KAAD;AAAlC,KACML,QADN,CANJ,CADJ;AAYH;IAEYc,mBAAmB,gBAAGC,KAAK,CAACC,aAAN,CAAoB,YAAM,EAA1B;;;;"}