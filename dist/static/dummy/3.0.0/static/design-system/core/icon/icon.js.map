{"version":3,"file":"icon.js","sources":["../../src/icon/icon.jsx"],"sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport { IconWrapperStyled } from './icon.style'\n\nconst iconOmit = ['name']\n\n/**\n * [Zeplin](https://app.zeplin.io/project/5c74ef0d753f3ebccdf8f33d/screen/5f3698dc6a8521646c468cff)\n * Компонент для вывода svg-иконок\n *\n * @param {Object} props - свойства компонента\n * @return {JSX} - компонент\n */\nexport const Icon = (props) => {\n\n    /**\n     * Метод для фиксирования префикса (process.env.PKG_ID) для генерации уникальных id в svg иконках\n     * @param projectId\n     */\n    const { name, namespace, icon } = props\n\n    const addUniqueId = (icon, namespace, name) => useMemo(() => {\n        let formattedIcon = icon\n        const newIdBase = `${Icon.iconProjectId}::${namespace}/${name}::`\n        const refIds = icon?.match(/(id=\"([^\\s\"])+\")/g)\n        if (refIds) {\n            refIds.forEach((refId) => {\n                const refIdForm = refId.substring(4, refId.length - 1)\n                const newId = newIdBase + _.uniqueId()\n                formattedIcon = _.replace(formattedIcon, new RegExp(`#${refIdForm}`, 'g'), `#${newId}`)\n                formattedIcon = _.replace(formattedIcon, new RegExp(`id=\"${refIdForm}\"`, 'g'), `id=\"${newId}\"`)\n            })\n        }\n\n        return formattedIcon\n    }, [icon, namespace, name])\n\n    const formattedIcon = addUniqueId(icon, namespace, name)\n\n    const passedProps = _(props)\n        .omit(iconOmit)\n        .extend({\n            dangerouslySetInnerHTML: {\n                __html: formattedIcon\n            }\n        })\n        .value()\n\n    return <IconWrapperStyled {...passedProps} />\n}\n\nIcon.iconProjectId = ''\n\nIcon.setProject = (projectId) => {\n    Icon.iconProjectId = projectId\n}\n"],"names":["iconOmit","Icon","props","name","namespace","icon","addUniqueId","useMemo","formattedIcon","newIdBase","iconProjectId","refIds","match","forEach","refId","refIdForm","substring","length","newId","_","uniqueId","replace","RegExp","passedProps","omit","extend","dangerouslySetInnerHTML","__html","value","setProject","projectId"],"mappings":";;;;;;;;AAMA,IAAMA,QAAQ,GAAG,CAAC,MAAD,CAAjB;AAEA;;;;;;;;IAOaC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAE3B;;;;AAF2B,MAMnBC,IANmB,GAMOD,KANP,CAMnBC,IANmB;AAAA,MAMbC,SANa,GAMOF,KANP,CAMbE,SANa;AAAA,MAMFC,IANE,GAMOH,KANP,CAMFG,IANE;;AAQ3B,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACD,IAAD,EAAOD,SAAP,EAAkBD,IAAlB;AAAA,WAA2BI,OAAO,CAAC,YAAM;AACzD,UAAIC,aAAa,GAAGH,IAApB;AACA,UAAMI,SAAS,aAAMR,IAAI,CAACS,aAAX,eAA6BN,SAA7B,cAA0CD,IAA1C,OAAf;AACA,UAAMQ,MAAM,GAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,KAAN,CAAY,mBAAZ,CAAf;;AACA,UAAID,MAAJ,EAAY;AACRA,QAAAA,MAAM,CAACE,OAAP,CAAe,UAACC,KAAD,EAAW;AACtB,cAAMC,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBF,KAAK,CAACG,MAAN,GAAe,CAAlC,CAAlB;;AACA,cAAMC,KAAK,GAAGT,SAAS,GAAGU,CAAC,CAACC,QAAF,EAA1B;;AACAZ,UAAAA,aAAa,GAAGW,CAAC,CAACE,OAAF,CAAUb,aAAV,EAAyB,IAAIc,MAAJ,YAAeP,SAAf,GAA4B,GAA5B,CAAzB,aAA+DG,KAA/D,EAAhB;AACAV,UAAAA,aAAa,GAAGW,CAAC,CAACE,OAAF,CAAUb,aAAV,EAAyB,IAAIc,MAAJ,gBAAkBP,SAAlB,SAAgC,GAAhC,CAAzB,iBAAsEG,KAAtE,QAAhB;AACH,SALD;AAMH;;AAED,aAAOV,aAAP;AACH,KAdqD,EAcnD,CAACH,IAAD,EAAOD,SAAP,EAAkBD,IAAlB,CAdmD,CAAlC;AAAA,GAApB;;AAgBA,MAAMK,aAAa,GAAGF,WAAW,CAACD,IAAD,EAAOD,SAAP,EAAkBD,IAAlB,CAAjC;;AAEA,MAAMoB,WAAW,GAAGJ,CAAC,CAACjB,KAAD,CAAD,CACfsB,IADe,CACVxB,QADU,EAEfyB,MAFe,CAER;AACJC,IAAAA,uBAAuB,EAAE;AACrBC,MAAAA,MAAM,EAAEnB;AADa;AADrB,GAFQ,EAOfoB,KAPe,EAApB;;AASA,sBAAO,oBAAC,iBAAD,EAAuBL,WAAvB,CAAP;AACH;AAEDtB,IAAI,CAACS,aAAL,GAAqB,EAArB;;AAEAT,IAAI,CAAC4B,UAAL,GAAkB,UAACC,SAAD,EAAe;AAC7B7B,EAAAA,IAAI,CAACS,aAAL,GAAqBoB,SAArB;AACH,CAFD;;;;"}