{"version":3,"file":"row.js","sources":["../../src/table/row.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport { Typography } from '../typography'\nimport { mergeTheme } from '../utils'\n\nimport defaultTheme from './style.css'\n\nconst nameCaptionTheme = mergeTheme(Typography.theme, {\n    caption: classnames(\n        Typography.theme.caption,\n        defaultTheme.alignLeft,\n        defaultTheme.caption\n    )\n})\n\nconst valueCaptionTheme = mergeTheme(Typography.theme, {\n    caption: classnames(\n        Typography.theme.caption,\n        defaultTheme.alignRight,\n        defaultTheme.caption\n    )\n})\n\nexport const Row = ({ children }) => {\n    const childrenArray = React.Children.toArray(children)\n\n    if (childrenArray.length < 2) {\n        return null\n    }\n\n    const [name, value] = childrenArray\n\n    return (\n        <dl className={defaultTheme.row} aria-label=\"Строка таблицы\">\n            <dt className={defaultTheme.item}>\n                <Typography.Caption\n                    mode=\"body\"\n                    colorScheme=\"gray\"\n                    theme={nameCaptionTheme}\n                >\n                    {name}\n                </Typography.Caption>\n            </dt>\n            <dd className={defaultTheme.item}>\n                <Typography.Caption\n                    mode=\"body\"\n                    colorScheme=\"black\"\n                    theme={valueCaptionTheme}\n                >\n                    {value}\n                </Typography.Caption>\n            </dd>\n        </dl>\n    )\n}\n\nRow.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nRow.defaultProps = {\n    children: ''\n}\n\nRow.displayName = 'Table.Row'\n"],"names":["nameCaptionTheme","mergeTheme","Typography","theme","caption","classnames","defaultTheme","alignLeft","valueCaptionTheme","alignRight","Row","children","childrenArray","React","Children","toArray","length","name","value","row","item","propTypes","PropTypes","node","isRequired","defaultProps","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,gBAAgB,GAAGC,UAAU,CAACC,UAAU,CAACC,KAAZ,EAAmB;AAClDC,EAAAA,OAAO,EAAEC,UAAU,CACfH,UAAU,CAACC,KAAX,CAAiBC,OADF,EAEfE,YAAY,CAACC,SAFE,EAGfD,YAAY,CAACF,OAHE;AAD+B,CAAnB,CAAnC;AAQA,IAAMI,iBAAiB,GAAGP,UAAU,CAACC,UAAU,CAACC,KAAZ,EAAmB;AACnDC,EAAAA,OAAO,EAAEC,UAAU,CACfH,UAAU,CAACC,KAAX,CAAiBC,OADF,EAEfE,YAAY,CAACG,UAFE,EAGfH,YAAY,CAACF,OAHE;AADgC,CAAnB,CAApC;IAQaM,GAAG,GAAG,SAANA,GAAM,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjC,MAAMC,aAAa,GAAGC,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBJ,QAAvB,CAAtB;;AAEA,MAAIC,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,WAAO,IAAP;AACH;;AALgC,sCAOXJ,aAPW;AAAA,MAO1BK,IAP0B;AAAA,MAOpBC,KAPoB;;AASjC,sBACI;AAAI,IAAA,SAAS,EAAEZ,YAAY,CAACa,GAA5B;AAAiC,kBAAW;AAA5C,kBACI;AAAI,IAAA,SAAS,EAAEb,YAAY,CAACc;AAA5B,kBACI,oBAAC,UAAD,CAAY,OAAZ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,MAFhB;AAGI,IAAA,KAAK,EAAEpB;AAHX,KAKKiB,IALL,CADJ,CADJ,eAUI;AAAI,IAAA,SAAS,EAAEX,YAAY,CAACc;AAA5B,kBACI,oBAAC,UAAD,CAAY,OAAZ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,KAAK,EAAEZ;AAHX,KAKKU,KALL,CADJ,CAVJ,CADJ;AAsBH;AAEDR,GAAG,CAACW,SAAJ,GAAgB;AACZV,EAAAA,QAAQ,EAAEW,SAAS,CAACC,IAAV,CAAeC;AADb,CAAhB;AAIAd,GAAG,CAACe,YAAJ,GAAmB;AACfd,EAAAA,QAAQ,EAAE;AADK,CAAnB;AAIAD,GAAG,CAACgB,WAAJ,GAAkB,WAAlB;;;;"}