{"version":3,"file":"marked-text.js","sources":["../../src/marked-text/marked-text.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport style from './style.css'\n\nconst markText = (text, searchString, markedClass) => {\n    if (!searchString) {\n        return text\n    }\n\n    const caseInsensitiveString = text.toLowerCase()\n    const caseInsensitiveSearchString = searchString.toLowerCase()\n    const searchLength = searchString.length\n\n    let stringPosition = 0\n\n    return _.flatMap(_.split(caseInsensitiveString, caseInsensitiveSearchString), (substring, index) => {\n\n        const originalSearch = text.substr(stringPosition, searchLength)\n        if (index !== 0) {\n            stringPosition += searchLength\n        }\n\n        const originalSubstring = text.substr(stringPosition, substring.length)\n        stringPosition += substring.length\n\n        if (index !== 0) {\n            return [<span className={markedClass} key={index}>{originalSearch}</span>, originalSubstring]\n        }\n\n        return originalSubstring\n    })\n}\n\n/**\n * Компонент для маркировки подстроки в строке\n *\n * @param {Object} props - свойства компонента\n * @return {JSX} - компонент\n */\nexport const MarkedText = ({ title, value, theme, ...passedProps }) => {\n    if (!title) {\n        return null\n    }\n\n    return (\n        <span {...passedProps} className={theme.text}>\n            {markText(title, value, theme.marked)}\n        </span>\n    )\n\n}\n\nMarkedText.displayName = 'MarkedText'\nMarkedText.theme = style\nMarkedText.propTypes = {\n    title: PropTypes.string,\n    value: PropTypes.string,\n    theme: PropTypes.shape({\n        text: PropTypes.string,\n        marked: PropTypes.string\n    })\n}\n\nMarkedText.defaultProps = {\n    title: '',\n    value: '',\n    theme: style\n}\n\nexport default MarkedText\n"],"names":["markText","text","searchString","markedClass","caseInsensitiveString","toLowerCase","caseInsensitiveSearchString","searchLength","length","stringPosition","_","flatMap","split","substring","index","originalSearch","substr","originalSubstring","MarkedText","title","value","theme","passedProps","marked","displayName","style","propTypes","PropTypes","string","shape","defaultProps"],"mappings":";;;;;;AAMA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAOC,YAAP,EAAqBC,WAArB,EAAqC;AAClD,MAAI,CAACD,YAAL,EAAmB;AACf,WAAOD,IAAP;AACH;;AAED,MAAMG,qBAAqB,GAAGH,IAAI,CAACI,WAAL,EAA9B;AACA,MAAMC,2BAA2B,GAAGJ,YAAY,CAACG,WAAb,EAApC;AACA,MAAME,YAAY,GAAGL,YAAY,CAACM,MAAlC;AAEA,MAAIC,cAAc,GAAG,CAArB;AAEA,SAAOC,CAAC,CAACC,OAAF,CAAUD,CAAC,CAACE,KAAF,CAAQR,qBAAR,EAA+BE,2BAA/B,CAAV,EAAuE,UAACO,SAAD,EAAYC,KAAZ,EAAsB;AAEhG,QAAMC,cAAc,GAAGd,IAAI,CAACe,MAAL,CAAYP,cAAZ,EAA4BF,YAA5B,CAAvB;;AACA,QAAIO,KAAK,KAAK,CAAd,EAAiB;AACbL,MAAAA,cAAc,IAAIF,YAAlB;AACH;;AAED,QAAMU,iBAAiB,GAAGhB,IAAI,CAACe,MAAL,CAAYP,cAAZ,EAA4BI,SAAS,CAACL,MAAtC,CAA1B;AACAC,IAAAA,cAAc,IAAII,SAAS,CAACL,MAA5B;;AAEA,QAAIM,KAAK,KAAK,CAAd,EAAiB;AACb,aAAO,cAAC;AAAM,QAAA,SAAS,EAAEX,WAAjB;AAA8B,QAAA,GAAG,EAAEW;AAAnC,SAA2CC,cAA3C,CAAD,EAAoEE,iBAApE,CAAP;AACH;;AAED,WAAOA,iBAAP;AACH,GAfM,CAAP;AAgBH,CA3BD;AA6BA;AACA;AACA;AACA;AACA;AACA;;;IACaC,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAAlBC,WAAkB;;AACnE,MAAI,CAACH,KAAL,EAAY;AACR,WAAO,IAAP;AACH;;AAED,sBACI,yCAAUG,WAAV;AAAuB,IAAA,SAAS,EAAED,KAAK,CAACpB;AAAxC,MACKD,QAAQ,CAACmB,KAAD,EAAQC,KAAR,EAAeC,KAAK,CAACE,MAArB,CADb,CADJ;AAMH;AAEDL,UAAU,CAACM,WAAX,GAAyB,YAAzB;AACAN,UAAU,CAACG,KAAX,GAAmBI,KAAnB;AACAP,UAAU,CAACQ,SAAX,GAAuB;AACnBP,EAAAA,KAAK,EAAEQ,SAAS,CAACC,MADE;AAEnBR,EAAAA,KAAK,EAAEO,SAAS,CAACC,MAFE;AAGnBP,EAAAA,KAAK,EAAEM,SAAS,CAACE,KAAV,CAAgB;AACnB5B,IAAAA,IAAI,EAAE0B,SAAS,CAACC,MADG;AAEnBL,IAAAA,MAAM,EAAEI,SAAS,CAACC;AAFC,GAAhB;AAHY,CAAvB;AASAV,UAAU,CAACY,YAAX,GAA0B;AACtBX,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,KAAK,EAAE,EAFe;AAGtBC,EAAAA,KAAK,EAAEI;AAHe,CAA1B;;;;;"}