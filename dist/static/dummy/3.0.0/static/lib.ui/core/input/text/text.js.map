{"version":3,"file":"text.js","sources":["../../../src/input/text/text.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport _ from 'lodash'\n\nimport { disableHandler, metaOmitter } from '../../utils'\nimport { autoSizeFactory } from '../hoc/auto-size'\n\nimport defaultTheme from './text.css'\n\n/**\n * [Zeplin](https://app.zeplin.io/project/59312e1ebdf1da6fc8d37ffb/dashboard?q=blocks%20input%20text)\n * Поле многострочного ввода\n *\n * @param {Object} props - свойства компонента\n * @return {JSX} - компонент\n */\nexport const Text = (props) => {\n    const passedProps = _(props)\n        .omit([\n            'theme',\n            'error',\n            'formName',\n            'refWrapper'\n        ])\n        .extend({\n            type: 'text',\n            ref: props.refWrapper,\n            role: 'textbox',\n            title: props.value,\n            className: classnames(\n                defaultTheme.text,\n                props.error && defaultTheme.error,\n                props.readOnly && defaultTheme.readonly\n            ),\n            'data-unit': 'input:textarea',\n            onChange: disableHandler(props.onChange, props.disabled),\n            form: props.formName,\n            disabled: props.disabled || props.readOnly,\n        })\n        .value()\n\n    return <textarea {...passedProps} />\n}\n\nText.propTypes = {\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    refWrapper: PropTypes.func,\n    value: PropTypes.string, // eslint-disable-line react/no-unused-prop-types, comment: сквозной проброс пропов\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    formName: PropTypes.string\n}\n\nText.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    refWrapper: _.noop,\n    value: '',\n    onChange: _.noop,\n    error: void 0,\n    formName: void 0\n}\n\nText.displayName = 'Input.Text'\nText.theme = defaultTheme\nexport default autoSizeFactory({ minHeight: 56 })(metaOmitter(Text))\n"],"names":["Text","props","passedProps","_","omit","extend","type","ref","refWrapper","role","title","value","className","classnames","defaultTheme","text","error","readOnly","readonly","onChange","disableHandler","disabled","form","formName","propTypes","PropTypes","bool","func","string","defaultProps","noop","displayName","theme","autoSizeFactory","minHeight","metaOmitter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;IACaA,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAC3B,MAAMC,WAAW,GAAGC,CAAC,CAACF,KAAD,CAAD,CACfG,IADe,CACV,CACF,OADE,EAEF,OAFE,EAGF,UAHE,EAIF,YAJE,CADU,EAOfC,MAPe,CAOR;AACJC,IAAAA,IAAI,EAAE,MADF;AAEJC,IAAAA,GAAG,EAAEN,KAAK,CAACO,UAFP;AAGJC,IAAAA,IAAI,EAAE,SAHF;AAIJC,IAAAA,KAAK,EAAET,KAAK,CAACU,KAJT;AAKJC,IAAAA,SAAS,EAAEC,UAAU,CACjBC,YAAY,CAACC,IADI,EAEjBd,KAAK,CAACe,KAAN,IAAeF,YAAY,CAACE,KAFX,EAGjBf,KAAK,CAACgB,QAAN,IAAkBH,YAAY,CAACI,QAHd,CALjB;AAUJ,iBAAa,gBAVT;AAWJC,IAAAA,QAAQ,EAAEC,cAAc,CAACnB,KAAK,CAACkB,QAAP,EAAiBlB,KAAK,CAACoB,QAAvB,CAXpB;AAYJC,IAAAA,IAAI,EAAErB,KAAK,CAACsB,QAZR;AAaJF,IAAAA,QAAQ,EAAEpB,KAAK,CAACoB,QAAN,IAAkBpB,KAAK,CAACgB;AAb9B,GAPQ,EAsBfN,KAtBe,EAApB;;AAwBA,sBAAO,gCAAcT,WAAd,CAAP;AACH;AAEDF,IAAI,CAACwB,SAAL,GAAiB;AACbH,EAAAA,QAAQ,EAAEI,SAAS,CAACC,IADP;AAEbT,EAAAA,QAAQ,EAAEQ,SAAS,CAACC,IAFP;AAGblB,EAAAA,UAAU,EAAEiB,SAAS,CAACE,IAHT;AAIbhB,EAAAA,KAAK,EAAEc,SAAS,CAACG,MAJJ;AAIY;AACzBT,EAAAA,QAAQ,EAAEM,SAAS,CAACE,IALP;AAMbX,EAAAA,KAAK,EAAES,SAAS,CAACG,MANJ;AAObL,EAAAA,QAAQ,EAAEE,SAAS,CAACG;AAPP,CAAjB;AAUA5B,IAAI,CAAC6B,YAAL,GAAoB;AAChBR,EAAAA,QAAQ,EAAE,KADM;AAEhBJ,EAAAA,QAAQ,EAAE,KAFM;AAGhBT,EAAAA,UAAU,EAAEL,CAAC,CAAC2B,IAHE;AAIhBnB,EAAAA,KAAK,EAAE,EAJS;AAKhBQ,EAAAA,QAAQ,EAAEhB,CAAC,CAAC2B,IALI;AAMhBd,EAAAA,KAAK,EAAE,KAAK,CANI;AAOhBO,EAAAA,QAAQ,EAAE,KAAK;AAPC,CAApB;AAUAvB,IAAI,CAAC+B,WAAL,GAAmB,YAAnB;AACA/B,IAAI,CAACgC,KAAL,GAAalB,YAAb;AACA,kBAAemB,eAAe,CAAC;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAD,CAAf,CAAmCC,WAAW,CAACnC,IAAD,CAA9C,CAAf;;;;;"}