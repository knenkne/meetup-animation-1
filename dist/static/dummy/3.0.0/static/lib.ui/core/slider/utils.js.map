{"version":3,"file":"utils.js","sources":["../../src/slider/utils.js"],"sourcesContent":["import _ from 'lodash'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport { handlePreventDefault } from '../utils'\r\n\r\nconst HALF = 2\r\nconst EXPONENT_FLOOR = 10\r\nconst ACCURACY = 2\r\n\r\nexport const addSliderHandlers = (element, handleMouseMove, handleMouseUp) => {\r\n    element.addEventListener('mousemove', handleMouseMove)\r\n    element.addEventListener('mouseup', handleMouseUp)\r\n    element.addEventListener('touchmove', handleMouseMove, { passive: false })\r\n    element.addEventListener('touchend', handleMouseUp, { passive: false })\r\n    element.addEventListener('selectstart', handlePreventDefault)\r\n}\r\n\r\nexport const removeSliderHandlers = (element, handleMouseMove, handleMouseUp) => {\r\n    element.removeEventListener('mousemove', handleMouseMove)\r\n    element.removeEventListener('mouseup', handleMouseUp)\r\n    element.removeEventListener('touchmove', handleMouseMove)\r\n    element.removeEventListener('touchend', handleMouseUp)\r\n    element.removeEventListener('selectstart', handlePreventDefault)\r\n}\r\n\r\nexport const makeDelimiters = (min, max, step, grid) => {\r\n    if (grid) {\r\n        return grid.map((item, i) => 100 * i / (grid.length - 1))\r\n    }\r\n\r\n    const delimiters = []\r\n    const halfStep = step / HALF\r\n\r\n    let firstStep = min - (min % step) + step\r\n\r\n    if (firstStep < min + halfStep) {\r\n        firstStep += step\r\n    }\r\n\r\n    if (_.isNaN(firstStep) || firstStep >= max) {\r\n        return delimiters\r\n    }\r\n\r\n    delimiters.push(firstStep)\r\n\r\n    while (_.last(delimiters) + step < max - halfStep) {\r\n        delimiters.push(_.last(delimiters) + step)\r\n    }\r\n\r\n    return delimiters.map((value) => (value - min) / (max - min) * 100)\r\n}\r\n\r\nconst clampBorders = ({ leftValue, rightValue }, min, max, step) => {\r\n    const halfStep = step / HALF\r\n    let newLeftValue = leftValue\r\n    let newRightValue = rightValue\r\n\r\n    if (newLeftValue < min + halfStep) {\r\n        newLeftValue = min\r\n    }\r\n    if (newRightValue < min + halfStep) {\r\n        newRightValue = min\r\n    }\r\n    if (newRightValue > max - halfStep) {\r\n        newRightValue = max\r\n    }\r\n    if (newLeftValue > max - halfStep) {\r\n        newLeftValue = max\r\n    }\r\n    return { leftValue: newLeftValue, rightValue: newRightValue }\r\n}\r\n\r\nconst getClosest = (value, { leftValue, rightValue }) =>\r\n    Math.abs(value - leftValue) < Math.abs(rightValue - value)\r\n        ? leftValue\r\n        : rightValue\r\n\r\nexport const computeStepByDigits = (min, max, step, digits) => {\r\n    if (!digits) {\r\n        return step\r\n    }\r\n\r\n    const diff = max - min\r\n    const maxSteps = _.ceil(diff / step)\r\n    const exponent = Math.pow(EXPONENT_FLOOR, _.floor(Math.log(diff / maxSteps) / Math.LN10))\r\n\r\n    let stepSize = 0\r\n\r\n    for (let i = 0; i < digits.length; i += 1) {\r\n        stepSize = digits[i] * exponent\r\n\r\n        if (_.floor(diff / stepSize) <= maxSteps) {\r\n            break\r\n        }\r\n    }\r\n\r\n    return _.floor(diff / stepSize) >= EXPONENT_FLOOR ? stepSize : 1\r\n}\r\n\r\nconst TOUCH_EVENT_TYPES = ['touchstart', 'touchend', 'touchmove']\r\nexport const getValueByMouse = (event, element, offset, step, min, max, grid, prevValue) => {\r\n    const position = TOUCH_EVENT_TYPES.includes(event.type) ? event.changedTouches[0].pageX : event.pageX\r\n\r\n    if (_.isUndefined(position)) {\r\n        return prevValue\r\n    }\r\n\r\n    const absoluteValue = _.clamp((position - element.clientLeft - element.getBoundingClientRect().left - offset) / element.clientWidth, 0, 1)\r\n\r\n    if (grid) {\r\n        const newValue = grid[Math.round(absoluteValue * (grid.length - 1))]\r\n\r\n        return new BigNumber(newValue).toPrecision()\r\n    }\r\n\r\n    const relativeValue = (absoluteValue * (max - min)) + min\r\n\r\n    const borders = {\r\n        leftValue: _.round(relativeValue - (relativeValue % step), ACCURACY),\r\n        rightValue: _.round(relativeValue - (relativeValue % step) + step, ACCURACY)\r\n    }\r\n\r\n    const clampedBorders = clampBorders(borders, min, max, step)\r\n    const newValue = getClosest(relativeValue, clampedBorders)\r\n\r\n    return new BigNumber(newValue).toPrecision()\r\n}\r\n\r\nfunction getLowerBound (grid, value, from = 0, to = grid.length) {\r\n    if (from >= to) {\r\n        return to - 1\r\n    }\r\n    const m = Math.floor((from + to) / HALF)\r\n    if (Number(grid[m]) < value) {\r\n        return getLowerBound(grid, value, m + 1, to)\r\n    }\r\n    return getLowerBound(grid, value, from, m)\r\n}\r\n\r\nfunction getUpperBound (grid, value, from = 0, to = grid.length) {\r\n    if (from >= to) {\r\n        return to\r\n    }\r\n    const m = Math.floor((from + to) / HALF)\r\n    if (Number(grid[m]) > value) {\r\n        return getUpperBound(grid, value, from, m)\r\n    }\r\n    return getUpperBound(grid, value, m + 1, to)\r\n}\r\n\r\nexport const getGridValue = (value, grid) => {\r\n    // parseFloat нужен, т.к. value может быть с точкой в конце, например \"5000.\"\r\n    const matchIndex = grid.findIndex((i) => parseFloat(String(i)) === parseFloat(String(value)))\r\n    if (matchIndex !== -1) {\r\n        return matchIndex / (grid.length - 1)\r\n    }\r\n\r\n    const lowerBound = getLowerBound(grid, value)\r\n    const upperBound = getUpperBound(grid, value, lowerBound + 1)\r\n\r\n    if (lowerBound < 0) {\r\n        return 0\r\n    }\r\n    if (upperBound >= grid.length) {\r\n        return 1\r\n    }\r\n\r\n    const pseudoPercentage = (value - grid[lowerBound]) / (grid[upperBound] - grid[lowerBound])\r\n\r\n    return (lowerBound + pseudoPercentage) / (grid.length - 1)\r\n}\r\n\r\nexport const getLinearValue = (value, min, max) => _.clamp((value - min) / (max - min), 0, 1)\r\n"],"names":["HALF","EXPONENT_FLOOR","ACCURACY","addSliderHandlers","element","handleMouseMove","handleMouseUp","addEventListener","passive","handlePreventDefault","removeSliderHandlers","removeEventListener","makeDelimiters","min","max","step","grid","map","item","i","length","delimiters","halfStep","firstStep","_","isNaN","push","last","value","clampBorders","leftValue","rightValue","newLeftValue","newRightValue","getClosest","Math","abs","computeStepByDigits","digits","diff","maxSteps","ceil","exponent","pow","floor","log","LN10","stepSize","TOUCH_EVENT_TYPES","getValueByMouse","event","offset","prevValue","position","includes","type","changedTouches","pageX","isUndefined","absoluteValue","clamp","clientLeft","getBoundingClientRect","left","clientWidth","newValue","round","BigNumber","toPrecision","relativeValue","borders","clampedBorders","getLowerBound","from","to","m","Number","getUpperBound","getGridValue","matchIndex","findIndex","parseFloat","String","lowerBound","upperBound","pseudoPercentage","getLinearValue"],"mappings":"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"}