{"version":3,"file":"tooltip.js","sources":["../../src/tooltip/tooltip.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport _ from 'lodash'\r\nimport classnames from 'classnames'\r\n\r\nimport { Tip } from './tip'\r\nimport defaultTheme from './style.css'\r\n\r\n/**\r\n * [Zeplin](https://app.zeplin.io/project/5c74ef0d753f3ebccdf8f33d/screen/5ca729c2bad60f05a5910b1c)\r\n * Компонент программного вывода всплывающей подсказки\r\n *\r\n * @param {Object} props - свойства компонента\r\n * @return {JSX} - компонент\r\n */\r\nexport class Tooltip extends React.PureComponent {\r\n    tooltipId = _.uniqueId('tooltip-')\r\n\r\n    render () {\r\n        const { children, forceOpened, theme, onClick, mode } = this.props\r\n\r\n        const parsedChildren = React.Children.map(children, (child) => {\r\n            if (!child) {\r\n                return child\r\n            } else if (_.get(child, 'type.displayName') === Tip.displayName) {\r\n                return React.cloneElement(child, _.extend({}, child.props, {\r\n                    id: this.tooltipId,\r\n                    forceOpened\r\n                }))\r\n            }\r\n\r\n            if (child.props) {\r\n                const passedChild = React.cloneElement(child, _.extend({}, child.props, {\r\n                    'aria-controls': this.tooltipId,\r\n                    'aria-describedby': this.tooltipId,\r\n                }))\r\n                return (\r\n                    <div\r\n                        className={theme.tool}\r\n                        data-unit=\"tooltip:title\"\r\n                        onClickCapture={onClick}\r\n                    >\r\n                        {passedChild}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div\r\n                    className={theme.tool}\r\n                    data-unit=\"tooltip:title\"\r\n                    onClickCapture={onClick}\r\n                    aria-controls={this.tooltipId}\r\n                    aria-describedby={this.tooltipId}\r\n                >\r\n                    {child}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const passedProps = _(this.props)\r\n            .omit(['children', 'forceOpened', 'theme', 'children', 'onClick', 'mode', 'id'])\r\n            .extend({\r\n                className: classnames(theme.tooltip, mode === 'fullWidth' && theme.fullWidth),\r\n            })\r\n            .value()\r\n\r\n        return (\r\n            <div {...passedProps}>\r\n                {parsedChildren}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTooltip.propTypes = {\r\n    children: PropTypes.node,\r\n    forceOpened: PropTypes.bool,\r\n    theme: PropTypes.object,\r\n    onClick: PropTypes.func,\r\n    mode: PropTypes.oneOf(['fullWidth', void 0])\r\n}\r\n\r\nTooltip.defaultProps = {\r\n    children: void 0,\r\n    forceOpened: false,\r\n    theme: defaultTheme,\r\n    onClick: _.noop,\r\n    mode: void 0\r\n}\r\n\r\nTooltip.theme = defaultTheme\r\nTooltip.displayName = 'Tooltip'\r\nexport default Tooltip\r\n"],"names":["Tooltip","_","uniqueId","props","children","forceOpened","theme","onClick","mode","parsedChildren","React","Children","map","child","get","Tip","displayName","cloneElement","extend","id","tooltipId","passedChild","tool","passedProps","omit","className","classnames","tooltip","fullWidth","value","PureComponent","propTypes","PropTypes","node","bool","object","func","oneOf","defaultProps","defaultTheme","noop"],"mappings":"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"}