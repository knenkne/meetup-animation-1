/* eslint-disable no-magic-numbers, comment: char codes */

const fs = require('fs')
const path = require('path')

const getSerialArray = (start, upTo) =>
    [...new Array(upTo + 1 - start).keys()].map((v) => v + start)

const CONSISTENT = [
    ...getSerialArray(0, 47),
    ...getSerialArray(58, 64),
    ...getSerialArray(91, 96),
    ...getSerialArray(123, 127),
    160,
    164,
    166,
    167,
    169,
    ...getSerialArray(171, 174),
    176,
    177,
    ...getSerialArray(181, 183),
    187,
]

// eslint-disable-next-line no-sync, comment: There is no need to use an async function here, it is not a runtime operation
fs.writeFileSync(
    path.resolve(__dirname, 'windows-1251.json'),
    JSON.stringify({
        MAPPING: [
            ...CONSISTENT.map((v) => [v, v]),
            [1025, 168],
            [1026, 128],
            [1027, 129],
            [1028, 170],
            [1029, 189],
            [1030, 178],
            [1031, 175],
            [1032, 163],
            [1033, 138],
            [1034, 140],
            [1035, 142],
            [1036, 141],
            [1038, 161],
            [1039, 143],
            [1040, 192],
            [1041, 193],
            [1042, 194],
            [1043, 195],
            [1044, 196],
            [1045, 197],
            [1046, 198],
            [1047, 199],
            [1048, 200],
            [1049, 201],
            [1050, 202],
            [1051, 203],
            [1052, 204],
            [1053, 205],
            [1054, 206],
            [1055, 207],
            [1056, 208],
            [1057, 209],
            [1058, 210],
            [1059, 211],
            [1060, 212],
            [1061, 213],
            [1062, 214],
            [1063, 215],
            [1064, 216],
            [1065, 217],
            [1066, 218],
            [1067, 219],
            [1068, 220],
            [1069, 221],
            [1070, 222],
            [1071, 223],
            [1072, 224],
            [1073, 225],
            [1074, 226],
            [1075, 227],
            [1076, 228],
            [1077, 229],
            [1078, 230],
            [1079, 231],
            [1080, 232],
            [1081, 233],
            [1082, 234],
            [1083, 235],
            [1084, 236],
            [1085, 237],
            [1086, 238],
            [1087, 239],
            [1088, 240],
            [1089, 241],
            [1090, 242],
            [1091, 243],
            [1092, 244],
            [1093, 245],
            [1094, 246],
            [1095, 247],
            [1096, 248],
            [1097, 249],
            [1098, 250],
            [1099, 251],
            [1100, 252],
            [1101, 253],
            [1102, 254],
            [1103, 255],
            [1105, 184],
            [1106, 144],
            [1107, 131],
            [1108, 186],
            [1109, 190],
            [1110, 179],
            [1111, 191],
            [1112, 188],
            [1113, 154],
            [1114, 156],
            [1115, 158],
            [1116, 157],
            [1118, 162],
            [1119, 159],
            [1168, 165],
            [1169, 180],
            [8211, 150],
            [8212, 151],
            [8216, 145],
            [8217, 146],
            [8218, 130],
            [8220, 147],
            [8221, 148],
            [8222, 132],
            [8224, 134],
            [8225, 135],
            [8226, 149],
            [8230, 133],
            [8240, 137],
            [8249, 139],
            [8250, 155],
            [8364, 136],
            [8470, 185],
            [8482, 153],
        ].map(([key, value]) => [key, `%${value.toString(16).toUpperCase()}`]),
        NO_CHANGE: [
            ...getSerialArray(48, 57),
            ...getSerialArray(65, 90),
            ...getSerialArray(97, 122),
        ],
    })
)
