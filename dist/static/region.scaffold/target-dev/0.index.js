(window["__webpackJsonp_region_scaffold_1_2_0"] = window["__webpackJsonp_region_scaffold_1_2_0"] || []).push([[0],{

/***/ "./node_modules/cnbuilder/dist/index.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/cnbuilder/dist/index.esm.js ***!
  \**************************************************/
/*! exports provided: cnb, dcnb */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cnb\", function() { return n; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dcnb\", function() { return u; });\nvar r=Array.isArray,t=function(n){if(!n)return\"\";if(\"string\"==typeof n)return n;if(\"object\"!=typeof n)return\"\";var e,f,i=\"\";if(r(n)){if(0===(f=n.length))return\"\";if(1===f)return t(n[0]);for(var o=0;o<f;)(e=t(n[o++]))&&(i+=(i&&\" \")+e);return i}for(e in n)n[e]&&e&&(i+=(i&&\" \")+e);return i};function n(){var r=arguments.length;if(0===r)return\"\";if(1===r)return t(arguments[0]);for(var n,e=0,f=\"\";e<r;)(n=t(arguments[e++]))&&(f+=(f&&\" \")+n);return f}var e=/\\s+/,f=Object.create,i=Array.isArray;function o(){}function a(r,t){var n;if(r)if(\"string\"!=typeof r){if(\"object\"==typeof r)if(i(r)){n=r.length;for(var f=0;f<n;f++)a(r[f],t)}else{var o;for(o in r)t[o]=!!r[o]}}else{n=(r=r.split(e)).length;for(var u=0;u<n;u++)t[r[u]]=!0}}function u(){for(var r=arguments.length,t=new o,n=0;n<r;n++)a(arguments[n],t);var e,f=\"\";for(e in t)t[e]&&e&&(f+=(f&&\" \")+e);return f}o.prototype=f(null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY25idWlsZGVyL2Rpc3QvaW5kZXguZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NuYnVpbGRlci9kaXN0L2luZGV4LmVzbS5qcz8yNzQzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByPUFycmF5LmlzQXJyYXksdD1mdW5jdGlvbihuKXtpZighbilyZXR1cm5cIlwiO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBuKXJldHVybiBuO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBuKXJldHVyblwiXCI7dmFyIGUsZixpPVwiXCI7aWYocihuKSl7aWYoMD09PShmPW4ubGVuZ3RoKSlyZXR1cm5cIlwiO2lmKDE9PT1mKXJldHVybiB0KG5bMF0pO2Zvcih2YXIgbz0wO288ZjspKGU9dChuW28rK10pKSYmKGkrPShpJiZcIiBcIikrZSk7cmV0dXJuIGl9Zm9yKGUgaW4gbiluW2VdJiZlJiYoaSs9KGkmJlwiIFwiKStlKTtyZXR1cm4gaX07ZnVuY3Rpb24gbigpe3ZhciByPWFyZ3VtZW50cy5sZW5ndGg7aWYoMD09PXIpcmV0dXJuXCJcIjtpZigxPT09cilyZXR1cm4gdChhcmd1bWVudHNbMF0pO2Zvcih2YXIgbixlPTAsZj1cIlwiO2U8cjspKG49dChhcmd1bWVudHNbZSsrXSkpJiYoZis9KGYmJlwiIFwiKStuKTtyZXR1cm4gZn12YXIgZT0vXFxzKy8sZj1PYmplY3QuY3JlYXRlLGk9QXJyYXkuaXNBcnJheTtmdW5jdGlvbiBvKCl7fWZ1bmN0aW9uIGEocix0KXt2YXIgbjtpZihyKWlmKFwic3RyaW5nXCIhPXR5cGVvZiByKXtpZihcIm9iamVjdFwiPT10eXBlb2YgcilpZihpKHIpKXtuPXIubGVuZ3RoO2Zvcih2YXIgZj0wO2Y8bjtmKyspYShyW2ZdLHQpfWVsc2V7dmFyIG87Zm9yKG8gaW4gcil0W29dPSEhcltvXX19ZWxzZXtuPShyPXIuc3BsaXQoZSkpLmxlbmd0aDtmb3IodmFyIHU9MDt1PG47dSsrKXRbclt1XV09ITB9fWZ1bmN0aW9uIHUoKXtmb3IodmFyIHI9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBvLG49MDtuPHI7bisrKWEoYXJndW1lbnRzW25dLHQpO3ZhciBlLGY9XCJcIjtmb3IoZSBpbiB0KXRbZV0mJmUmJihmKz0oZiYmXCIgXCIpK2UpO3JldHVybiBmfW8ucHJvdG90eXBlPWYobnVsbCk7ZXhwb3J0e24gYXMgY25iLHUgYXMgZGNuYn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/cnbuilder/dist/index.esm.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/Draggable.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/Draggable.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DraggableCore\", {\n  enumerable: true,\n  get: function get() {\n    return _DraggableCore.default;\n  }\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\"));\n\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"react-dom\"));\n\nvar _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ \"classnames\"));\n\nvar _domFns = __webpack_require__(/*! ./utils/domFns */ \"./node_modules/react-draggable/build/cjs/utils/domFns.js\");\n\nvar _positionFns = __webpack_require__(/*! ./utils/positionFns */ \"./node_modules/react-draggable/build/cjs/utils/positionFns.js\");\n\nvar _shims = __webpack_require__(/*! ./utils/shims */ \"./node_modules/react-draggable/build/cjs/utils/shims.js\");\n\nvar _DraggableCore = _interopRequireDefault(__webpack_require__(/*! ./DraggableCore */ \"./node_modules/react-draggable/build/cjs/DraggableCore.js\"));\n\nvar _log = _interopRequireDefault(__webpack_require__(/*! ./utils/log */ \"./node_modules/react-draggable/build/cjs/utils/log.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n// Define <Draggable>\n//\nvar Draggable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Draggable, _React$Component);\n\n  var _super = _createSuper(Draggable);\n\n  _createClass(Draggable, null, [{\n    key: \"getDerivedStateFromProps\",\n    // React 16.3+\n    // Arity (props, state)\n    value: function getDerivedStateFromProps(_ref, _ref2) {\n      var position = _ref.position;\n      var prevPropsPosition = _ref2.prevPropsPosition;\n\n      // Set x/y if a new position is provided in props that is different than the previous.\n      if (position && (!prevPropsPosition || position.x !== prevPropsPosition.x || position.y !== prevPropsPosition.y)) {\n        (0, _log.default)('Draggable: getDerivedStateFromProps %j', {\n          position: position,\n          prevPropsPosition: prevPropsPosition\n        });\n        return {\n          x: position.x,\n          y: position.y,\n          prevPropsPosition: _objectSpread({}, position)\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  function Draggable(props\n  /*: DraggableProps*/\n  ) {\n    var _this;\n\n    _classCallCheck(this, Draggable);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStart\", function (e, coreData) {\n      (0, _log.default)('Draggable: onDragStart: %j', coreData); // Short-circuit if user's callback killed it.\n\n      var shouldStart = _this.props.onStart(e, (0, _positionFns.createDraggableData)(_assertThisInitialized(_this), coreData)); // Kills start event on core as well, so move handlers are never bound.\n\n\n      if (shouldStart === false) return false;\n\n      _this.setState({\n        dragging: true,\n        dragged: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDrag\", function (e, coreData) {\n      if (!_this.state.dragging) return false;\n      (0, _log.default)('Draggable: onDrag: %j', coreData);\n      var uiData = (0, _positionFns.createDraggableData)(_assertThisInitialized(_this), coreData);\n      var newState\n      /*: $Shape<DraggableState>*/\n      = {\n        x: uiData.x,\n        y: uiData.y\n      }; // Keep within bounds.\n\n      if (_this.props.bounds) {\n        // Save original x and y.\n        var x = newState.x,\n            y = newState.y; // Add slack to the values used to calculate bound position. This will ensure that if\n        // we start removing slack, the element won't react to it right away until it's been\n        // completely removed.\n\n        newState.x += _this.state.slackX;\n        newState.y += _this.state.slackY; // Get bound position. This will ceil/floor the x and y within the boundaries.\n\n        var _getBoundPosition = (0, _positionFns.getBoundPosition)(_assertThisInitialized(_this), newState.x, newState.y),\n            _getBoundPosition2 = _slicedToArray(_getBoundPosition, 2),\n            newStateX = _getBoundPosition2[0],\n            newStateY = _getBoundPosition2[1];\n\n        newState.x = newStateX;\n        newState.y = newStateY; // Recalculate slack by noting how much was shaved by the boundPosition handler.\n\n        newState.slackX = _this.state.slackX + (x - newState.x);\n        newState.slackY = _this.state.slackY + (y - newState.y); // Update the event we fire to reflect what really happened after bounds took effect.\n\n        uiData.x = newState.x;\n        uiData.y = newState.y;\n        uiData.deltaX = newState.x - _this.state.x;\n        uiData.deltaY = newState.y - _this.state.y;\n      } // Short-circuit if user's callback killed it.\n\n\n      var shouldUpdate = _this.props.onDrag(e, uiData);\n\n      if (shouldUpdate === false) return false;\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDragStop\", function (e, coreData) {\n      if (!_this.state.dragging) return false; // Short-circuit if user's callback killed it.\n\n      var shouldContinue = _this.props.onStop(e, (0, _positionFns.createDraggableData)(_assertThisInitialized(_this), coreData));\n\n      if (shouldContinue === false) return false;\n      (0, _log.default)('Draggable: onDragStop: %j', coreData);\n      var newState\n      /*: $Shape<DraggableState>*/\n      = {\n        dragging: false,\n        slackX: 0,\n        slackY: 0\n      }; // If this is a controlled component, the result of this operation will be to\n      // revert back to the old position. We expect a handler on `onDragStop`, at the least.\n\n      var controlled = Boolean(_this.props.position);\n\n      if (controlled) {\n        var _this$props$position = _this.props.position,\n            x = _this$props$position.x,\n            y = _this$props$position.y;\n        newState.x = x;\n        newState.y = y;\n      }\n\n      _this.setState(newState);\n    });\n\n    _this.state = {\n      // Whether or not we are currently dragging.\n      dragging: false,\n      // Whether or not we have been dragged before.\n      dragged: false,\n      // Current transform x and y.\n      x: props.position ? props.position.x : props.defaultPosition.x,\n      y: props.position ? props.position.y : props.defaultPosition.y,\n      prevPropsPosition: _objectSpread({}, props.position),\n      // Used for compensating for out-of-bounds drags\n      slackX: 0,\n      slackY: 0,\n      // Can only determine if SVG after mounting\n      isElementSVG: false\n    };\n\n    if (props.position && !(props.onDrag || props.onStop)) {\n      // eslint-disable-next-line no-console\n      console.warn('A `position` was applied to this <Draggable>, without drag handlers. This will make this ' + 'component effectively undraggable. Please attach `onDrag` or `onStop` handlers so you can adjust the ' + '`position` of this element.');\n    }\n\n    return _this;\n  }\n\n  _createClass(Draggable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Check to see if the element passed is an instanceof SVGElement\n      if (typeof window.SVGElement !== 'undefined' && this.findDOMNode() instanceof window.SVGElement) {\n        this.setState({\n          isElementSVG: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        dragging: false\n      }); // prevents invariant if unmounted while dragging\n    } // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n    // the underlying DOM node ourselves. See the README for more information.\n\n  }, {\n    key: \"findDOMNode\",\n    value: function findDOMNode()\n    /*: ?HTMLElement*/\n    {\n      return this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render()\n    /*: ReactElement<any>*/\n    {\n      var _classNames;\n\n      var _this$props = this.props,\n          axis = _this$props.axis,\n          bounds = _this$props.bounds,\n          children = _this$props.children,\n          defaultPosition = _this$props.defaultPosition,\n          defaultClassName = _this$props.defaultClassName,\n          defaultClassNameDragging = _this$props.defaultClassNameDragging,\n          defaultClassNameDragged = _this$props.defaultClassNameDragged,\n          position = _this$props.position,\n          positionOffset = _this$props.positionOffset,\n          scale = _this$props.scale,\n          draggableCoreProps = _objectWithoutProperties(_this$props, [\"axis\", \"bounds\", \"children\", \"defaultPosition\", \"defaultClassName\", \"defaultClassNameDragging\", \"defaultClassNameDragged\", \"position\", \"positionOffset\", \"scale\"]);\n\n      var style = {};\n      var svgTransform = null; // If this is controlled, we don't want to move it - unless it's dragging.\n\n      var controlled = Boolean(position);\n      var draggable = !controlled || this.state.dragging;\n      var validPosition = position || defaultPosition;\n      var transformOpts = {\n        // Set left if horizontal drag is enabled\n        x: (0, _positionFns.canDragX)(this) && draggable ? this.state.x : validPosition.x,\n        // Set top if vertical drag is enabled\n        y: (0, _positionFns.canDragY)(this) && draggable ? this.state.y : validPosition.y\n      }; // If this element was SVG, we use the `transform` attribute.\n\n      if (this.state.isElementSVG) {\n        svgTransform = (0, _domFns.createSVGTransform)(transformOpts, positionOffset);\n      } else {\n        // Add a CSS transform to move the element around. This allows us to move the element around\n        // without worrying about whether or not it is relatively or absolutely positioned.\n        // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n        // has a clean slate.\n        style = (0, _domFns.createCSSTransform)(transformOpts, positionOffset);\n      } // Mark with class while dragging\n\n\n      var className = (0, _classnames.default)(children.props.className || '', defaultClassName, (_classNames = {}, _defineProperty(_classNames, defaultClassNameDragging, this.state.dragging), _defineProperty(_classNames, defaultClassNameDragged, this.state.dragged), _classNames)); // Reuse the child provided\n      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\n      return /*#__PURE__*/React.createElement(_DraggableCore.default, _extends({}, draggableCoreProps, {\n        onStart: this.onDragStart,\n        onDrag: this.onDrag,\n        onStop: this.onDragStop\n      }), React.cloneElement(React.Children.only(children), {\n        className: className,\n        style: _objectSpread(_objectSpread({}, children.props.style), style),\n        transform: svgTransform\n      }));\n    }\n  }]);\n\n  return Draggable;\n}(React.Component);\n\nexports.default = Draggable;\n\n_defineProperty(Draggable, \"displayName\", 'Draggable');\n\n_defineProperty(Draggable, \"propTypes\", _objectSpread(_objectSpread({}, _DraggableCore.default.propTypes), {}, {\n  /**\n   * `axis` determines which axis the draggable can move.\n   *\n   *  Note that all callbacks will still return data as normal. This only\n   *  controls flushing to the DOM.\n   *\n   * 'both' allows movement horizontally and vertically.\n   * 'x' limits movement to horizontal axis.\n   * 'y' limits movement to vertical axis.\n   * 'none' limits all movement.\n   *\n   * Defaults to 'both'.\n   */\n  axis: _propTypes.default.oneOf(['both', 'x', 'y', 'none']),\n\n  /**\n   * `bounds` determines the range of movement available to the element.\n   * Available values are:\n   *\n   * 'parent' restricts movement within the Draggable's parent node.\n   *\n   * Alternatively, pass an object with the following properties, all of which are optional:\n   *\n   * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n   *\n   * All values are in px.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable bounds={{right: 300, bottom: 300}}>\n   *              <div>Content</div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  bounds: _propTypes.default.oneOfType([_propTypes.default.shape({\n    left: _propTypes.default.number,\n    right: _propTypes.default.number,\n    top: _propTypes.default.number,\n    bottom: _propTypes.default.number\n  }), _propTypes.default.string, _propTypes.default.oneOf([false])]),\n  defaultClassName: _propTypes.default.string,\n  defaultClassNameDragging: _propTypes.default.string,\n  defaultClassNameDragged: _propTypes.default.string,\n\n  /**\n   * `defaultPosition` specifies the x and y that the dragged item should start at\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable defaultPosition={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  defaultPosition: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n  positionOffset: _propTypes.default.shape({\n    x: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n    y: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string])\n  }),\n\n  /**\n   * `position`, if present, defines the current position of the element.\n   *\n   *  This is similar to how form elements in React work - if no `position` is supplied, the component\n   *  is uncontrolled.\n   *\n   * Example:\n   *\n   * ```jsx\n   *      let App = React.createClass({\n   *          render: function () {\n   *              return (\n   *                  <Draggable position={{x: 25, y: 25}}>\n   *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n   *                  </Draggable>\n   *              );\n   *          }\n   *      });\n   * ```\n   */\n  position: _propTypes.default.shape({\n    x: _propTypes.default.number,\n    y: _propTypes.default.number\n  }),\n\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n}));\n\n_defineProperty(Draggable, \"defaultProps\", _objectSpread(_objectSpread({}, _DraggableCore.default.defaultProps), {}, {\n  axis: 'both',\n  bounds: false,\n  defaultClassName: 'react-draggable',\n  defaultClassNameDragging: 'react-draggable-dragging',\n  defaultClassNameDragged: 'react-draggable-dragged',\n  defaultPosition: {\n    x: 0,\n    y: 0\n  },\n  position: null,\n  scale: 1\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/Draggable.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/DraggableCore.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/DraggableCore.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\"));\n\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"react-dom\"));\n\nvar _domFns = __webpack_require__(/*! ./utils/domFns */ \"./node_modules/react-draggable/build/cjs/utils/domFns.js\");\n\nvar _positionFns = __webpack_require__(/*! ./utils/positionFns */ \"./node_modules/react-draggable/build/cjs/utils/positionFns.js\");\n\nvar _shims = __webpack_require__(/*! ./utils/shims */ \"./node_modules/react-draggable/build/cjs/utils/shims.js\");\n\nvar _log = _interopRequireDefault(__webpack_require__(/*! ./utils/log */ \"./node_modules/react-draggable/build/cjs/utils/log.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Simple abstraction for dragging events names.\nvar eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n}; // Default to mouse events.\n\nvar dragEventFor = eventsFor.mouse;\n/*:: type DraggableCoreState = {\n  dragging: boolean,\n  lastX: number,\n  lastY: number,\n  touchIdentifier: ?number\n};*/\n\n/*:: export type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};*/\n\n/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void;*/\n\n/*:: export type ControlPosition = {x: number, y: number};*/\n\n/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n\n/*:: export type DraggableCoreProps = {\n  allowAnyClick: boolean,\n  cancel: string,\n  children: ReactElement<any>,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  nodeRef?: ?React.ElementRef<any>,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n  scale: number,\n};*/\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\nvar DraggableCore = /*#__PURE__*/function (_React$Component) {\n  _inherits(DraggableCore, _React$Component);\n\n  var _super = _createSuper(DraggableCore);\n\n  function DraggableCore() {\n    var _this;\n\n    _classCallCheck(this, DraggableCore);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      dragging: false,\n      // Used while dragging to determine deltas.\n      lastX: NaN,\n      lastY: NaN,\n      touchIdentifier: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragStart\", function (e) {\n      // Make it possible to attach event handlers on top of this one.\n      _this.props.onMouseDown(e); // Only accept left-clicks.\n\n\n      if (!_this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false; // Get nodes. Be sure to grab relative document (could be iframed)\n\n      var thisNode = _this.findDOMNode();\n\n      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n        throw new Error('<DraggableCore> not mounted on DragStart!');\n      }\n\n      var ownerDocument = thisNode.ownerDocument; // Short circuit if handle or cancel prop was provided and selector doesn't match.\n\n      if (_this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || _this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.handle, thisNode) || _this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, _this.props.cancel, thisNode)) {\n        return;\n      } // Prevent scrolling on mobile devices, like ipad/iphone.\n      // Important that this is after handle/cancel.\n\n\n      if (e.type === 'touchstart') e.preventDefault(); // Set touch identifier in component state if this is a touch event. This allows us to\n      // distinguish between individual touches on multitouch screens by identifying which\n      // touchpoint was set to this element.\n\n      var touchIdentifier = (0, _domFns.getTouchIdentifier)(e);\n\n      _this.setState({\n        touchIdentifier: touchIdentifier\n      }); // Get the current drag point from the event. This is used as the offset.\n\n\n      var position = (0, _positionFns.getControlPosition)(e, touchIdentifier, _assertThisInitialized(_this));\n      if (position == null) return; // not possible but satisfies flow\n\n      var x = position.x,\n          y = position.y; // Create an event object with all the data parents need to make a decision here.\n\n      var coreEvent = (0, _positionFns.createCoreData)(_assertThisInitialized(_this), x, y);\n      (0, _log.default)('DraggableCore: handleDragStart: %j', coreEvent); // Call event handler. If it returns explicit false, cancel.\n\n      (0, _log.default)('calling', _this.props.onStart);\n\n      var shouldUpdate = _this.props.onStart(e, coreEvent);\n\n      if (shouldUpdate === false || _this.mounted === false) return; // Add a style to the body to disable user-select. This prevents text from\n      // being selected all over the page.\n\n      if (_this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument); // Initiate dragging. Set the current x and y as offsets\n      // so we know how much we've moved during the drag. This allows us\n      // to drag elements around even if they have been moved, without issue.\n\n      _this.setState({\n        dragging: true,\n        lastX: x,\n        lastY: y\n      }); // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n      // this element. We use different events depending on whether or not we have detected that this\n      // is a touch-capable device.\n\n\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, _this.handleDrag);\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, _this.handleDragStop);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrag\", function (e) {\n      // Get the current drag point from the event. This is used as the offset.\n      var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _assertThisInitialized(_this));\n      if (position == null) return;\n      var x = position.x,\n          y = position.y; // Snap to grid if prop has been provided\n\n      if (Array.isArray(_this.props.grid)) {\n        var deltaX = x - _this.state.lastX,\n            deltaY = y - _this.state.lastY;\n\n        var _snapToGrid = (0, _positionFns.snapToGrid)(_this.props.grid, deltaX, deltaY);\n\n        var _snapToGrid2 = _slicedToArray(_snapToGrid, 2);\n\n        deltaX = _snapToGrid2[0];\n        deltaY = _snapToGrid2[1];\n        if (!deltaX && !deltaY) return; // skip useless drag\n\n        x = _this.state.lastX + deltaX, y = _this.state.lastY + deltaY;\n      }\n\n      var coreEvent = (0, _positionFns.createCoreData)(_assertThisInitialized(_this), x, y);\n      (0, _log.default)('DraggableCore: handleDrag: %j', coreEvent); // Call event handler. If it returns explicit false, trigger end.\n\n      var shouldUpdate = _this.props.onDrag(e, coreEvent);\n\n      if (shouldUpdate === false || _this.mounted === false) {\n        try {\n          // $FlowIgnore\n          _this.handleDragStop(new MouseEvent('mouseup'));\n        } catch (err) {\n          // Old browsers\n          var event = ((document.createEvent('MouseEvents')\n          /*: any*/\n          )\n          /*: MouseTouchEvent*/\n          ); // I see why this insanity was deprecated\n          // $FlowIgnore\n\n          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n\n          _this.handleDragStop(event);\n        }\n\n        return;\n      }\n\n      _this.setState({\n        lastX: x,\n        lastY: y\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragStop\", function (e) {\n      if (!_this.state.dragging) return;\n      var position = (0, _positionFns.getControlPosition)(e, _this.state.touchIdentifier, _assertThisInitialized(_this));\n      if (position == null) return;\n      var x = position.x,\n          y = position.y;\n      var coreEvent = (0, _positionFns.createCoreData)(_assertThisInitialized(_this), x, y); // Call event handler\n\n      var shouldContinue = _this.props.onStop(e, coreEvent);\n\n      if (shouldContinue === false || _this.mounted === false) return false;\n\n      var thisNode = _this.findDOMNode();\n\n      if (thisNode) {\n        // Remove user-select hack\n        if (_this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(thisNode.ownerDocument);\n      }\n\n      (0, _log.default)('DraggableCore: handleDragStop: %j', coreEvent); // Reset the el.\n\n      _this.setState({\n        dragging: false,\n        lastX: NaN,\n        lastY: NaN\n      });\n\n      if (thisNode) {\n        // Remove event handlers\n        (0, _log.default)('DraggableCore: Removing handlers');\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, _this.handleDrag);\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, _this.handleDragStop);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function (e) {\n      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n      return _this.handleDragStart(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseUp\", function (e) {\n      dragEventFor = eventsFor.mouse;\n      return _this.handleDragStop(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function (e) {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return _this.handleDragStart(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function (e) {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return _this.handleDragStop(e);\n    });\n\n    return _this;\n  }\n\n  _createClass(DraggableCore, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true; // Touch handlers must be added with {passive: false} to be cancelable.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n      var thisNode = this.findDOMNode();\n\n      if (thisNode) {\n        (0, _domFns.addEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n          passive: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false; // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n      // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n\n      var thisNode = this.findDOMNode();\n\n      if (thisNode) {\n        var ownerDocument = thisNode.ownerDocument;\n        (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n        (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);\n        (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n        (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n        (0, _domFns.removeEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n          passive: false\n        });\n        if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument);\n      }\n    } // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n    // the underlying DOM node ourselves. See the README for more information.\n\n  }, {\n    key: \"findDOMNode\",\n    value: function findDOMNode()\n    /*: ?HTMLElement*/\n    {\n      return this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Reuse the child provided\n      // This makes it flexible to use whatever element is wanted (div, ul, etc)\n      return React.cloneElement(React.Children.only(this.props.children), {\n        // Note: mouseMove handler is attached to document so it will still function\n        // when the user drags quickly and leaves the bounds of the element.\n        onMouseDown: this.onMouseDown,\n        onMouseUp: this.onMouseUp,\n        // onTouchStart is added on `componentDidMount` so they can be added with\n        // {passive: false}, which allows it to cancel. See \n        // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n        onTouchEnd: this.onTouchEnd\n      });\n    }\n  }]);\n\n  return DraggableCore;\n}(React.Component);\n\nexports.default = DraggableCore;\n\n_defineProperty(DraggableCore, \"displayName\", 'DraggableCore');\n\n_defineProperty(DraggableCore, \"propTypes\", {\n  /**\n   * `allowAnyClick` allows dragging using any mouse button.\n   * By default, we only accept the left button.\n   *\n   * Defaults to `false`.\n   */\n  allowAnyClick: _propTypes.default.bool,\n\n  /**\n   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n   * with the exception of `onMouseDown`, will not fire.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * By default, we add 'user-select:none' attributes to the document body\n   * to prevent ugly text selection during drag. If this is causing problems\n   * for your app, set this to `false`.\n   */\n  enableUserSelectHack: _propTypes.default.bool,\n\n  /**\n   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n   * instead of using the parent node.\n   */\n  offsetParent: function offsetParent(props\n  /*: DraggableCoreProps*/\n  , propName\n  /*: $Keys<DraggableCoreProps>*/\n  ) {\n    if (props[propName] && props[propName].nodeType !== 1) {\n      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n    }\n  },\n\n  /**\n   * `grid` specifies the x and y that dragging should snap to.\n   */\n  grid: _propTypes.default.arrayOf(_propTypes.default.number),\n\n  /**\n   * `handle` specifies a selector to be used as the handle that initiates drag.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable handle=\".handle\">\n   *              <div>\n   *                  <div className=\"handle\">Click me to drag</div>\n   *                  <div>This is some other content</div>\n   *              </div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  handle: _propTypes.default.string,\n\n  /**\n   * `cancel` specifies a selector to be used to prevent drag initialization.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *           return(\n   *               <Draggable cancel=\".cancel\">\n   *                   <div>\n   *                     <div className=\"cancel\">You can't drag from here</div>\n   *                     <div>Dragging here works fine</div>\n   *                   </div>\n   *               </Draggable>\n   *           );\n   *       }\n   *   });\n   * ```\n   */\n  cancel: _propTypes.default.string,\n\n  /* If running in React Strict mode, ReactDOM.findDOMNode() is deprecated.\n   * Unfortunately, in order for <Draggable> to work properly, we need raw access\n   * to the underlying DOM node. If you want to avoid the warning, pass a `nodeRef`\n   * as in this example:\n   *\n   * function MyComponent() {\n   *   const nodeRef = React.useRef(null);\n   *   return (\n   *     <Draggable nodeRef={nodeRef}>\n   *       <div ref={nodeRef}>Example Target</div>\n   *     </Draggable>\n   *   );\n   * }\n   *\n   * This can be used for arbitrarily nested components, so long as the ref ends up\n   * pointing to the actual child DOM node and not a custom component.\n   */\n  nodeRef: _propTypes.default.object,\n\n  /**\n   * Called when dragging starts.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onStart: _propTypes.default.func,\n\n  /**\n   * Called while dragging.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onDrag: _propTypes.default.func,\n\n  /**\n   * Called when dragging stops.\n   * If this function returns the boolean false, the drag will remain active.\n   */\n  onStop: _propTypes.default.func,\n\n  /**\n   * A workaround option which can be passed if onMouseDown needs to be accessed,\n   * since it'll always be blocked (as there is internal use of onMouseDown)\n   */\n  onMouseDown: _propTypes.default.func,\n\n  /**\n   * `scale`, if set, applies scaling while dragging an element\n   */\n  scale: _propTypes.default.number,\n\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n\n_defineProperty(DraggableCore, \"defaultProps\", {\n  allowAnyClick: false,\n  // by default only accept left click\n  cancel: null,\n  disabled: false,\n  enableUserSelectHack: true,\n  offsetParent: null,\n  handle: null,\n  grid: null,\n  transform: null,\n  onStart: function onStart() {},\n  onDrag: function onDrag() {},\n  onStop: function onStop() {},\n  onMouseDown: function onMouseDown() {},\n  scale: 1\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/DraggableCore.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/cjs.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/cjs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! ./Draggable */ \"./node_modules/react-draggable/build/cjs/Draggable.js\"),\n    Draggable = _require.default,\n    DraggableCore = _require.DraggableCore; // Previous versions of this lib exported <Draggable> as the root export. As to no-// them, or TypeScript, we export *both* as the root and as 'default'.\n// See https://github.com/mzabriskie/react-draggable/pull/254\n// and https://github.com/mzabriskie/react-draggable/issues/266\n\n\nmodule.exports = Draggable;\nmodule.exports.default = Draggable;\nmodule.exports.DraggableCore = DraggableCore;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy9janMuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy9janMuanM/NzY4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnLi9EcmFnZ2FibGUnKSxcbiAgICBEcmFnZ2FibGUgPSBfcmVxdWlyZS5kZWZhdWx0LFxuICAgIERyYWdnYWJsZUNvcmUgPSBfcmVxdWlyZS5EcmFnZ2FibGVDb3JlOyAvLyBQcmV2aW91cyB2ZXJzaW9ucyBvZiB0aGlzIGxpYiBleHBvcnRlZCA8RHJhZ2dhYmxlPiBhcyB0aGUgcm9vdCBleHBvcnQuIEFzIHRvIG5vLS8vIHRoZW0sIG9yIFR5cGVTY3JpcHQsIHdlIGV4cG9ydCAqYm90aCogYXMgdGhlIHJvb3QgYW5kIGFzICdkZWZhdWx0Jy5cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbXphYnJpc2tpZS9yZWFjdC1kcmFnZ2FibGUvcHVsbC8yNTRcbi8vIGFuZCBodHRwczovL2dpdGh1Yi5jb20vbXphYnJpc2tpZS9yZWFjdC1kcmFnZ2FibGUvaXNzdWVzLzI2NlxuXG5cbm1vZHVsZS5leHBvcnRzID0gRHJhZ2dhYmxlO1xubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IERyYWdnYWJsZTtcbm1vZHVsZS5leHBvcnRzLkRyYWdnYWJsZUNvcmUgPSBEcmFnZ2FibGVDb3JlOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/cjs.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/utils/domFns.js":
/*!****************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/utils/domFns.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesSelector = matchesSelector;\nexports.matchesSelectorAndParentsTo = matchesSelectorAndParentsTo;\nexports.addEvent = addEvent;\nexports.removeEvent = removeEvent;\nexports.outerHeight = outerHeight;\nexports.outerWidth = outerWidth;\nexports.innerHeight = innerHeight;\nexports.innerWidth = innerWidth;\nexports.offsetXYFromParent = offsetXYFromParent;\nexports.createCSSTransform = createCSSTransform;\nexports.createSVGTransform = createSVGTransform;\nexports.getTranslation = getTranslation;\nexports.getTouch = getTouch;\nexports.getTouchIdentifier = getTouchIdentifier;\nexports.addUserSelectStyles = addUserSelectStyles;\nexports.removeUserSelectStyles = removeUserSelectStyles;\nexports.addClassName = addClassName;\nexports.removeClassName = removeClassName;\n\nvar _shims = __webpack_require__(/*! ./shims */ \"./node_modules/react-draggable/build/cjs/utils/shims.js\");\n\nvar _getPrefix = _interopRequireWildcard(__webpack_require__(/*! ./getPrefix */ \"./node_modules/react-draggable/build/cjs/utils/getPrefix.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar matchesSelectorFunc = '';\n\nfunction matchesSelector(el\n/*: Node*/\n, selector\n/*: string*/\n)\n/*: boolean*/\n{\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = (0, _shims.findInArray)(['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'], function (method) {\n      // $FlowIgnore: Doesn't think elements are indexable\n      return (0, _shims.isFunction)(el[method]);\n    });\n  } // Might not be found entirely (not an Element?) - in that case, bail\n  // $FlowIgnore: Doesn't think elements are indexable\n\n\n  if (!(0, _shims.isFunction)(el[matchesSelectorFunc])) return false; // $FlowIgnore: Doesn't think elements are indexable\n\n  return el[matchesSelectorFunc](selector);\n} // Works up the tree to the draggable itself attempting to match selector.\n\n\nfunction matchesSelectorAndParentsTo(el\n/*: Node*/\n, selector\n/*: string*/\n, baseNode\n/*: Node*/\n)\n/*: boolean*/\n{\n  var node = el;\n\n  do {\n    if (matchesSelector(node, selector)) return true;\n    if (node === baseNode) return false;\n    node = node.parentNode;\n  } while (node);\n\n  return false;\n}\n\nfunction addEvent(el\n/*: ?Node*/\n, event\n/*: string*/\n, handler\n/*: Function*/\n, inputOptions\n/*: Object*/\n)\n/*: void*/\n{\n  if (!el) return;\n\n  var options = _objectSpread({\n    capture: true\n  }, inputOptions);\n\n  if (el.addEventListener) {\n    el.addEventListener(event, handler, options);\n  } else if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nfunction removeEvent(el\n/*: ?Node*/\n, event\n/*: string*/\n, handler\n/*: Function*/\n, inputOptions\n/*: Object*/\n)\n/*: void*/\n{\n  if (!el) return;\n\n  var options = _objectSpread({\n    capture: true\n  }, inputOptions);\n\n  if (el.removeEventListener) {\n    el.removeEventListener(event, handler, options);\n  } else if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nfunction outerHeight(node\n/*: HTMLElement*/\n)\n/*: number*/\n{\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  var height = node.clientHeight;\n  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height += (0, _shims.int)(computedStyle.borderTopWidth);\n  height += (0, _shims.int)(computedStyle.borderBottomWidth);\n  return height;\n}\n\nfunction outerWidth(node\n/*: HTMLElement*/\n)\n/*: number*/\n{\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  var width = node.clientWidth;\n  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width += (0, _shims.int)(computedStyle.borderLeftWidth);\n  width += (0, _shims.int)(computedStyle.borderRightWidth);\n  return width;\n}\n\nfunction innerHeight(node\n/*: HTMLElement*/\n)\n/*: number*/\n{\n  var height = node.clientHeight;\n  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  height -= (0, _shims.int)(computedStyle.paddingTop);\n  height -= (0, _shims.int)(computedStyle.paddingBottom);\n  return height;\n}\n\nfunction innerWidth(node\n/*: HTMLElement*/\n)\n/*: number*/\n{\n  var width = node.clientWidth;\n  var computedStyle = node.ownerDocument.defaultView.getComputedStyle(node);\n  width -= (0, _shims.int)(computedStyle.paddingLeft);\n  width -= (0, _shims.int)(computedStyle.paddingRight);\n  return width;\n} // Get from offsetParent\n\n\nfunction offsetXYFromParent(evt\n/*: {clientX: number, clientY: number}*/\n, offsetParent\n/*: HTMLElement*/\n, scale\n/*: number*/\n)\n/*: ControlPosition*/\n{\n  var isBody = offsetParent === offsetParent.ownerDocument.body;\n  var offsetParentRect = isBody ? {\n    left: 0,\n    top: 0\n  } : offsetParent.getBoundingClientRect();\n  var x = (evt.clientX + offsetParent.scrollLeft - offsetParentRect.left) / scale;\n  var y = (evt.clientY + offsetParent.scrollTop - offsetParentRect.top) / scale;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction createCSSTransform(controlPos\n/*: ControlPosition*/\n, positionOffset\n/*: PositionOffsetControlPosition*/\n)\n/*: Object*/\n{\n  var translation = getTranslation(controlPos, positionOffset, 'px');\n  return _defineProperty({}, (0, _getPrefix.browserPrefixToKey)('transform', _getPrefix.default), translation);\n}\n\nfunction createSVGTransform(controlPos\n/*: ControlPosition*/\n, positionOffset\n/*: PositionOffsetControlPosition*/\n)\n/*: string*/\n{\n  var translation = getTranslation(controlPos, positionOffset, '');\n  return translation;\n}\n\nfunction getTranslation(_ref2, positionOffset\n/*: PositionOffsetControlPosition*/\n, unitSuffix\n/*: string*/\n)\n/*: string*/\n{\n  var x = _ref2.x,\n      y = _ref2.y;\n  var translation = \"translate(\".concat(x).concat(unitSuffix, \",\").concat(y).concat(unitSuffix, \")\");\n\n  if (positionOffset) {\n    var defaultX = \"\".concat(typeof positionOffset.x === 'string' ? positionOffset.x : positionOffset.x + unitSuffix);\n    var defaultY = \"\".concat(typeof positionOffset.y === 'string' ? positionOffset.y : positionOffset.y + unitSuffix);\n    translation = \"translate(\".concat(defaultX, \", \").concat(defaultY, \")\") + translation;\n  }\n\n  return translation;\n}\n\nfunction getTouch(e\n/*: MouseTouchEvent*/\n, identifier\n/*: number*/\n)\n/*: ?{clientX: number, clientY: number}*/\n{\n  return e.targetTouches && (0, _shims.findInArray)(e.targetTouches, function (t) {\n    return identifier === t.identifier;\n  }) || e.changedTouches && (0, _shims.findInArray)(e.changedTouches, function (t) {\n    return identifier === t.identifier;\n  });\n}\n\nfunction getTouchIdentifier(e\n/*: MouseTouchEvent*/\n)\n/*: ?number*/\n{\n  if (e.targetTouches && e.targetTouches[0]) return e.targetTouches[0].identifier;\n  if (e.changedTouches && e.changedTouches[0]) return e.changedTouches[0].identifier;\n} // User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\n// Note we're passing `document` b/c we could be iframed\n\n\nfunction addUserSelectStyles(doc\n/*: ?Document*/\n) {\n  if (!doc) return;\n  var styleEl = doc.getElementById('react-draggable-style-el');\n\n  if (!styleEl) {\n    styleEl = doc.createElement('style');\n    styleEl.type = 'text/css';\n    styleEl.id = 'react-draggable-style-el';\n    styleEl.innerHTML = '.react-draggable-transparent-selection *::-moz-selection {all: inherit;}\\n';\n    styleEl.innerHTML += '.react-draggable-transparent-selection *::selection {all: inherit;}\\n';\n    doc.getElementsByTagName('head')[0].appendChild(styleEl);\n  }\n\n  if (doc.body) addClassName(doc.body, 'react-draggable-transparent-selection');\n}\n\nfunction removeUserSelectStyles(doc\n/*: ?Document*/\n) {\n  if (!doc) return;\n\n  try {\n    if (doc.body) removeClassName(doc.body, 'react-draggable-transparent-selection'); // $FlowIgnore: IE\n\n    if (doc.selection) {\n      // $FlowIgnore: IE\n      doc.selection.empty();\n    } else {\n      // Remove selection caused by scroll, unless it's a focused input\n      // (we use doc.defaultView in case we're in an iframe)\n      var selection = (doc.defaultView || window).getSelection();\n\n      if (selection && selection.type !== 'Caret') {\n        selection.removeAllRanges();\n      }\n    }\n  } catch (e) {// probably IE\n  }\n}\n\nfunction addClassName(el\n/*: HTMLElement*/\n, className\n/*: string*/\n) {\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    if (!el.className.match(new RegExp(\"(?:^|\\\\s)\".concat(className, \"(?!\\\\S)\")))) {\n      el.className += \" \".concat(className);\n    }\n  }\n}\n\nfunction removeClassName(el\n/*: HTMLElement*/\n, className\n/*: string*/\n) {\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp(\"(?:^|\\\\s)\".concat(className, \"(?!\\\\S)\"), 'g'), '');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/utils/domFns.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/utils/getPrefix.js":
/*!*******************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/utils/getPrefix.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrefix = getPrefix;\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\nfunction getPrefix()\n/*: string*/\n{\n  var prop\n  /*: string*/\n  = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n  var style = window.document.documentElement.style;\n  if (prop in style) return '';\n\n  for (var i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nfunction browserPrefixToKey(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\n\nfunction browserPrefixToStyle(prop\n/*: string*/\n, prefix\n/*: string*/\n)\n/*: string*/\n{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\n\nfunction kebabToTitleCase(str\n/*: string*/\n)\n/*: string*/\n{\n  var out = '';\n  var shouldCapitalize = true;\n\n  for (var i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n\n  return out;\n} // Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\n\n\nvar _default = getPrefix();\n\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy91dGlscy9nZXRQcmVmaXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy91dGlscy9nZXRQcmVmaXguanM/MTlhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZ2V0UHJlZml4ID0gZ2V0UHJlZml4O1xuZXhwb3J0cy5icm93c2VyUHJlZml4VG9LZXkgPSBicm93c2VyUHJlZml4VG9LZXk7XG5leHBvcnRzLmJyb3dzZXJQcmVmaXhUb1N0eWxlID0gYnJvd3NlclByZWZpeFRvU3R5bGU7XG5leHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7XG52YXIgcHJlZml4ZXMgPSBbJ01veicsICdXZWJraXQnLCAnTycsICdtcyddO1xuXG5mdW5jdGlvbiBnZXRQcmVmaXgoKVxuLyo6IHN0cmluZyovXG57XG4gIHZhciBwcm9wXG4gIC8qOiBzdHJpbmcqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogJ3RyYW5zZm9ybSc7XG4gIC8vIENoZWNraW5nIHNwZWNpZmljYWxseSBmb3IgJ3dpbmRvdy5kb2N1bWVudCcgaXMgZm9yIHBzZXVkby1icm93c2VyIHNlcnZlci1zaWRlXG4gIC8vIGVudmlyb25tZW50cyB0aGF0IGRlZmluZSAnd2luZG93JyBhcyB0aGUgZ2xvYmFsIGNvbnRleHQuXG4gIC8vIEUuZy4gUmVhY3QtcmFpbHMgKHNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yYWlscy9wdWxsLzg0KVxuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHJldHVybiAnJztcbiAgdmFyIHN0eWxlID0gd2luZG93LmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZTtcbiAgaWYgKHByb3AgaW4gc3R5bGUpIHJldHVybiAnJztcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHByZWZpeGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGJyb3dzZXJQcmVmaXhUb0tleShwcm9wLCBwcmVmaXhlc1tpXSkgaW4gc3R5bGUpIHJldHVybiBwcmVmaXhlc1tpXTtcbiAgfVxuXG4gIHJldHVybiAnJztcbn1cblxuZnVuY3Rpb24gYnJvd3NlclByZWZpeFRvS2V5KHByb3Bcbi8qOiBzdHJpbmcqL1xuLCBwcmVmaXhcbi8qOiBzdHJpbmcqL1xuKVxuLyo6IHN0cmluZyovXG57XG4gIHJldHVybiBwcmVmaXggPyBcIlwiLmNvbmNhdChwcmVmaXgpLmNvbmNhdChrZWJhYlRvVGl0bGVDYXNlKHByb3ApKSA6IHByb3A7XG59XG5cbmZ1bmN0aW9uIGJyb3dzZXJQcmVmaXhUb1N0eWxlKHByb3Bcbi8qOiBzdHJpbmcqL1xuLCBwcmVmaXhcbi8qOiBzdHJpbmcqL1xuKVxuLyo6IHN0cmluZyovXG57XG4gIHJldHVybiBwcmVmaXggPyBcIi1cIi5jb25jYXQocHJlZml4LnRvTG93ZXJDYXNlKCksIFwiLVwiKS5jb25jYXQocHJvcCkgOiBwcm9wO1xufVxuXG5mdW5jdGlvbiBrZWJhYlRvVGl0bGVDYXNlKHN0clxuLyo6IHN0cmluZyovXG4pXG4vKjogc3RyaW5nKi9cbntcbiAgdmFyIG91dCA9ICcnO1xuICB2YXIgc2hvdWxkQ2FwaXRhbGl6ZSA9IHRydWU7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc2hvdWxkQ2FwaXRhbGl6ZSkge1xuICAgICAgb3V0ICs9IHN0cltpXS50b1VwcGVyQ2FzZSgpO1xuICAgICAgc2hvdWxkQ2FwaXRhbGl6ZSA9IGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoc3RyW2ldID09PSAnLScpIHtcbiAgICAgIHNob3VsZENhcGl0YWxpemUgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBvdXQgKz0gc3RyW2ldO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXQ7XG59IC8vIERlZmF1bHQgZXhwb3J0IGlzIHRoZSBwcmVmaXggaXRzZWxmLCBsaWtlICdNb3onLCAnV2Via2l0JywgZXRjXG4vLyBOb3RlIHRoYXQgeW91IG1heSBoYXZlIHRvIHJlLXRlc3QgZm9yIGNlcnRhaW4gdGhpbmdzOyBmb3IgaW5zdGFuY2UsIENocm9tZSA1MFxuLy8gY2FuIGhhbmRsZSB1bnByZWZpeGVkIGB0cmFuc2Zvcm1gLCBidXQgbm90IHVucHJlZml4ZWQgYHVzZXItc2VsZWN0YFxuXG5cbnZhciBfZGVmYXVsdCA9IGdldFByZWZpeCgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/utils/getPrefix.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/utils/log.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/utils/log.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = log;\n\n/*eslint no-console:0*/\nfunction log() {\n  var _console;\n\n  if (undefined) (_console = console).log.apply(_console, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy91dGlscy9sb2cuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy91dGlscy9sb2cuanM/YjEyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxvZztcblxuLyplc2xpbnQgbm8tY29uc29sZTowKi9cbmZ1bmN0aW9uIGxvZygpIHtcbiAgdmFyIF9jb25zb2xlO1xuXG4gIGlmICh1bmRlZmluZWQpIChfY29uc29sZSA9IGNvbnNvbGUpLmxvZy5hcHBseShfY29uc29sZSwgYXJndW1lbnRzKTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/utils/log.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/utils/positionFns.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/utils/positionFns.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBoundPosition = getBoundPosition;\nexports.snapToGrid = snapToGrid;\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.getControlPosition = getControlPosition;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\n\nvar _shims = __webpack_require__(/*! ./shims */ \"./node_modules/react-draggable/build/cjs/utils/shims.js\");\n\nvar _domFns = __webpack_require__(/*! ./domFns */ \"./node_modules/react-draggable/build/cjs/utils/domFns.js\");\n\nfunction getBoundPosition(draggable\n/*: Draggable*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: [number, number]*/\n{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y]; // Clone new bounds\n\n  var bounds = draggable.props.bounds;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  var node = findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    var ownerDocument = node.ownerDocument;\n    var ownerWindow = ownerDocument.defaultView;\n    var boundNode;\n\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n\n    var nodeStyle = ownerWindow.getComputedStyle(node);\n    var boundNodeStyle = ownerWindow.getComputedStyle(boundNode); // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNode) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNode) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  } // Keep x and y below right and bottom limits...\n\n\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom); // But above left and top limits.\n\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\n\nfunction snapToGrid(grid\n/*: [number, number]*/\n, pendingX\n/*: number*/\n, pendingY\n/*: number*/\n)\n/*: [number, number]*/\n{\n  var x = Math.round(pendingX / grid[0]) * grid[0];\n  var y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nfunction canDragX(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nfunction canDragY(draggable\n/*: Draggable*/\n)\n/*: boolean*/\n{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n} // Get {x, y} positions from event.\n\n\nfunction getControlPosition(e\n/*: MouseTouchEvent*/\n, touchIdentifier\n/*: ?number*/\n, draggableCore\n/*: DraggableCore*/\n)\n/*: ?ControlPosition*/\n{\n  var touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n\n  var node = findDOMNode(draggableCore); // User can provide an offsetParent if desired.\n\n  var offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n} // Create an data object exposed by <DraggableCore>'s events\n\n\nfunction createCoreData(draggable\n/*: DraggableCore*/\n, x\n/*: number*/\n, y\n/*: number*/\n)\n/*: DraggableData*/\n{\n  var state = draggable.state;\n  var isStart = !(0, _shims.isNum)(state.lastX);\n  var node = findDOMNode(draggable);\n\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node: node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x: x,\n      y: y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node: node,\n      deltaX: x - state.lastX,\n      deltaY: y - state.lastY,\n      lastX: state.lastX,\n      lastY: state.lastY,\n      x: x,\n      y: y\n    };\n  }\n} // Create an data exposed by <Draggable>'s events\n\n\nfunction createDraggableData(draggable\n/*: Draggable*/\n, coreData\n/*: DraggableData*/\n)\n/*: DraggableData*/\n{\n  var scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n} // A lot faster than stringify/parse\n\n\nfunction cloneBounds(bounds\n/*: Bounds*/\n)\n/*: Bounds*/\n{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\nfunction findDOMNode(draggable\n/*: Draggable | DraggableCore*/\n)\n/*: HTMLElement*/\n{\n  var node = draggable.findDOMNode();\n\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  } // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n\n\n  return node;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/utils/positionFns.js\n");

/***/ }),

/***/ "./node_modules/react-draggable/build/cjs/utils/shims.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-draggable/build/cjs/utils/shims.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findInArray = findInArray;\nexports.isFunction = isFunction;\nexports.isNum = isNum;\nexports.int = int;\nexports.dontSetMe = dontSetMe;\n\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nfunction findInArray(array\n/*: Array<any> | TouchList*/\n, callback\n/*: Function*/\n)\n/*: any*/\n{\n  for (var i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nfunction isFunction(func\n/*: any*/\n)\n/*: boolean %checks*/\n{\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nfunction isNum(num\n/*: any*/\n)\n/*: boolean %checks*/\n{\n  return typeof num === 'number' && !isNaN(num);\n}\n\nfunction int(a\n/*: string*/\n)\n/*: number*/\n{\n  return parseInt(a, 10);\n}\n\nfunction dontSetMe(props\n/*: Object*/\n, propName\n/*: string*/\n, componentName\n/*: string*/\n) {\n  if (props[propName]) {\n    return new Error(\"Invalid prop \".concat(propName, \" passed to \").concat(componentName, \" - do not set this, set it on the child.\"));\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtZHJhZ2dhYmxlL2J1aWxkL2Nqcy91dGlscy9zaGltcy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kcmFnZ2FibGUvYnVpbGQvY2pzL3V0aWxzL3NoaW1zLmpzPzgxYjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZpbmRJbkFycmF5ID0gZmluZEluQXJyYXk7XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuZXhwb3J0cy5pc051bSA9IGlzTnVtO1xuZXhwb3J0cy5pbnQgPSBpbnQ7XG5leHBvcnRzLmRvbnRTZXRNZSA9IGRvbnRTZXRNZTtcblxuLy8gQGNyZWRpdHMgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vcm9nb3pobmlrb2ZmL2E0M2NmZWQyN2M0MWU0ZTY4Y2RjXG5mdW5jdGlvbiBmaW5kSW5BcnJheShhcnJheVxuLyo6IEFycmF5PGFueT4gfCBUb3VjaExpc3QqL1xuLCBjYWxsYmFja1xuLyo6IEZ1bmN0aW9uKi9cbilcbi8qOiBhbnkqL1xue1xuICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoY2FsbGJhY2suYXBwbHkoY2FsbGJhY2ssIFthcnJheVtpXSwgaSwgYXJyYXldKSkgcmV0dXJuIGFycmF5W2ldO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oZnVuY1xuLyo6IGFueSovXG4pXG4vKjogYm9vbGVhbiAlY2hlY2tzKi9cbntcbiAgcmV0dXJuIHR5cGVvZiBmdW5jID09PSAnZnVuY3Rpb24nIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChmdW5jKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn1cblxuZnVuY3Rpb24gaXNOdW0obnVtXG4vKjogYW55Ki9cbilcbi8qOiBib29sZWFuICVjaGVja3MqL1xue1xuICByZXR1cm4gdHlwZW9mIG51bSA9PT0gJ251bWJlcicgJiYgIWlzTmFOKG51bSk7XG59XG5cbmZ1bmN0aW9uIGludChhXG4vKjogc3RyaW5nKi9cbilcbi8qOiBudW1iZXIqL1xue1xuICByZXR1cm4gcGFyc2VJbnQoYSwgMTApO1xufVxuXG5mdW5jdGlvbiBkb250U2V0TWUocHJvcHNcbi8qOiBPYmplY3QqL1xuLCBwcm9wTmFtZVxuLyo6IHN0cmluZyovXG4sIGNvbXBvbmVudE5hbWVcbi8qOiBzdHJpbmcqL1xuKSB7XG4gIGlmIChwcm9wc1twcm9wTmFtZV0pIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKFwiSW52YWxpZCBwcm9wIFwiLmNvbmNhdChwcm9wTmFtZSwgXCIgcGFzc2VkIHRvIFwiKS5jb25jYXQoY29tcG9uZW50TmFtZSwgXCIgLSBkbyBub3Qgc2V0IHRoaXMsIHNldCBpdCBvbiB0aGUgY2hpbGQuXCIpKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-draggable/build/cjs/utils/shims.js\n");

/***/ }),

/***/ "./node_modules/react-scrollbars-custom/dist/rsc.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-scrollbars-custom/dist/rsc.esm.js ***!
  \**************************************************************/
/*! exports provided: default, Scrollbar, ScrollbarContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Scrollbar\", function() { return Scrollbar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ScrollbarContext\", function() { return ScrollbarContext; });\n/* harmony import */ var cnbuilder__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cnbuilder */ \"./node_modules/cnbuilder/dist/index.esm.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var zoom_level__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! zoom-level */ \"./node_modules/zoom-level/dist/zoom-level.esm.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-draggable */ \"./node_modules/react-draggable/build/cjs/cjs.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_draggable__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar doc = (typeof document === \"undefined\" ? \"undefined\" : _typeof(document)) === \"object\" ? document : null;\nvar isUndef = function isUndef(v) {\n  return typeof v === \"undefined\";\n};\nvar isFun = function isFun(v) {\n  return typeof v === \"function\";\n};\nvar isNum = function isNum(v) {\n  return typeof v === \"number\";\n};\n/**\r\n * @description Will return renderer result if presented, div element otherwise.\r\n * If renderer is presented it'll receive `elementRef` function which should be used as HTMLElement's ref.\r\n *\r\n * @param props {ElementPropsWithElementRefAndRenderer}\r\n * @param elementRef {ElementRef}\r\n */\n\nvar renderDivWithRenderer = function renderDivWithRenderer(props, elementRef) {\n  if (isFun(props.renderer)) {\n    props.elementRef = elementRef;\n    var renderer = props.renderer;\n    delete props.renderer;\n    return renderer(props);\n  }\n\n  delete props.elementRef;\n  return Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(\"div\", __assign({}, props, {\n    ref: elementRef\n  }));\n};\n\nvar getInnerSize = function getInnerSize(el, dimension, padding1, padding2) {\n  var styles = getComputedStyle(el);\n\n  if (styles.boxSizing === \"border-box\") {\n    return Math.max(0, (parseFloat(styles[dimension]) || 0) - (parseFloat(styles[padding1]) || 0) - (parseFloat(styles[padding2]) || 0));\n  }\n\n  return parseFloat(styles[dimension]) || 0;\n};\n/**\r\n * @description Return element's height without padding\r\n */\n\n\nvar getInnerHeight = function getInnerHeight(el) {\n  return getInnerSize(el, \"height\", \"paddingTop\", \"paddingBottom\");\n};\n/**\r\n * @description Return element's width without padding\r\n */\n\nvar getInnerWidth = function getInnerWidth(el) {\n  return getInnerSize(el, \"width\", \"paddingLeft\", \"paddingRight\");\n};\n/**\r\n * @description Return unique UUID v4\r\n */\n\nvar uuid = function uuid() {\n  var uuid = \"\";\n\n  for (var i = 0; i < 32; i++) {\n    if (i === 8 || i === 20) {\n      uuid += \"-\" + (Math.random() * 16 | 0).toString(16);\n    } else if (i === 12) {\n      uuid += \"-4\";\n    } else if (i === 16) {\n      uuid += \"-\" + (Math.random() * 16 | 0 & 3 | 8).toString(16);\n    } else {\n      uuid += (Math.random() * 16 | 0).toString(16);\n    }\n  }\n\n  return uuid;\n};\n/**\r\n * @description Calculate thumb size for given viewport and track parameters\r\n *\r\n * @param {number} contentSize - Scrollable content size\r\n * @param {number} viewportSize - Viewport size\r\n * @param {number} trackSize - Track size thumb can move\r\n * @param {number} minimalSize - Minimal thumb's size\r\n * @param {number} maximalSize - Maximal thumb's size\r\n */\n\nvar calcThumbSize = function calcThumbSize(contentSize, viewportSize, trackSize, minimalSize, maximalSize) {\n  if (viewportSize >= contentSize) {\n    return 0;\n  }\n\n  var thumbSize = viewportSize / contentSize * trackSize;\n  isNum(maximalSize) && (thumbSize = Math.min(maximalSize, thumbSize));\n  isNum(minimalSize) && (thumbSize = Math.max(minimalSize, thumbSize));\n  return thumbSize;\n};\n/**\r\n * @description Calculate thumb offset for given viewport, track and thumb parameters\r\n *\r\n * @param {number} contentSize - Scrollable content size\r\n * @param {number} viewportSize - Viewport size\r\n * @param {number} trackSize - Track size thumb can move\r\n * @param {number} thumbSize - Thumb size\r\n * @param {number} scroll - Scroll value to represent\r\n */\n\nvar calcThumbOffset = function calcThumbOffset(contentSize, viewportSize, trackSize, thumbSize, scroll) {\n  if (!scroll || !thumbSize || viewportSize >= contentSize) {\n    return 0;\n  }\n\n  return (trackSize - thumbSize) * scroll / (contentSize - viewportSize);\n};\n/**\r\n * @description Calculate scroll for given viewport, track and thumb parameters\r\n *\r\n * @param {number} contentSize - Scrollable content size\r\n * @param {number} viewportSize - Viewport size\r\n * @param {number} trackSize - Track size thumb can move\r\n * @param {number} thumbSize - Thumb size\r\n * @param {number} thumbOffset - Thumb's offset representing the scroll\r\n */\n\nvar calcScrollForThumbOffset = function calcScrollForThumbOffset(contentSize, viewportSize, trackSize, thumbSize, thumbOffset) {\n  if (!thumbOffset || !thumbSize || viewportSize >= contentSize) {\n    return 0;\n  }\n\n  return thumbOffset * (contentSize - viewportSize) / (trackSize - thumbSize);\n};\n/**\r\n * @description Returns scrollbar width specific for current environment. Can return undefined if DOM is not ready yet.\r\n */\n\nvar getScrollbarWidth = function getScrollbarWidth(force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  if (!doc) {\n    return getScrollbarWidth._cache = 0;\n  }\n\n  if (!force && !isUndef(getScrollbarWidth._cache)) {\n    return getScrollbarWidth._cache;\n  }\n\n  var el = doc.createElement(\"div\");\n  el.setAttribute(\"style\", \"position:absolute;width:100px;height:100px;top:-999px;left:-999px;overflow:scroll;\");\n  doc.body.appendChild(el);\n  /* istanbul ignore next */\n\n  if (el.clientWidth === 0) {\n    // Do not even cache this value because there is no calculations. Issue https://github.com/xobotyi/react-scrollbars-custom/issues/123\n    doc.body.removeChild(el);\n    return;\n  }\n\n  getScrollbarWidth._cache = 100 - el.clientWidth;\n  doc.body.removeChild(el);\n  return getScrollbarWidth._cache;\n};\n/**\r\n * @description Detect need of horizontal scroll reverse while RTL.\r\n */\n\nvar shouldReverseRtlScroll = function shouldReverseRtlScroll(force) {\n  if (force === void 0) {\n    force = false;\n  }\n\n  if (!force && !isUndef(shouldReverseRtlScroll._cache)) {\n    return shouldReverseRtlScroll._cache;\n  }\n\n  if (!doc) {\n    return shouldReverseRtlScroll._cache = false;\n  }\n\n  var el = doc.createElement(\"div\");\n  var child = doc.createElement(\"div\");\n  el.appendChild(child);\n  el.setAttribute(\"style\", \"position:absolute;width:100px;height:100px;top:-999px;left:-999px;overflow:scroll;direction:rtl\");\n  child.setAttribute(\"style\", \"width:1000px;height:1000px\");\n  doc.body.appendChild(el);\n  el.scrollLeft = -50;\n  shouldReverseRtlScroll._cache = el.scrollLeft === -50;\n  doc.body.removeChild(el);\n  return shouldReverseRtlScroll._cache;\n};\n\nvar Emittr =\n/** @class */\nfunction () {\n  function Emittr(maxHandlers) {\n    if (maxHandlers === void 0) {\n      maxHandlers = 10;\n    }\n\n    this.setMaxHandlers(maxHandlers);\n    this._handlers = Object.create(null);\n  }\n\n  Emittr._callEventHandlers = function (emitter, handlers, args) {\n    if (!handlers.length) {\n      return;\n    }\n\n    if (handlers.length === 1) {\n      Reflect.apply(handlers[0], emitter, args);\n      return;\n    }\n\n    handlers = __spreadArrays(handlers);\n    var idx;\n\n    for (idx = 0; idx < handlers.length; idx++) {\n      Reflect.apply(handlers[idx], emitter, args);\n    }\n  };\n\n  Emittr.prototype.setMaxHandlers = function (count) {\n    if (!isNum(count) || count <= 0) {\n      throw new TypeError(\"Expected maxHandlers to be a positive number, got '\" + count + \"' of type \" + _typeof(count));\n    }\n\n    this._maxHandlers = count;\n    return this;\n  };\n\n  Emittr.prototype.getMaxHandlers = function () {\n    return this._maxHandlers;\n  };\n\n  Emittr.prototype.emit = function (name) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (_typeof(this._handlers[name]) !== \"object\" || !Array.isArray(this._handlers[name])) {\n      return false;\n    }\n\n    Emittr._callEventHandlers(this, this._handlers[name], args);\n\n    return true;\n  };\n\n  Emittr.prototype.on = function (name, handler) {\n    Emittr._addHandler(this, name, handler);\n\n    return this;\n  };\n\n  Emittr.prototype.prependOn = function (name, handler) {\n    Emittr._addHandler(this, name, handler, true);\n\n    return this;\n  };\n\n  Emittr.prototype.once = function (name, handler) {\n    if (!isFun(handler)) {\n      throw new TypeError(\"Expected event handler to be a function, got \" + _typeof(handler));\n    }\n\n    Emittr._addHandler(this, name, this._wrapOnceHandler(name, handler));\n\n    return this;\n  };\n\n  Emittr.prototype.prependOnce = function (name, handler) {\n    if (!isFun(handler)) {\n      throw new TypeError(\"Expected event handler to be a function, got \" + _typeof(handler));\n    }\n\n    Emittr._addHandler(this, name, this._wrapOnceHandler(name, handler), true);\n\n    return this;\n  };\n\n  Emittr.prototype.off = function (name, handler) {\n    Emittr._removeHandler(this, name, handler);\n\n    return this;\n  };\n\n  Emittr.prototype.removeAllHandlers = function () {\n    var handlers = this._handlers;\n    this._handlers = Object.create(null);\n    var removeHandlers = handlers[\"removeHandler\"];\n    delete handlers[\"removeHandler\"];\n    var idx, eventName;\n\n    for (eventName in handlers) {\n      for (idx = handlers[eventName].length - 1; idx >= 0; idx--) {\n        Emittr._callEventHandlers(this, removeHandlers, [eventName, handlers[eventName][idx].handler || handlers[eventName][idx]]);\n      }\n    }\n\n    return this;\n  };\n\n  Emittr.prototype._wrapOnceHandler = function (name, handler) {\n    var onceState = {\n      fired: false,\n      handler: handler,\n      wrappedHandler: undefined,\n      emitter: this,\n      event: name\n    };\n\n    var wrappedHandler = Emittr._onceWrapper.bind(onceState);\n\n    onceState.wrappedHandler = wrappedHandler;\n    wrappedHandler.handler = handler;\n    wrappedHandler.event = name;\n    return wrappedHandler;\n  };\n\n  Emittr._addHandler = function (emitter, name, handler, prepend) {\n    if (prepend === void 0) {\n      prepend = false;\n    }\n\n    if (!isFun(handler)) {\n      throw new TypeError(\"Expected event handler to be a function, got \" + _typeof(handler));\n    }\n\n    emitter._handlers[name] = emitter._handlers[name] || [];\n    emitter.emit(\"addHandler\", name, handler);\n    prepend ? emitter._handlers[name].unshift(handler) : emitter._handlers[name].push(handler);\n    return emitter;\n  };\n\n  Emittr._onceWrapper = function _onceWrapper() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!this.fired) {\n      this.fired = true;\n      this.emitter.off(this.event, this.wrappedHandler);\n      Reflect.apply(this.handler, this.emitter, args);\n    }\n  };\n\n  Emittr._removeHandler = function (emitter, name, handler) {\n    if (!isFun(handler)) {\n      throw new TypeError(\"Expected event handler to be a function, got \" + _typeof(handler));\n    }\n\n    if (isUndef(emitter._handlers[name]) || !emitter._handlers[name].length) {\n      return emitter;\n    }\n\n    var idx = -1;\n\n    if (emitter._handlers[name].length === 1) {\n      if (emitter._handlers[name][0] === handler || emitter._handlers[name][0].handler === handler) {\n        idx = 0;\n        handler = emitter._handlers[name][0].handler || emitter._handlers[name][0];\n      }\n    } else {\n      for (idx = emitter._handlers[name].length - 1; idx >= 0; idx--) {\n        if (emitter._handlers[name][idx] === handler || emitter._handlers[name][idx].handler === handler) {\n          handler = emitter._handlers[name][idx].handler || emitter._handlers[name][idx];\n          break;\n        }\n      }\n    }\n\n    if (idx === -1) {\n      return emitter;\n    }\n\n    idx === 0 ? emitter._handlers[name].shift() : emitter._handlers[name].splice(idx, 1);\n    emitter.emit(\"removeHandler\", name, handler);\n    return emitter;\n  };\n\n  return Emittr;\n}();\n\nvar RAFLoop =\n/** @class */\nfunction () {\n  function RAFLoop() {\n    var _this = this;\n    /**\r\n     * @description List of targets to update\r\n     */\n\n\n    this.targets = [];\n    /**\r\n     * @description ID of requested animation frame. Valuable only if loop is active and has items to iterate.\r\n     */\n\n    this.animationFrameID = 0;\n    /**\r\n     * @description Loop's state.\r\n     */\n\n    this._isActive = false;\n    /**\r\n     * @description Start the loop if it wasn't yet.\r\n     */\n\n    this.start = function () {\n      if (!_this._isActive && _this.targets.length) {\n        _this._isActive = true;\n        _this.animationFrameID && cancelAnimationFrame(_this.animationFrameID);\n        _this.animationFrameID = requestAnimationFrame(_this.rafCallback);\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Stop the loop if is was active.\r\n     */\n\n\n    this.stop = function () {\n      if (_this._isActive) {\n        _this._isActive = false;\n        _this.animationFrameID && cancelAnimationFrame(_this.animationFrameID);\n        _this.animationFrameID = 0;\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Add target to the iteration list if it's not there.\r\n     */\n\n\n    this.addTarget = function (target, silent) {\n      if (silent === void 0) {\n        silent = false;\n      }\n\n      if (_this.targets.indexOf(target) === -1) {\n        _this.targets.push(target);\n\n        _this.targets.length === 1 && !silent && _this.start();\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Remove target from iteration list if it was there.\r\n     */\n\n\n    this.removeTarget = function (target) {\n      var idx = _this.targets.indexOf(target);\n\n      if (idx !== -1) {\n        _this.targets.splice(idx, 1);\n\n        _this.targets.length === 0 && _this.stop();\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Callback that called each animation frame.\r\n     */\n\n\n    this.rafCallback = function () {\n      if (!_this._isActive) {\n        return 0;\n      }\n\n      for (var i = 0; i < _this.targets.length; i++) {\n        !_this.targets[i]._unmounted && _this.targets[i].update();\n      }\n\n      return _this.animationFrameID = requestAnimationFrame(_this.rafCallback);\n    };\n  }\n\n  Object.defineProperty(RAFLoop.prototype, \"isActive\", {\n    /**\r\n     * @description Loop's state.\r\n     */\n    get: function get() {\n      return this._isActive;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return RAFLoop;\n}();\nvar Loop = new RAFLoop();\n\nvar AXIS_DIRECTION;\n\n(function (AXIS_DIRECTION) {\n  AXIS_DIRECTION[\"X\"] = \"x\";\n  AXIS_DIRECTION[\"Y\"] = \"y\";\n})(AXIS_DIRECTION || (AXIS_DIRECTION = {}));\n\nvar AXIS_DIRECTION_PROP_TYPE = Object(prop_types__WEBPACK_IMPORTED_MODULE_1__[\"oneOf\"])([AXIS_DIRECTION.X, AXIS_DIRECTION.Y]);\nvar TRACK_CLICK_BEHAVIOR;\n\n(function (TRACK_CLICK_BEHAVIOR) {\n  TRACK_CLICK_BEHAVIOR[\"JUMP\"] = \"jump\";\n  TRACK_CLICK_BEHAVIOR[\"STEP\"] = \"step\";\n})(TRACK_CLICK_BEHAVIOR || (TRACK_CLICK_BEHAVIOR = {}));\n\nvar TRACK_CLICK_BEHAVIOR_PROP_TYPE = Object(prop_types__WEBPACK_IMPORTED_MODULE_1__[\"oneOf\"])([TRACK_CLICK_BEHAVIOR.JUMP, TRACK_CLICK_BEHAVIOR.STEP]);\n\nvar ScrollbarThumb =\n/** @class */\nfunction (_super) {\n  __extends(ScrollbarThumb, _super);\n\n  function ScrollbarThumb() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.initialOffsetX = 0;\n    _this.initialOffsetY = 0;\n    _this.lastDragData = {\n      x: 0,\n      y: 0,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: 0,\n      lastY: 0\n    };\n    _this.element = null;\n\n    _this.handleOnDragStart = function (ev, data) {\n      if (!_this.element) {\n        _this.handleOnDragStop(ev, data);\n\n        return;\n      }\n\n      if (global.document) {\n        _this.prevUserSelect = global.document.body.style.userSelect;\n        global.document.body.style.userSelect = \"none\";\n        _this.prevOnSelectStart = global.document.onselectstart;\n        global.document.onselectstart = ScrollbarThumb.selectStartReplacer;\n      }\n\n      _this.props.onDragStart && _this.props.onDragStart(_this.lastDragData = {\n        x: data.x - _this.initialOffsetX,\n        y: data.y - _this.initialOffsetY,\n        lastX: data.lastX - _this.initialOffsetX,\n        lastY: data.lastY - _this.initialOffsetY,\n        deltaX: data.deltaX,\n        deltaY: data.deltaY\n      });\n\n      _this.element.classList.add(\"dragging\");\n    };\n\n    _this.handleOnDrag = function (ev, data) {\n      if (!_this.element) {\n        _this.handleOnDragStop(ev, data);\n\n        return;\n      }\n\n      _this.props.onDrag && _this.props.onDrag(_this.lastDragData = {\n        x: data.x - _this.initialOffsetX,\n        y: data.y - _this.initialOffsetY,\n        lastX: data.lastX - _this.initialOffsetX,\n        lastY: data.lastY - _this.initialOffsetY,\n        deltaX: data.deltaX,\n        deltaY: data.deltaY\n      });\n    };\n\n    _this.handleOnDragStop = function (ev, data) {\n      var resultData = data ? {\n        x: data.x - _this.initialOffsetX,\n        y: data.y - _this.initialOffsetY,\n        lastX: data.lastX - _this.initialOffsetX,\n        lastY: data.lastY - _this.initialOffsetY,\n        deltaX: data.deltaX,\n        deltaY: data.deltaY\n      } : _this.lastDragData;\n      _this.props.onDragEnd && _this.props.onDragEnd(resultData);\n      _this.element && _this.element.classList.remove(\"dragging\");\n\n      if (global.document) {\n        global.document.body.style.userSelect = _this.prevUserSelect;\n        global.document.onselectstart = _this.prevOnSelectStart;\n        _this.prevOnSelectStart = null;\n      }\n\n      _this.initialOffsetX = 0;\n      _this.initialOffsetY = 0;\n      _this.lastDragData = {\n        x: 0,\n        y: 0,\n        deltaX: 0,\n        deltaY: 0,\n        lastX: 0,\n        lastY: 0\n      };\n    };\n\n    _this.handleOnMouseDown = function (ev) {\n      if (!_this.element) {\n        return;\n      }\n\n      ev.preventDefault();\n      ev.stopPropagation();\n\n      if (!isUndef(ev.offsetX)) {\n        /* istanbul ignore next */\n        _this.initialOffsetX = ev.offsetX;\n        /* istanbul ignore next */\n\n        _this.initialOffsetY = ev.offsetY;\n      } else {\n        var rect = _this.element.getBoundingClientRect();\n\n        _this.initialOffsetX = (ev.clientX || ev.touches[0].clientX) - rect.left;\n        _this.initialOffsetY = (ev.clientY || ev.touches[0].clientY) - rect.top;\n      }\n    };\n\n    _this.elementRefHack = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createRef\"])();\n\n    _this.elementRef = function (ref) {\n      isFun(_this.props.elementRef) && _this.props.elementRef(ref);\n      _this.element = ref; // @ts-ignore\n\n      _this.elementRefHack[\"current\"] = ref;\n    };\n\n    return _this;\n  }\n\n  ScrollbarThumb.prototype.componentDidMount = function () {\n    if (!this.element) {\n      this.setState(function () {\n        throw new Error(\"<ScrollbarThumb> Element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n      });\n      return;\n    }\n  };\n\n  ScrollbarThumb.prototype.componentWillUnmount = function () {\n    this.handleOnDragStop();\n    this.elementRef(null);\n  };\n\n  ScrollbarThumb.prototype.render = function () {\n    var _a = this.props,\n        elementRef = _a.elementRef,\n        axis = _a.axis,\n        onDrag = _a.onDrag,\n        onDragEnd = _a.onDragEnd,\n        onDragStart = _a.onDragStart,\n        props = __rest(_a, [\"elementRef\", \"axis\", \"onDrag\", \"onDragEnd\", \"onDragStart\"]);\n\n    props.className = Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Thumb\", axis === AXIS_DIRECTION.X ? \"ScrollbarsCustom-ThumbX\" : \"ScrollbarsCustom-ThumbY\", props.className);\n\n    if (props.renderer) {\n      props.axis = axis;\n    }\n\n    return Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(react_draggable__WEBPACK_IMPORTED_MODULE_4__[\"DraggableCore\"], {\n      allowAnyClick: false,\n      enableUserSelectHack: false,\n      onMouseDown: this.handleOnMouseDown,\n      onDrag: this.handleOnDrag,\n      onStart: this.handleOnDragStart,\n      onStop: this.handleOnDragStop,\n      // ToDo: Fixit!\n      // react-draggable developers did not update typings so there is no appropriate prop\n      // @ts-ignore\n      nodeRef: this.elementRefHack\n    }, renderDivWithRenderer(props, this.elementRef));\n  };\n\n  ScrollbarThumb.propTypes = {\n    axis: AXIS_DIRECTION_PROP_TYPE,\n    onDrag: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    onDragStart: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    onDragEnd: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    elementRef: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    renderer: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"]\n  };\n\n  ScrollbarThumb.selectStartReplacer = function () {\n    return false;\n  };\n\n  return ScrollbarThumb;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n\nvar ScrollbarTrack =\n/** @class */\nfunction (_super) {\n  __extends(ScrollbarTrack, _super);\n\n  function ScrollbarTrack() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.element = null;\n\n    _this.elementRef = function (ref) {\n      isFun(_this.props.elementRef) && _this.props.elementRef(ref);\n      _this.element = ref;\n    };\n\n    _this.handleClick = function (ev) {\n      if (!ev || !_this.element || ev.button !== 0) {\n        return;\n      }\n\n      if (isFun(_this.props.onClick) && ev.target === _this.element) {\n        if (!isUndef(ev.offsetX)) {\n          _this.props.onClick(ev, {\n            axis: _this.props.axis,\n            offset: _this.props.axis === AXIS_DIRECTION.X ? ev.offsetX : ev.offsetY\n          });\n        } else {\n          // support for old browsers\n\n          /* istanbul ignore next */\n          var rect = _this.element.getBoundingClientRect();\n          /* istanbul ignore next */\n\n\n          _this.props.onClick(ev, {\n            axis: _this.props.axis,\n            offset: _this.props.axis === AXIS_DIRECTION.X ? (ev.clientX || ev.touches[0].clientX) - rect.left : (ev.clientY || ev.touches[0].clientY) - rect.top\n          });\n        }\n      }\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  ScrollbarTrack.prototype.componentDidMount = function () {\n    if (!this.element) {\n      this.setState(function () {\n        throw new Error(\"Element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n      });\n      return;\n    }\n\n    this.element.addEventListener(\"click\", this.handleClick);\n  };\n\n  ScrollbarTrack.prototype.componentWillUnmount = function () {\n    if (this.element) {\n      this.element.removeEventListener(\"click\", this.handleClick);\n      this.element = null;\n      this.elementRef(null);\n    }\n  };\n\n  ScrollbarTrack.prototype.render = function () {\n    var _a = this.props,\n        elementRef = _a.elementRef,\n        axis = _a.axis,\n        onClick = _a.onClick,\n        props = __rest(_a, [\"elementRef\", \"axis\", \"onClick\"]);\n\n    props.className = Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Track\", axis === AXIS_DIRECTION.X ? \"ScrollbarsCustom-TrackX\" : \"ScrollbarsCustom-TrackY\", props.className);\n\n    if (props.renderer) {\n      props.axis = axis;\n    }\n\n    return renderDivWithRenderer(props, this.elementRef);\n  };\n\n  ScrollbarTrack.propTypes = {\n    axis: AXIS_DIRECTION_PROP_TYPE,\n    onClick: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    elementRef: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    renderer: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"]\n  };\n  return ScrollbarTrack;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n\nvar style = {\n  holder: {\n    position: \"relative\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  wrapper: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  content: {\n    boxSizing: \"border-box\"\n  },\n  track: {\n    common: {\n      position: \"absolute\",\n      overflow: \"hidden\",\n      borderRadius: 4,\n      background: \"rgba(0,0,0,.1)\",\n      userSelect: \"none\"\n    },\n    x: {\n      height: 10,\n      width: \"calc(100% - 20px)\",\n      bottom: 0,\n      left: 10\n    },\n    y: {\n      width: 10,\n      height: \"calc(100% - 20px)\",\n      top: 10\n    }\n  },\n  thumb: {\n    common: {\n      cursor: \"pointer\",\n      borderRadius: 4,\n      background: \"rgba(0,0,0,.4)\"\n    },\n    x: {\n      height: \"100%\",\n      width: 0\n    },\n    y: {\n      width: \"100%\",\n      height: 0\n    }\n  }\n};\n\nvar pageZoomLevel = global.window ? Object(zoom_level__WEBPACK_IMPORTED_MODULE_3__[\"zoomLevel\"])() : 1;\nglobal.window && global.window.addEventListener(\"resize\", function () {\n  return pageZoomLevel = Object(zoom_level__WEBPACK_IMPORTED_MODULE_3__[\"zoomLevel\"])();\n}, {\n  passive: true\n});\nvar ScrollbarContext = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createContext\"])({\n  parentScrollbar: null\n});\n\nvar Scrollbar =\n/** @class */\nfunction (_super) {\n  __extends(Scrollbar, _super);\n\n  function Scrollbar(props) {\n    var _this = _super.call(this, props) || this;\n    /**\r\n     * @description Get current scroll-related values.<br/>\r\n     * If <i>force</i> if truthy - will recalculate them instead of returning cached values.\r\n     *\r\n     * @return ScrollState\r\n     */\n\n\n    _this.getScrollState = function (force) {\n      if (force === void 0) {\n        force = false;\n      }\n\n      if (_this.scrollValues && !force) {\n        return __assign({}, _this.scrollValues);\n      }\n\n      var scrollState = {\n        clientHeight: 0,\n        clientWidth: 0,\n        contentScrollHeight: 0,\n        contentScrollWidth: 0,\n        scrollHeight: 0,\n        scrollWidth: 0,\n        scrollTop: 0,\n        scrollLeft: 0,\n        scrollYBlocked: false,\n        scrollXBlocked: false,\n        scrollYPossible: false,\n        scrollXPossible: false,\n        trackYVisible: false,\n        trackXVisible: false,\n        zoomLevel: pageZoomLevel * 1,\n        isRTL: undefined\n      };\n      var props = _this.props;\n      scrollState.isRTL = _this.state.isRTL;\n      scrollState.scrollYBlocked = props.noScroll || props.noScrollY;\n      scrollState.scrollXBlocked = props.noScroll || props.noScrollX;\n\n      if (_this.scrollerElement) {\n        scrollState.clientHeight = _this.scrollerElement.clientHeight;\n        scrollState.clientWidth = _this.scrollerElement.clientWidth;\n        scrollState.scrollHeight = _this.scrollerElement.scrollHeight;\n        scrollState.scrollWidth = _this.scrollerElement.scrollWidth;\n        scrollState.scrollTop = _this.scrollerElement.scrollTop;\n        scrollState.scrollLeft = _this.scrollerElement.scrollLeft;\n        scrollState.scrollYPossible = !scrollState.scrollYBlocked && scrollState.scrollHeight > scrollState.clientHeight;\n        scrollState.scrollXPossible = !scrollState.scrollXBlocked && scrollState.scrollWidth > scrollState.clientWidth;\n        scrollState.trackYVisible = scrollState.scrollYPossible || props.permanentTracks || props.permanentTrackY;\n        scrollState.trackXVisible = scrollState.scrollXPossible || props.permanentTracks || props.permanentTrackX;\n      }\n\n      if (_this.contentElement) {\n        scrollState.contentScrollHeight = _this.contentElement.scrollHeight;\n        scrollState.contentScrollWidth = _this.contentElement.scrollWidth;\n      }\n\n      return scrollState;\n    };\n    /**\r\n     * @description Scroll to top border\r\n     */\n\n\n    _this.scrollToTop = function () {\n      if (_this.scrollerElement) {\n        _this.scrollerElement.scrollTop = 0;\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Scroll to left border\r\n     */\n\n\n    _this.scrollToLeft = function () {\n      if (_this.scrollerElement) {\n        _this.scrollerElement.scrollLeft = 0;\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Scroll to bottom border\r\n     */\n\n\n    _this.scrollToBottom = function () {\n      if (_this.scrollerElement) {\n        _this.scrollerElement.scrollTop = _this.scrollerElement.scrollHeight - _this.scrollerElement.clientHeight;\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Scroll to right border\r\n     */\n\n\n    _this.scrollToRight = function () {\n      if (_this.scrollerElement) {\n        _this.scrollerElement.scrollLeft = _this.scrollerElement.scrollWidth - _this.scrollerElement.clientWidth;\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Set the scrolls at given coordinates.<br/>\r\n     * If coordinate is undefined - current scroll value will persist.\r\n     */\n\n\n    _this.scrollTo = function (x, y) {\n      if (_this.scrollerElement) {\n        isNum(x) && (_this.scrollerElement.scrollLeft = x);\n        isNum(y) && (_this.scrollerElement.scrollTop = y);\n      }\n\n      return _this;\n    };\n    /**\r\n     * @description Center the viewport at given coordinates.<br/>\r\n     * If coordinate is undefined - current scroll value will persist.\r\n     */\n\n\n    _this.centerAt = function (x, y) {\n      if (_this.scrollerElement) {\n        isNum(x) && (_this.scrollerElement.scrollLeft = x - _this.scrollerElement.clientWidth / 2);\n        isNum(y) && (_this.scrollerElement.scrollTop = y - _this.scrollerElement.clientHeight / 2);\n      }\n\n      return _this;\n    };\n\n    _this.update = function (force) {\n      if (force === void 0) {\n        force = false;\n      }\n\n      if (!_this.scrollerElement) {\n        return;\n      } // autodetect direction if not defined\n\n\n      if (isUndef(_this.state.isRTL)) {\n        _this.setState({\n          isRTL: getComputedStyle(_this.scrollerElement).direction === \"rtl\"\n        });\n\n        return _this.getScrollState();\n      }\n\n      var scrollState = _this.getScrollState(true);\n\n      var prevScrollState = __assign({}, _this.scrollValues);\n\n      var props = _this.props;\n      var bitmask = 0;\n\n      if (!force) {\n        prevScrollState.clientHeight !== scrollState.clientHeight && (bitmask |= 1 << 0);\n        prevScrollState.clientWidth !== scrollState.clientWidth && (bitmask |= 1 << 1);\n        prevScrollState.scrollHeight !== scrollState.scrollHeight && (bitmask |= 1 << 2);\n        prevScrollState.scrollWidth !== scrollState.scrollWidth && (bitmask |= 1 << 3);\n        prevScrollState.scrollTop !== scrollState.scrollTop && (bitmask |= 1 << 4);\n        prevScrollState.scrollLeft !== scrollState.scrollLeft && (bitmask |= 1 << 5);\n        prevScrollState.scrollYBlocked !== scrollState.scrollYBlocked && (bitmask |= 1 << 6);\n        prevScrollState.scrollXBlocked !== scrollState.scrollXBlocked && (bitmask |= 1 << 7);\n        prevScrollState.scrollYPossible !== scrollState.scrollYPossible && (bitmask |= 1 << 8);\n        prevScrollState.scrollXPossible !== scrollState.scrollXPossible && (bitmask |= 1 << 9);\n        prevScrollState.trackYVisible !== scrollState.trackYVisible && (bitmask |= 1 << 10);\n        prevScrollState.trackXVisible !== scrollState.trackXVisible && (bitmask |= 1 << 11);\n        prevScrollState.isRTL !== scrollState.isRTL && (bitmask |= 1 << 12);\n        prevScrollState.contentScrollHeight !== scrollState.contentScrollHeight && (bitmask |= 1 << 13);\n        prevScrollState.contentScrollWidth !== scrollState.contentScrollWidth && (bitmask |= 1 << 14);\n        prevScrollState.zoomLevel !== scrollState.zoomLevel && (bitmask |= 1 << 15); // if not forced and nothing has changed - skip this update\n\n        if (bitmask === 0) {\n          return prevScrollState;\n        }\n      } else {\n        bitmask = 32767;\n      }\n\n      if (!props.native && _this.holderElement) {\n        if (bitmask & 1 << 13 && (props.translateContentSizesToHolder || props.translateContentSizeYToHolder)) {\n          _this.holderElement.style.height = scrollState.contentScrollHeight + \"px\";\n        }\n\n        if (bitmask & 1 << 14 && (props.translateContentSizesToHolder || props.translateContentSizeXToHolder)) {\n          _this.holderElement.style.width = scrollState.contentScrollWidth + \"px\";\n        }\n\n        if (props.translateContentSizesToHolder || props.translateContentSizeYToHolder || props.translateContentSizeXToHolder) {\n          if (!scrollState.clientHeight && scrollState.contentScrollHeight || !scrollState.clientWidth && scrollState.contentScrollWidth) {\n            return;\n          }\n        }\n      } // if scrollbars visibility has changed\n\n\n      if (bitmask & 1 << 10 || bitmask & 1 << 11) {\n        prevScrollState.scrollYBlocked = scrollState.scrollYBlocked;\n        prevScrollState.scrollXBlocked = scrollState.scrollXBlocked;\n        prevScrollState.scrollYPossible = scrollState.scrollYPossible;\n        prevScrollState.scrollXPossible = scrollState.scrollXPossible;\n\n        if (_this.trackYElement && bitmask & 1 << 10) {\n          _this.trackYElement.style.display = scrollState.trackYVisible ? \"\" : \"none\";\n        }\n\n        if (_this.trackXElement && bitmask & 1 << 11) {\n          _this.trackXElement.style.display = scrollState.trackXVisible ? \"\" : \"none\";\n        }\n\n        _this.scrollValues = prevScrollState;\n\n        _this.setState({\n          trackYVisible: _this.scrollValues.trackYVisible = scrollState.trackYVisible,\n          trackXVisible: _this.scrollValues.trackXVisible = scrollState.trackXVisible\n        });\n\n        return;\n      }\n\n      (props.native ? _this.updaterNative : _this.updaterCustom)(bitmask, scrollState);\n      _this.scrollValues = scrollState;\n\n      if (!props.native && bitmask & 1 << 15) {\n        getScrollbarWidth(true);\n\n        _this.forceUpdate();\n      }\n\n      _this.eventEmitter.emit(\"update\", __assign({}, scrollState), prevScrollState);\n\n      (bitmask & 1 << 4 || bitmask & 1 << 5) && _this.eventEmitter.emit(\"scroll\", __assign({}, scrollState), prevScrollState);\n      return _this.scrollValues;\n    };\n\n    _this.updaterNative = function () {\n      // just for future\n      return true;\n    };\n\n    _this.updaterCustom = function (bitmask, scrollValues) {\n      var props = _this.props;\n\n      if (_this.trackYElement) {\n        if (_this.thumbYElement && (bitmask & 1 << 0 || bitmask & 1 << 2 || bitmask & 1 << 4 || bitmask & 1 << 6 || bitmask & 1 << 8)) {\n          if (scrollValues.scrollYPossible) {\n            var trackInnerSize = getInnerHeight(_this.trackYElement);\n            var thumbSize = calcThumbSize(scrollValues.scrollHeight, scrollValues.clientHeight, trackInnerSize, props.minimalThumbYSize || props.minimalThumbSize, props.maximalThumbYSize || props.maximalThumbSize);\n            var thumbOffset = calcThumbOffset(scrollValues.scrollHeight, scrollValues.clientHeight, trackInnerSize, thumbSize, scrollValues.scrollTop);\n            _this.thumbYElement.style.transform = \"translateY(\" + thumbOffset + \"px)\";\n            _this.thumbYElement.style.height = thumbSize + \"px\";\n            _this.thumbYElement.style.display = \"\";\n          } else {\n            _this.thumbYElement.style.transform = \"\";\n            _this.thumbYElement.style.height = \"0px\";\n            _this.thumbYElement.style.display = \"none\";\n          }\n        }\n      }\n\n      if (_this.trackXElement) {\n        if (_this.thumbXElement && (bitmask & 1 << 1 || bitmask & 1 << 3 || bitmask & 1 << 5 || bitmask & 1 << 7 || bitmask & 1 << 9 || bitmask & 1 << 12)) {\n          if (scrollValues.scrollXPossible) {\n            var trackInnerSize = getInnerWidth(_this.trackXElement);\n            var thumbSize = calcThumbSize(scrollValues.scrollWidth, scrollValues.clientWidth, trackInnerSize, props.minimalThumbXSize || props.minimalThumbSize, props.maximalThumbXSize || props.maximalThumbSize);\n            var thumbOffset = calcThumbOffset(scrollValues.scrollWidth, scrollValues.clientWidth, trackInnerSize, thumbSize, scrollValues.scrollLeft);\n\n            if (_this.state.isRTL && shouldReverseRtlScroll()) {\n              thumbOffset += trackInnerSize - thumbSize;\n            }\n\n            _this.thumbXElement.style.transform = \"translateX(\" + thumbOffset + \"px)\";\n            _this.thumbXElement.style.width = thumbSize + \"px\";\n            _this.thumbXElement.style.display = \"\";\n          } else {\n            _this.thumbXElement.style.transform = \"\";\n            _this.thumbXElement.style.width = \"0px\";\n            _this.thumbXElement.style.display = \"none\";\n          }\n        }\n      }\n\n      return true;\n    };\n\n    _this.elementRefHolder = function (ref) {\n      _this.holderElement = ref;\n      isFun(_this.props.elementRef) && _this.props.elementRef(ref);\n    };\n\n    _this.elementRefWrapper = function (ref) {\n      _this.wrapperElement = ref;\n      isFun(_this.props.wrapperProps.elementRef) && _this.props.wrapperProps.elementRef(ref);\n    };\n\n    _this.elementRefScroller = function (ref) {\n      _this.scrollerElement = ref;\n      isFun(_this.props.scrollerProps.elementRef) && _this.props.scrollerProps.elementRef(ref);\n    };\n\n    _this.elementRefContent = function (ref) {\n      _this.contentElement = ref;\n      isFun(_this.props.contentProps.elementRef) && _this.props.contentProps.elementRef(ref);\n    };\n\n    _this.elementRefTrackX = function (ref) {\n      _this.trackXElement = ref;\n      isFun(_this.props.trackXProps.elementRef) && _this.props.trackXProps.elementRef(ref);\n    };\n\n    _this.elementRefTrackY = function (ref) {\n      _this.trackYElement = ref;\n      isFun(_this.props.trackYProps.elementRef) && _this.props.trackYProps.elementRef(ref);\n    };\n\n    _this.elementRefThumbX = function (ref) {\n      _this.thumbXElement = ref;\n      isFun(_this.props.thumbXProps.elementRef) && _this.props.thumbXProps.elementRef(ref);\n    };\n\n    _this.elementRefThumbY = function (ref) {\n      _this.thumbYElement = ref;\n      isFun(_this.props.thumbYProps.elementRef) && _this.props.thumbYProps.elementRef(ref);\n    };\n\n    _this.handleTrackXClick = function (ev, values) {\n      _this.props.trackXProps.onClick && _this.props.trackXProps.onClick(ev, values);\n\n      if (!_this.scrollerElement || !_this.trackXElement || !_this.thumbXElement || !_this.scrollValues || !_this.scrollValues.scrollXPossible) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      var thumbSize = _this.thumbXElement.clientWidth;\n      var trackInnerSize = getInnerWidth(_this.trackXElement);\n      var thumbOffset = (_this.scrollValues.isRTL && shouldReverseRtlScroll() ? values.offset + thumbSize / 2 - trackInnerSize : values.offset - thumbSize / 2) - ( //@ts-ignore\n      parseFloat(getComputedStyle(_this.trackXElement).paddingLeft) || 0);\n      var target = calcScrollForThumbOffset(_this.scrollValues.scrollWidth, _this.scrollValues.clientWidth, trackInnerSize, thumbSize, thumbOffset);\n\n      if (_this.props.trackClickBehavior === TRACK_CLICK_BEHAVIOR.STEP) {\n        target = (_this.scrollValues.isRTL ? _this.scrollValues.scrollLeft > target : _this.scrollValues.scrollLeft < target) ? _this.scrollValues.scrollLeft + _this.scrollValues.clientWidth : _this.scrollValues.scrollLeft - _this.scrollValues.clientWidth;\n      }\n\n      _this.scrollerElement.scrollLeft = target;\n    };\n\n    _this.handleTrackYClick = function (ev, values) {\n      _this.props.trackYProps.onClick && _this.props.trackYProps.onClick(ev, values);\n\n      if (!_this.scrollerElement || !_this.trackYElement || !_this.thumbYElement || !_this.scrollValues || !_this.scrollValues.scrollYPossible) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      var thumbSize = _this.thumbYElement.clientHeight;\n      var target = calcScrollForThumbOffset(_this.scrollValues.scrollHeight, _this.scrollValues.clientHeight, getInnerHeight(_this.trackYElement), thumbSize, values.offset - thumbSize / 2) - ( //@ts-ignore\n      parseFloat(getComputedStyle(_this.trackYElement).paddingTop) || 0);\n\n      if (_this.props.trackClickBehavior === TRACK_CLICK_BEHAVIOR.JUMP) {\n        _this.scrollerElement.scrollTop = target;\n      } else {\n        _this.scrollerElement.scrollTop = _this.scrollValues.scrollTop < target ? _this.scrollValues.scrollTop + _this.scrollValues.clientHeight : _this.scrollValues.scrollTop - _this.scrollValues.clientHeight;\n      }\n    };\n\n    _this.handleTrackYMouseWheel = function (ev) {\n      var props = _this.props;\n      props.trackYProps && props.trackYProps.onWheel && props.trackYProps.onWheel(ev);\n\n      if (props.disableTracksMousewheelScrolling || props.disableTrackYMousewheelScrolling) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      if (!_this.scrollerElement || _this.scrollValues.scrollYBlocked) {\n        return;\n      }\n\n      _this.scrollTop += ev.deltaY;\n    };\n\n    _this.handleTrackXMouseWheel = function (ev) {\n      var props = _this.props;\n      props.trackXProps && props.trackXProps.onWheel && props.trackXProps.onWheel(ev);\n\n      if (props.disableTracksMousewheelScrolling || props.disableTrackXMousewheelScrolling) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      if (!_this.scrollerElement || _this.scrollValues.scrollXBlocked) {\n        return;\n      }\n\n      _this.scrollLeft += ev.deltaX;\n    };\n\n    _this.handleThumbXDrag = function (data) {\n      var _a;\n\n      if (!_this.trackXElement || !_this.thumbXElement || !_this.scrollerElement || !_this.scrollValues || !_this.scrollValues.scrollXPossible) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      var trackRect = _this.trackXElement.getBoundingClientRect();\n\n      var styles = getComputedStyle(_this.trackXElement);\n      var paddingLeft = parseFloat(styles.paddingLeft) || 0;\n      var paddingRight = parseFloat(styles.paddingRight) || 0;\n      var trackInnerSize = trackRect.width - paddingLeft - paddingRight;\n      var thumbSize = _this.thumbXElement.clientWidth;\n      var offset = _this.scrollValues.isRTL && shouldReverseRtlScroll() ? data.x + thumbSize - trackInnerSize + paddingLeft : data.lastX - paddingLeft;\n      _this.scrollerElement.scrollLeft = calcScrollForThumbOffset(_this.scrollValues.scrollWidth, _this.scrollValues.clientWidth, trackInnerSize, thumbSize, offset);\n\n      if ((_a = _this.props.thumbXProps) === null || _a === void 0 ? void 0 : _a.onDrag) {\n        _this.props.thumbXProps.onDrag(data);\n      }\n    };\n\n    _this.handleThumbXDragEnd = function (data) {\n      var _a;\n\n      _this.handleThumbXDrag(data);\n\n      if ((_a = _this.props.thumbXProps) === null || _a === void 0 ? void 0 : _a.onDragEnd) {\n        _this.props.thumbXProps.onDragEnd(data);\n      }\n    };\n\n    _this.handleThumbYDrag = function (data) {\n      var _a;\n\n      if (!_this.scrollerElement || !_this.trackYElement || !_this.thumbYElement || !_this.scrollValues || !_this.scrollValues.scrollYPossible) {\n        return;\n      }\n\n      _this._scrollDetection();\n\n      var trackRect = _this.trackYElement.getBoundingClientRect();\n\n      var styles = getComputedStyle(_this.trackYElement);\n      var paddingTop = parseFloat(styles.paddingTop) || 0;\n      var paddingBottom = parseFloat(styles.paddingBottom) || 0;\n      var trackInnerSize = trackRect.height - paddingTop - paddingBottom;\n      var thumbSize = _this.thumbYElement.clientHeight;\n      var offset = data.y - paddingTop;\n      _this.scrollerElement.scrollTop = calcScrollForThumbOffset(_this.scrollValues.scrollHeight, _this.scrollValues.clientHeight, trackInnerSize, thumbSize, offset);\n\n      if ((_a = _this.props.thumbYProps) === null || _a === void 0 ? void 0 : _a.onDrag) {\n        _this.props.thumbYProps.onDrag(data);\n      }\n    };\n\n    _this.handleThumbYDragEnd = function (data) {\n      var _a;\n\n      _this.handleThumbYDrag(data);\n\n      if ((_a = _this.props.thumbYProps) === null || _a === void 0 ? void 0 : _a.onDragEnd) {\n        _this.props.thumbYProps.onDragEnd(data);\n      }\n    };\n\n    _this.handleScrollerScroll = function () {\n      _this._scrollDetection();\n    };\n\n    _this._scrollDetection = function () {\n      !_this._scrollDetectionTO && _this.eventEmitter.emit(\"scrollStart\", _this.getScrollState());\n      _this._scrollDetectionTO && global.window && global.window.clearTimeout(_this._scrollDetectionTO);\n      _this._scrollDetectionTO = global.window ? global.window.setTimeout(_this._scrollDetectionCallback, _this.props.scrollDetectionThreshold || 0) : null;\n    };\n\n    _this._scrollDetectionCallback = function () {\n      _this._scrollDetectionTO = null;\n\n      _this.eventEmitter.emit(\"scrollStop\", _this.getScrollState());\n    };\n\n    _this.state = {\n      trackXVisible: false,\n      trackYVisible: false,\n      isRTL: props.rtl\n    };\n    _this.scrollValues = _this.getScrollState(true);\n    _this.eventEmitter = new Emittr(15);\n    props.onUpdate && _this.eventEmitter.on(\"update\", props.onUpdate);\n    props.onScroll && _this.eventEmitter.on(\"scroll\", props.onScroll);\n    props.onScrollStart && _this.eventEmitter.on(\"scrollStart\", props.onScrollStart);\n    props.onScrollStop && _this.eventEmitter.on(\"scrollStop\", props.onScrollStop);\n    _this.id = uuid();\n    return _this;\n  }\n\n  Object.defineProperty(Scrollbar.prototype, \"scrollTop\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.scrollTop;\n      }\n\n      return 0;\n    },\n    set: function set(top) {\n      if (this.scrollerElement) {\n        this.scrollerElement.scrollTop = top;\n        this.update();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Scrollbar.prototype, \"scrollLeft\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.scrollLeft;\n      }\n\n      return 0;\n    },\n    set: function set(left) {\n      if (this.scrollerElement) {\n        this.scrollerElement.scrollLeft = left;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Scrollbar.prototype, \"scrollHeight\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.scrollHeight;\n      }\n\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Scrollbar.prototype, \"scrollWidth\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.scrollWidth;\n      }\n\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Scrollbar.prototype, \"clientHeight\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.clientHeight;\n      }\n\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Scrollbar.prototype, \"clientWidth\", {\n    get: function get() {\n      if (this.scrollerElement) {\n        return this.scrollerElement.clientWidth;\n      }\n\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Scrollbar.calculateStyles = function (props, state, scrollValues, scrollbarWidth) {\n    var _a, _b, _c, _d;\n\n    var useDefaultStyles = !props.noDefaultStyles;\n    return {\n      holder: __assign(__assign(__assign({}, useDefaultStyles && style.holder), {\n        position: \"relative\"\n      }), props.style),\n      wrapper: __assign(__assign(__assign({}, useDefaultStyles && __assign(__assign(__assign({}, style.wrapper), !props.disableTracksWidthCompensation && !props.disableTrackYWidthCompensation && (_a = {}, _a[state.isRTL ? \"left\" : \"right\"] = state.trackYVisible ? 10 : 0, _a)), !props.disableTracksWidthCompensation && !props.disableTrackXWidthCompensation && {\n        bottom: state.trackXVisible ? 10 : 0\n      })), props.wrapperProps.style), {\n        position: \"absolute\",\n        overflow: \"hidden\"\n      }),\n      content: __assign(__assign(__assign(__assign(__assign({}, useDefaultStyles && style.content), props.translateContentSizesToHolder || props.translateContentSizeYToHolder || props.translateContentSizeXToHolder ? {\n        display: \"table-cell\"\n      } : {\n        padding: 0.05\n      }), useDefaultStyles && !(props.translateContentSizesToHolder || props.translateContentSizeYToHolder) && {\n        minHeight: \"100%\"\n      }), useDefaultStyles && !(props.translateContentSizesToHolder || props.translateContentSizeXToHolder) && {\n        minWidth: \"100%\"\n      }), props.contentProps.style),\n      scroller: __assign(__assign(__assign(__assign((_b = {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        paddingBottom: !scrollbarWidth && scrollValues.scrollXPossible ? props.fallbackScrollbarWidth : undefined\n      }, _b[state.isRTL ? \"paddingLeft\" : \"paddingRight\"] = !scrollbarWidth && scrollValues.scrollYPossible ? props.fallbackScrollbarWidth : undefined, _b), props.scrollerProps.style), !isUndef(props.rtl) && {\n        direction: props.rtl ? \"rtl\" : \"ltr\"\n      }), props.momentum && {\n        WebkitOverflowScrolling: \"touch\"\n      }), (_c = {\n        overflowY: scrollValues.scrollYPossible ? \"scroll\" : \"hidden\",\n        overflowX: scrollValues.scrollXPossible ? \"scroll\" : \"hidden\",\n        marginBottom: scrollValues.scrollXPossible ? -(scrollbarWidth || props.fallbackScrollbarWidth) - Number(scrollValues.zoomLevel !== 1) : undefined\n      }, _c[state.isRTL ? \"marginLeft\" : \"marginRight\"] = scrollValues.scrollYPossible ? -(scrollbarWidth || props.fallbackScrollbarWidth) - Number(scrollValues.zoomLevel !== 1) : undefined, _c)),\n      trackX: __assign(__assign(__assign(__assign({}, useDefaultStyles && style.track.common), useDefaultStyles && style.track.x), props.trackXProps.style), !state.trackXVisible && {\n        display: \"none\"\n      }),\n      trackY: __assign(__assign(__assign(__assign(__assign({}, useDefaultStyles && style.track.common), useDefaultStyles && style.track.y), useDefaultStyles && (_d = {}, _d[state.isRTL ? \"left\" : \"right\"] = 0, _d)), props.trackYProps.style), !state.trackYVisible && {\n        display: \"none\"\n      }),\n      thumbX: __assign(__assign(__assign({}, useDefaultStyles && style.thumb.common), useDefaultStyles && style.thumb.x), props.thumbXProps.style),\n      thumbY: __assign(__assign(__assign({}, useDefaultStyles && style.thumb.common), useDefaultStyles && style.thumb.y), props.thumbYProps.style)\n    };\n  };\n\n  Scrollbar.prototype.componentDidMount = function () {\n    if (!this.scrollerElement) {\n      this.setState(function () {\n        throw new Error(\"scroller element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n      });\n      return;\n    }\n\n    if (!this.contentElement) {\n      this.setState(function () {\n        throw new Error(\"content element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n      });\n      return;\n    }\n\n    var props = this.props;\n\n    if (!props.native && !props.mobileNative) {\n      //ToDo: move native state to the state so it can be synchronized\n      if (!this.holderElement) {\n        this.setState(function () {\n          throw new Error(\"holder element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n        });\n        return;\n      }\n\n      if (!this.wrapperElement) {\n        this.setState(function () {\n          throw new Error(\"wrapper element was not created. Possibly you haven't provided HTMLDivElement to renderer's `elementRef` function.\");\n        });\n        return;\n      }\n    }\n\n    Loop.addTarget(this);\n\n    if (!isUndef(props.scrollTop)) {\n      this.scrollerElement.scrollTop = props.scrollTop;\n    }\n\n    if (!isUndef(props.scrollLeft)) {\n      this.scrollerElement.scrollLeft = props.scrollLeft;\n    }\n\n    this.update(true);\n  };\n\n  Scrollbar.prototype.componentWillUnmount = function () {\n    Loop.removeTarget(this);\n  };\n\n  Scrollbar.prototype.componentDidUpdate = function (prevProps, prevState) {\n    if (!this.scrollerElement) {\n      return;\n    }\n\n    var props = this.props;\n\n    if (props.rtl !== prevProps.rtl && props.rtl !== this.state.isRTL) {\n      this.setState({\n        isRTL: props.rtl\n      });\n    }\n\n    if (this.state.isRTL !== prevState.isRTL) {\n      this.update();\n    }\n\n    if (!isUndef(props.scrollTop) && props.scrollTop !== this.scrollerElement.scrollTop) {\n      this.scrollerElement.scrollTop = props.scrollTop;\n    }\n\n    if (!isUndef(props.scrollLeft) && props.scrollLeft !== this.scrollerElement.scrollLeft) {\n      this.scrollerElement.scrollLeft = props.scrollLeft;\n    }\n\n    if (prevProps.onUpdate !== props.onUpdate) {\n      prevProps.onUpdate && this.eventEmitter.off(\"update\", prevProps.onUpdate);\n      props.onUpdate && this.eventEmitter.on(\"update\", props.onUpdate);\n    }\n\n    if (prevProps.onScroll !== props.onScroll) {\n      prevProps.onScroll && this.eventEmitter.off(\"scroll\", prevProps.onScroll);\n      props.onScroll && this.eventEmitter.on(\"scroll\", props.onScroll);\n    }\n\n    if (prevProps.onScrollStart !== props.onScrollStart) {\n      prevProps.onScrollStart && this.eventEmitter.off(\"scrollStart\", prevProps.onScrollStart);\n      props.onScrollStart && this.eventEmitter.on(\"scrollStart\", props.onScrollStart);\n    }\n\n    if (prevProps.onScrollStop !== props.onScrollStop) {\n      prevProps.onScrollStop && this.eventEmitter.off(\"scrollStop\", prevProps.onScrollStop);\n      props.onScrollStop && this.eventEmitter.on(\"scrollStop\", props.onScrollStop);\n    }\n  };\n\n  Scrollbar.prototype.render = function () {\n    var _a = this.props,\n        createContext = _a.createContext,\n        rtl = _a.rtl,\n        native = _a.native,\n        mobileNative = _a.mobileNative,\n        momentum = _a.momentum,\n        noDefaultStyles = _a.noDefaultStyles,\n        disableTracksMousewheelScrolling = _a.disableTracksMousewheelScrolling,\n        disableTrackXMousewheelScrolling = _a.disableTrackXMousewheelScrolling,\n        disableTrackYMousewheelScrolling = _a.disableTrackYMousewheelScrolling,\n        disableTracksWidthCompensation = _a.disableTracksWidthCompensation,\n        disableTrackXWidthCompensation = _a.disableTrackXWidthCompensation,\n        disableTrackYWidthCompensation = _a.disableTrackYWidthCompensation,\n        noScrollX = _a.noScrollX,\n        noScrollY = _a.noScrollY,\n        noScroll = _a.noScroll,\n        permanentTrackX = _a.permanentTrackX,\n        permanentTrackY = _a.permanentTrackY,\n        permanentTracks = _a.permanentTracks,\n        removeTracksWhenNotUsed = _a.removeTracksWhenNotUsed,\n        removeTrackYWhenNotUsed = _a.removeTrackYWhenNotUsed,\n        removeTrackXWhenNotUsed = _a.removeTrackXWhenNotUsed,\n        minimalThumbSize = _a.minimalThumbSize,\n        maximalThumbSize = _a.maximalThumbSize,\n        minimalThumbXSize = _a.minimalThumbXSize,\n        maximalThumbXSize = _a.maximalThumbXSize,\n        minimalThumbYSize = _a.minimalThumbYSize,\n        maximalThumbYSize = _a.maximalThumbYSize,\n        fallbackScrollbarWidth = _a.fallbackScrollbarWidth,\n        scrollTop = _a.scrollTop,\n        scrollLeft = _a.scrollLeft,\n        trackClickBehavior = _a.trackClickBehavior,\n        scrollDetectionThreshold = _a.scrollDetectionThreshold,\n        propsWrapperProps = _a.wrapperProps,\n        propsScrollerProps = _a.scrollerProps,\n        propsContentProps = _a.contentProps,\n        propsTrackXProps = _a.trackXProps,\n        propsTrackYProps = _a.trackYProps,\n        propsThumbXProps = _a.thumbXProps,\n        propsThumbYProps = _a.thumbYProps,\n        propsScrollbarWidth = _a.scrollbarWidth,\n        elementRef = _a.elementRef,\n        onUpdate = _a.onUpdate,\n        onScroll = _a.onScroll,\n        onScrollStart = _a.onScrollStart,\n        onScrollStop = _a.onScrollStop,\n        translateContentSizesToHolder = _a.translateContentSizesToHolder,\n        translateContentSizeYToHolder = _a.translateContentSizeYToHolder,\n        translateContentSizeXToHolder = _a.translateContentSizeXToHolder,\n        children = _a.children,\n        propsHolderProps = __rest(_a, [\"createContext\", \"rtl\", \"native\", \"mobileNative\", \"momentum\", \"noDefaultStyles\", \"disableTracksMousewheelScrolling\", \"disableTrackXMousewheelScrolling\", \"disableTrackYMousewheelScrolling\", \"disableTracksWidthCompensation\", \"disableTrackXWidthCompensation\", \"disableTrackYWidthCompensation\", \"noScrollX\", \"noScrollY\", \"noScroll\", \"permanentTrackX\", \"permanentTrackY\", \"permanentTracks\", \"removeTracksWhenNotUsed\", \"removeTrackYWhenNotUsed\", \"removeTrackXWhenNotUsed\", \"minimalThumbSize\", \"maximalThumbSize\", \"minimalThumbXSize\", \"maximalThumbXSize\", \"minimalThumbYSize\", \"maximalThumbYSize\", \"fallbackScrollbarWidth\", \"scrollTop\", \"scrollLeft\", \"trackClickBehavior\", \"scrollDetectionThreshold\", \"wrapperProps\", \"scrollerProps\", \"contentProps\", \"trackXProps\", \"trackYProps\", \"thumbXProps\", \"thumbYProps\", \"scrollbarWidth\", \"elementRef\", \"onUpdate\", \"onScroll\", \"onScrollStart\", \"onScrollStop\", \"translateContentSizesToHolder\", \"translateContentSizeYToHolder\", \"translateContentSizeXToHolder\", \"children\"]);\n\n    var scrollbarWidth = !isUndef(propsScrollbarWidth) ? propsScrollbarWidth : getScrollbarWidth() || 0;\n\n    if (native || !scrollbarWidth && mobileNative) {\n      this.elementRefHolder(null);\n      this.elementRefWrapper(null);\n      this.elementRefTrackX(null);\n      this.elementRefTrackY(null);\n      this.elementRefThumbX(null);\n      this.elementRefThumbY(null);\n\n      var contentProps_1 = __assign(__assign({}, propsContentProps), {\n        key: \"ScrollbarsCustom-Content\",\n        className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Content\", propsContentProps.className),\n        children: children\n      });\n\n      var scrollerProps_1 = __assign(__assign({}, propsHolderProps), {\n        className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom native\", this.state.trackYVisible && \"trackYVisible\", this.state.trackXVisible && \"trackXVisible\", this.state.isRTL && \"rtl\", propsHolderProps.className),\n        style: __assign(__assign(__assign(__assign({}, propsHolderProps.style), !isUndef(rtl) && {\n          direction: rtl ? \"rtl\" : \"ltr\"\n        }), momentum && {\n          WebkitOverflowScrolling: \"touch\"\n        }), {\n          overflowX: noScroll || noScrollX ? \"hidden\" : permanentTracks || permanentTrackX ? \"scroll\" : \"auto\",\n          overflowY: noScroll || noScrollY ? \"hidden\" : permanentTracks || permanentTrackY ? \"scroll\" : \"auto\"\n        }),\n        onScroll: this.handleScrollerScroll,\n        children: renderDivWithRenderer(contentProps_1, this.elementRefContent),\n        renderer: propsScrollerProps.renderer,\n        elementRef: propsScrollerProps.elementRef\n      });\n\n      return renderDivWithRenderer(scrollerProps_1, this.elementRefScroller);\n    }\n\n    var styles = Scrollbar.calculateStyles(this.props, this.state, this.scrollValues, scrollbarWidth);\n    var holderChildren = [];\n\n    var contentProps = __assign(__assign({}, propsContentProps), {\n      key: \"ScrollbarsCustom-Content\",\n      className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Content\", propsContentProps.className),\n      style: styles.content,\n      children: createContext ? Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(ScrollbarContext.Provider, {\n        value: {\n          parentScrollbar: this\n        },\n        children: children\n      }) : children\n    });\n\n    var scrollerProps = __assign(__assign({}, propsScrollerProps), {\n      key: \"ScrollbarsCustom-Scroller\",\n      className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Scroller\", propsScrollerProps.className),\n      style: styles.scroller,\n      children: renderDivWithRenderer(contentProps, this.elementRefContent),\n      onScroll: this.handleScrollerScroll\n    });\n\n    var wrapperProps = __assign(__assign({}, propsWrapperProps), {\n      key: \"ScrollbarsCustom-Wrapper\",\n      className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom-Wrapper\", propsWrapperProps.className),\n      style: styles.wrapper,\n      children: renderDivWithRenderer(scrollerProps, this.elementRefScroller)\n    });\n\n    holderChildren.push(renderDivWithRenderer(wrapperProps, this.elementRefWrapper));\n\n    if (this.state.trackYVisible || !removeTracksWhenNotUsed && !removeTrackYWhenNotUsed) {\n      var thumbYProps = __assign(__assign({}, propsThumbYProps), {\n        key: \"ScrollbarsCustom-ThumbY\",\n        style: styles.thumbY,\n        elementRef: this.elementRefThumbY,\n        onDrag: this.handleThumbYDrag,\n        onDragEnd: this.handleThumbYDragEnd,\n        axis: AXIS_DIRECTION.Y\n      });\n\n      var trackYProps = __assign(__assign(__assign(__assign({}, propsTrackYProps), {\n        key: \"ScrollbarsCustom-TrackY\",\n        style: styles.trackY,\n        elementRef: this.elementRefTrackY,\n        onClick: this.handleTrackYClick\n      }), (disableTracksMousewheelScrolling || disableTrackYMousewheelScrolling) && {\n        onWheel: this.handleTrackYMouseWheel\n      }), {\n        axis: AXIS_DIRECTION.Y\n      });\n\n      trackYProps.children = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(ScrollbarThumb, __assign({}, thumbYProps));\n      holderChildren.push(Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(ScrollbarTrack, __assign({}, trackYProps)));\n    } else {\n      this.elementRefTrackY(null);\n      this.elementRefThumbY(null);\n    }\n\n    if (this.state.trackXVisible || !removeTracksWhenNotUsed && !removeTrackXWhenNotUsed) {\n      var thumbXProps = __assign(__assign({}, propsThumbXProps), {\n        key: \"ScrollbarsCustom-ThumbX\",\n        style: styles.thumbX,\n        elementRef: this.elementRefThumbX,\n        onDrag: this.handleThumbXDrag,\n        onDragEnd: this.handleThumbXDragEnd,\n        axis: AXIS_DIRECTION.X\n      });\n\n      var trackXProps = __assign(__assign(__assign(__assign({}, propsTrackXProps), {\n        key: \"ScrollbarsCustom-TrackX\",\n        style: styles.trackX,\n        elementRef: this.elementRefTrackX,\n        onClick: this.handleTrackXClick\n      }), (disableTracksMousewheelScrolling || disableTrackXMousewheelScrolling) && {\n        onWheel: this.handleTrackXMouseWheel\n      }), {\n        axis: AXIS_DIRECTION.X\n      });\n\n      trackXProps.children = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(ScrollbarThumb, __assign({}, thumbXProps));\n      holderChildren.push(Object(react__WEBPACK_IMPORTED_MODULE_2__[\"createElement\"])(ScrollbarTrack, __assign({}, trackXProps)));\n    } else {\n      this.elementRefTrackX(null);\n      this.elementRefThumbX(null);\n    }\n\n    var holderProps = __assign(__assign({}, propsHolderProps), {\n      className: Object(cnbuilder__WEBPACK_IMPORTED_MODULE_0__[\"cnb\"])(\"ScrollbarsCustom\", this.state.trackYVisible && \"trackYVisible\", this.state.trackXVisible && \"trackXVisible\", this.state.isRTL && \"rtl\", propsHolderProps.className),\n      style: styles.holder,\n      children: holderChildren\n    });\n\n    return renderDivWithRenderer(holderProps, this.elementRefHolder);\n  };\n\n  Scrollbar.contextType = ScrollbarContext;\n  Scrollbar.propTypes = {\n    createContext: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    rtl: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    native: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    mobileNative: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    momentum: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    noDefaultStyles: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTracksMousewheelScrolling: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTrackXMousewheelScrolling: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTrackYMousewheelScrolling: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTracksWidthCompensation: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTrackXWidthCompensation: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    disableTrackYWidthCompensation: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    minimalThumbSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    maximalThumbSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    minimalThumbXSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    maximalThumbXSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    minimalThumbYSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    maximalThumbYSize: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    noScrollX: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    noScrollY: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    noScroll: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    permanentTrackX: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    permanentTrackY: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    permanentTracks: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    translateContentSizesToHolder: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    translateContentSizeYToHolder: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    translateContentSizeXToHolder: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    removeTracksWhenNotUsed: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    removeTrackYWhenNotUsed: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    removeTrackXWhenNotUsed: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"bool\"],\n    trackClickBehavior: TRACK_CLICK_BEHAVIOR_PROP_TYPE,\n    scrollbarWidth: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    fallbackScrollbarWidth: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    scrollDetectionThreshold: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    scrollTop: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    scrollLeft: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"number\"],\n    className: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"string\"],\n    wrapperProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    contentProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    trackXProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    trackYProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    thumbXProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    thumbYProps: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"object\"],\n    onUpdate: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    onScroll: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    onScrollStart: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"],\n    onScrollStop: prop_types__WEBPACK_IMPORTED_MODULE_1__[\"func\"]\n  };\n  Scrollbar.defaultProps = {\n    momentum: true,\n    minimalThumbSize: 30,\n    fallbackScrollbarWidth: 20,\n    trackClickBehavior: TRACK_CLICK_BEHAVIOR.JUMP,\n    scrollDetectionThreshold: 100,\n    wrapperProps: {},\n    scrollerProps: {},\n    contentProps: {},\n    trackXProps: {},\n    trackYProps: {},\n    thumbXProps: {},\n    thumbYProps: {}\n  };\n  return Scrollbar;\n}(react__WEBPACK_IMPORTED_MODULE_2__[\"Component\"]);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Scrollbar);\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-scrollbars-custom/dist/rsc.esm.js\n");

/***/ }),

/***/ "./node_modules/zoom-level/dist/zoom-level.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/zoom-level/dist/zoom-level.esm.js ***!
  \********************************************************/
/*! exports provided: elementZoomLevel, zoomLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"elementZoomLevel\", function() { return t; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"zoomLevel\", function() { return i; });\nfunction e(e,i,t,o){for(;i>=t&&!e(\"(min-resolution: \"+i/o+\"dppx)\").matches;)i--;return i}function i(i){if(void 0===i&&(i=window),!i)return 1;if(void 0!==i.devicePixelRatio)return i.devicePixelRatio;var t=i.document.frames;return void 0!==t?void 0!==t.devicePixelRatio?t.devicePixelRatio:t.screen.deviceXDPI/t.screen.systemXDPI:void 0!==i.matchMedia?function(i){for(var t=i.matchMedia,o=10,n=.1,r=1,a=o,c=0;c<4;c++)o=(a=10*e(t,o,n,r))+9,n=a,r*=10;return a/r}(i):1}function t(e,t){var o=(e instanceof Element?getComputedStyle(e).zoom:e.zoom)||1;return i(t)*(\"string\"==typeof o?parseFloat(o):o)}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvem9vbS1sZXZlbC9kaXN0L3pvb20tbGV2ZWwuZXNtLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3pvb20tbGV2ZWwvZGlzdC96b29tLWxldmVsLmVzbS5qcz9hMjEzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGUoZSxpLHQsbyl7Zm9yKDtpPj10JiYhZShcIihtaW4tcmVzb2x1dGlvbjogXCIraS9vK1wiZHBweClcIikubWF0Y2hlczspaS0tO3JldHVybiBpfWZ1bmN0aW9uIGkoaSl7aWYodm9pZCAwPT09aSYmKGk9d2luZG93KSwhaSlyZXR1cm4gMTtpZih2b2lkIDAhPT1pLmRldmljZVBpeGVsUmF0aW8pcmV0dXJuIGkuZGV2aWNlUGl4ZWxSYXRpbzt2YXIgdD1pLmRvY3VtZW50LmZyYW1lcztyZXR1cm4gdm9pZCAwIT09dD92b2lkIDAhPT10LmRldmljZVBpeGVsUmF0aW8/dC5kZXZpY2VQaXhlbFJhdGlvOnQuc2NyZWVuLmRldmljZVhEUEkvdC5zY3JlZW4uc3lzdGVtWERQSTp2b2lkIDAhPT1pLm1hdGNoTWVkaWE/ZnVuY3Rpb24oaSl7Zm9yKHZhciB0PWkubWF0Y2hNZWRpYSxvPTEwLG49LjEscj0xLGE9byxjPTA7Yzw0O2MrKylvPShhPTEwKmUodCxvLG4scikpKzksbj1hLHIqPTEwO3JldHVybiBhL3J9KGkpOjF9ZnVuY3Rpb24gdChlLHQpe3ZhciBvPShlIGluc3RhbmNlb2YgRWxlbWVudD9nZXRDb21wdXRlZFN0eWxlKGUpLnpvb206ZS56b29tKXx8MTtyZXR1cm4gaSh0KSooXCJzdHJpbmdcIj09dHlwZW9mIG8/cGFyc2VGbG9hdChvKTpvKX1leHBvcnR7dCBhcyBlbGVtZW50Wm9vbUxldmVsLGkgYXMgem9vbUxldmVsfTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/zoom-level/dist/zoom-level.esm.js\n");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiIwLmluZGV4LmpzIiwic291cmNlUm9vdCI6IiJ9