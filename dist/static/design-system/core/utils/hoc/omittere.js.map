{"version":3,"file":"omittere.js","sources":["../../../src/utils/hoc/omittere.jsx"],"sourcesContent":["import React from 'react'\nimport _ from 'lodash'\n\nimport { getDisplayName } from '../get-display-name'\n\n/**\n * @desc Блокировщик props. Полезно для запрета theme, свойств redux-form в тех случаях, когда используется ...spread свойств\n * omittere - Latin omit\n * @param {Array} omitArray - массив свойств, которые должны быть забыты компонентом\n * @param {String} fallbackName - имя, присваиваемое безымянному компоненту\n * @return {function(*=)} - HOC, запрещающий проброс свойств из omitArray\n * */\nexport const omittere = (omitArray, fallbackName = 'OmittedComponent') => (Component) => {\n    const OmittedComponent = (props) => <Component {..._.omit(props, omitArray)} />\n\n    _.forEach(Component, (prop, key) => {\n        if (key !== 'childContextTypes') {\n            OmittedComponent[key] = prop\n        }\n    })\n    OmittedComponent.displayName = getDisplayName(Component, fallbackName)\n    OmittedComponent.propTypes = _.omit(Component.propTypes, omitArray)\n    OmittedComponent.WrappedComponent = Component\n    OmittedComponent.omitArray = omitArray\n\n    return OmittedComponent\n}\n\n/**\n * @desc тема? Какая тема?\n * @param {Function} Component - компонент, который должен забыть про prop theme. У таких компонентов должна быть заранее задана тема в дефолтных свойствах\n * @return {function(*=)} - компонент, без возможности использовать тему\n * */\nexport const themeKiller = omittere(['theme'], 'UnthemableComponent')\n\nexport const inputMetaOmitter = omittere(['input', 'meta'])\nexport const metaOmitter = omittere([\n    'active',\n    'asyncValidating',\n    'autofilled',\n    'dirty',\n    'dispatch',\n    'hasServerError',\n    'initialValue',\n    'invalid',\n    'pristine',\n    'submitFailed',\n    'submitting',\n    'touched',\n    'valid',\n    'visited',\n    'warning'\n])\n"],"names":["omittere","omitArray","fallbackName","Component","OmittedComponent","props","_","omit","forEach","prop","key","displayName","getDisplayName","propTypes","WrappedComponent","themeKiller","inputMetaOmitter","metaOmitter"],"mappings":";;;;AAKA;;;;;;;;IAOaA,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD;AAAA,MAAYC,YAAZ,uEAA2B,kBAA3B;AAAA,SAAkD,UAACC,SAAD,EAAe;AACrF,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD;AAAA,0BAAW,oBAAC,SAAD,EAAeC,CAAC,CAACC,IAAF,CAAOF,KAAP,EAAcJ,SAAd,CAAf,CAAX;AAAA,KAAzB;;AAEAK,IAAAA,CAAC,CAACE,OAAF,CAAUL,SAAV,EAAqB,UAACM,IAAD,EAAOC,GAAP,EAAe;AAChC,UAAIA,GAAG,KAAK,mBAAZ,EAAiC;AAC7BN,QAAAA,gBAAgB,CAACM,GAAD,CAAhB,GAAwBD,IAAxB;AACH;AACJ,KAJD;;AAKAL,IAAAA,gBAAgB,CAACO,WAAjB,GAA+BC,cAAc,CAACT,SAAD,EAAYD,YAAZ,CAA7C;AACAE,IAAAA,gBAAgB,CAACS,SAAjB,GAA6BP,CAAC,CAACC,IAAF,CAAOJ,SAAS,CAACU,SAAjB,EAA4BZ,SAA5B,CAA7B;AACAG,IAAAA,gBAAgB,CAACU,gBAAjB,GAAoCX,SAApC;AACAC,IAAAA,gBAAgB,CAACH,SAAjB,GAA6BA,SAA7B;AAEA,WAAOG,gBAAP;AACH,GAduB;AAAA;AAgBxB;;;;;;IAKaW,WAAW,GAAGf,QAAQ,CAAC,CAAC,OAAD,CAAD,EAAY,qBAAZ;IAEtBgB,gBAAgB,GAAGhB,QAAQ,CAAC,CAAC,OAAD,EAAU,MAAV,CAAD;IAC3BiB,WAAW,GAAGjB,QAAQ,CAAC,CAChC,QADgC,EAEhC,iBAFgC,EAGhC,YAHgC,EAIhC,OAJgC,EAKhC,UALgC,EAMhC,gBANgC,EAOhC,cAPgC,EAQhC,SARgC,EAShC,UATgC,EAUhC,cAVgC,EAWhC,YAXgC,EAYhC,SAZgC,EAahC,OAbgC,EAchC,SAdgC,EAehC,SAfgC,CAAD;;;;"}