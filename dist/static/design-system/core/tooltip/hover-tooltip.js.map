{"version":3,"file":"hover-tooltip.js","sources":["../../src/tooltip/hover-tooltip.jsx"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\n\nimport { Tooltip } from './tooltip'\n\n/* eslint-disable valid-jsdoc, comment: некорректный парсинг jsdoc */\n/**\n * [Zeplin](https://app.zeplin.io/project/59312e1ebdf1da6fc8d37ffb/dashboard?q=Tooltip)\n * Компонент вывода всплывающей подсказки по наведению\n *\n * @param {Object} props - свойства компонента\n * @return {JSX} - компонент\n */\nexport class HoverTooltip extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.node, // eslint-disable-line react/no-unused-prop-types, comment: более краткая запись компонента, но в API указать надо\n        onOpen: PropTypes.func,\n        onClose: PropTypes.func,\n        forceOpened: PropTypes.bool\n    }\n\n    static defaultProps = {\n        children: void 0,\n        onOpen: _.noop,\n        onClose: _.noop,\n        forceOpened: void 0\n    }\n\n    state = {\n        isOpened: false\n    }\n\n    handleTooltipFocus = (event) => {\n        if (!this.state.isOpened) {\n            this.setState({\n                isOpened: true\n            }, () => this.props.onOpen?.(event))\n        }\n    }\n\n    handleTooltipBlur = (event) => {\n        if (this.state.isOpened) {\n            this.setState({\n                isOpened: false\n            }, () => this.props.onClose?.(event))\n        }\n    }\n\n    render () {\n        const passedProps = _(this.props)\n            .omit(['onOpen', 'onClose', 'forceOpened'])\n            .extend({\n                onFocus: this.handleTooltipFocus,\n                onBlur: this.handleTooltipBlur,\n                onMouseOver: this.handleTooltipFocus,\n                onMouseLeave: this.handleTooltipBlur,\n                forceOpened: this.props.forceOpened || this.state.isOpened\n            })\n            .value()\n\n        return <Tooltip {...passedProps} />\n    }\n}\n\nHoverTooltip.displayName = 'Tooltip.Hover'\n"],"names":["HoverTooltip","isOpened","event","state","setState","props","onOpen","onClose","passedProps","_","omit","extend","onFocus","handleTooltipFocus","onBlur","handleTooltipBlur","onMouseOver","onMouseLeave","forceOpened","value","React","PureComponent","children","PropTypes","node","func","bool","noop","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;;;;;;;IAOaA,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,4DAeY;AACJC,MAAAA,QAAQ,EAAE;AADN,KAfZ;;AAAA,yEAmByB,UAACC,KAAD,EAAW;AAC5B,UAAI,CAAC,MAAKC,KAAL,CAAWF,QAAhB,EAA0B;AACtB,cAAKG,QAAL,CAAc;AACVH,UAAAA,QAAQ,EAAE;AADA,SAAd,EAEG;AAAA;;AAAA,uCAAM,qBAAKI,KAAL,EAAWC,MAAjB,uDAAM,qCAAoBJ,KAApB,CAAN;AAAA,SAFH;AAGH;AACJ,KAzBL;;AAAA,wEA2BwB,UAACA,KAAD,EAAW;AAC3B,UAAI,MAAKC,KAAL,CAAWF,QAAf,EAAyB;AACrB,cAAKG,QAAL,CAAc;AACVH,UAAAA,QAAQ,EAAE;AADA,SAAd,EAEG;AAAA;;AAAA,wCAAM,sBAAKI,KAAL,EAAWE,OAAjB,wDAAM,uCAAqBL,KAArB,CAAN;AAAA,SAFH;AAGH;AACJ,KAjCL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAmCc;AACN,UAAMM,WAAW,GAAGC,CAAC,CAAC,KAAKJ,KAAN,CAAD,CACfK,IADe,CACV,CAAC,QAAD,EAAW,SAAX,EAAsB,aAAtB,CADU,EAEfC,MAFe,CAER;AACJC,QAAAA,OAAO,EAAE,KAAKC,kBADV;AAEJC,QAAAA,MAAM,EAAE,KAAKC,iBAFT;AAGJC,QAAAA,WAAW,EAAE,KAAKH,kBAHd;AAIJI,QAAAA,YAAY,EAAE,KAAKF,iBAJf;AAKJG,QAAAA,WAAW,EAAE,KAAKb,KAAL,CAAWa,WAAX,IAA0B,KAAKf,KAAL,CAAWF;AAL9C,OAFQ,EASfkB,KATe,EAApB;;AAWA,0BAAO,oBAAC,OAAD,EAAaX,WAAb,CAAP;AACH;AAhDL;;AAAA;AAAA,EAAkCY,KAAK,CAACC,aAAxC;;gBAAarB,2BACU;AACfsB,EAAAA,QAAQ,EAAEC,SAAS,CAACC,IADL;AACW;AAC1BlB,EAAAA,MAAM,EAAEiB,SAAS,CAACE,IAFH;AAGflB,EAAAA,OAAO,EAAEgB,SAAS,CAACE,IAHJ;AAIfP,EAAAA,WAAW,EAAEK,SAAS,CAACG;AAJR;;gBADV1B,8BAQa;AAClBsB,EAAAA,QAAQ,EAAE,KAAK,CADG;AAElBhB,EAAAA,MAAM,EAAEG,CAAC,CAACkB,IAFQ;AAGlBpB,EAAAA,OAAO,EAAEE,CAAC,CAACkB,IAHO;AAIlBT,EAAAA,WAAW,EAAE,KAAK;AAJA;;AA2C1BlB,YAAY,CAAC4B,WAAb,GAA2B,eAA3B;;;;"}